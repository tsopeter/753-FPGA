//Numpy array shape [676, 1]
//Min -0.125000000000
//Max 0.125000000000
//Number of zeros 275

#ifndef W10_H_
#define W10_H_

#ifndef __SYNTHESIS__
weight10_t w10[676];
#else
weight10_t w10[676] = {};

#endif

#endif
