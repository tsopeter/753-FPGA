// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config20_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        data_8_val,
        data_9_val,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_0_val;
input  [15:0] data_1_val;
input  [15:0] data_2_val;
input  [15:0] data_3_val;
input  [15:0] data_4_val;
input  [15:0] data_5_val;
input  [15:0] data_6_val;
input  [15:0] data_7_val;
input  [15:0] data_8_val;
input  [15:0] data_9_val;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln46_fu_475_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] w20_address0;
wire  signed [4:0] w20_q0;
reg   [0:0] do_init_reg_159;
reg   [3:0] w_index3_reg_175;
reg   [15:0] data_0_val5_rewind_reg_190;
reg   [15:0] data_1_val6_rewind_reg_204;
reg   [15:0] data_2_val7_rewind_reg_218;
reg   [15:0] data_3_val8_rewind_reg_232;
reg   [15:0] data_4_val9_rewind_reg_246;
reg   [15:0] data_5_val10_rewind_reg_260;
reg   [15:0] data_6_val11_rewind_reg_274;
reg   [15:0] data_7_val12_rewind_reg_288;
reg   [15:0] data_8_val13_rewind_reg_302;
reg   [15:0] data_9_val14_rewind_reg_316;
reg  signed [23:0] empty_reg_330;
wire   [3:0] w_index_fu_469_p2;
reg   [3:0] w_index_reg_614;
reg   [0:0] icmp_ln46_reg_619;
wire  signed [23:0] grp_fu_550_p3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_do_init_phi_fu_163_p6;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_w_index3_phi_fu_179_p6;
reg   [15:0] ap_phi_mux_data_0_val5_phi_phi_fu_348_p4;
reg   [15:0] ap_phi_mux_data_1_val6_phi_phi_fu_360_p4;
reg   [15:0] ap_phi_mux_data_2_val7_phi_phi_fu_372_p4;
reg   [15:0] ap_phi_mux_data_3_val8_phi_phi_fu_384_p4;
reg   [15:0] ap_phi_mux_data_4_val9_phi_phi_fu_396_p4;
reg   [15:0] ap_phi_mux_data_5_val10_phi_phi_fu_408_p4;
reg   [15:0] ap_phi_mux_data_6_val11_phi_phi_fu_420_p4;
reg   [15:0] ap_phi_mux_data_7_val12_phi_phi_fu_432_p4;
reg   [15:0] ap_phi_mux_data_8_val13_phi_phi_fu_444_p4;
reg   [15:0] ap_phi_mux_data_9_val14_phi_phi_fu_456_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_data_0_val5_phi_reg_344;
reg   [15:0] ap_phi_reg_pp0_iter1_data_0_val5_phi_reg_344;
wire   [15:0] ap_phi_reg_pp0_iter0_data_1_val6_phi_reg_356;
reg   [15:0] ap_phi_reg_pp0_iter1_data_1_val6_phi_reg_356;
wire   [15:0] ap_phi_reg_pp0_iter0_data_2_val7_phi_reg_368;
reg   [15:0] ap_phi_reg_pp0_iter1_data_2_val7_phi_reg_368;
wire   [15:0] ap_phi_reg_pp0_iter0_data_3_val8_phi_reg_380;
reg   [15:0] ap_phi_reg_pp0_iter1_data_3_val8_phi_reg_380;
wire   [15:0] ap_phi_reg_pp0_iter0_data_4_val9_phi_reg_392;
reg   [15:0] ap_phi_reg_pp0_iter1_data_4_val9_phi_reg_392;
wire   [15:0] ap_phi_reg_pp0_iter0_data_5_val10_phi_reg_404;
reg   [15:0] ap_phi_reg_pp0_iter1_data_5_val10_phi_reg_404;
wire   [15:0] ap_phi_reg_pp0_iter0_data_6_val11_phi_reg_416;
reg   [15:0] ap_phi_reg_pp0_iter1_data_6_val11_phi_reg_416;
wire   [15:0] ap_phi_reg_pp0_iter0_data_7_val12_phi_reg_428;
reg   [15:0] ap_phi_reg_pp0_iter1_data_7_val12_phi_reg_428;
wire   [15:0] ap_phi_reg_pp0_iter0_data_8_val13_phi_reg_440;
reg   [15:0] ap_phi_reg_pp0_iter1_data_8_val13_phi_reg_440;
wire   [15:0] ap_phi_reg_pp0_iter0_data_9_val14_phi_reg_452;
reg   [15:0] ap_phi_reg_pp0_iter1_data_9_val14_phi_reg_452;
wire   [63:0] zext_ln46_fu_464_p1;
reg    w20_ce0_local;
wire   [15:0] a_fu_481_p21;
wire  signed [15:0] a_fu_481_p23;
reg   [15:0] ap_return_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_150;
reg    ap_condition_37;
wire   [3:0] a_fu_481_p1;
wire   [3:0] a_fu_481_p3;
wire   [3:0] a_fu_481_p5;
wire   [3:0] a_fu_481_p7;
wire   [3:0] a_fu_481_p9;
wire   [3:0] a_fu_481_p11;
wire   [3:0] a_fu_481_p13;
wire   [3:0] a_fu_481_p15;
wire  signed [3:0] a_fu_481_p17;
wire  signed [3:0] a_fu_481_p19;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 16'd0;
end

myproject_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config20_s_w20_ROM_NP_7jG #(
    .DataWidth( 5 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
w20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w20_address0),
    .ce0(w20_ce0_local),
    .q0(w20_q0)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_21_4_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 16 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 16 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 16 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 16 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 16 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 16 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 16 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 16 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
sparsemux_21_4_16_1_1_U681(
    .din0(ap_phi_mux_data_0_val5_phi_phi_fu_348_p4),
    .din1(ap_phi_mux_data_1_val6_phi_phi_fu_360_p4),
    .din2(ap_phi_mux_data_2_val7_phi_phi_fu_372_p4),
    .din3(ap_phi_mux_data_3_val8_phi_phi_fu_384_p4),
    .din4(ap_phi_mux_data_4_val9_phi_phi_fu_396_p4),
    .din5(ap_phi_mux_data_5_val10_phi_phi_fu_408_p4),
    .din6(ap_phi_mux_data_6_val11_phi_phi_fu_420_p4),
    .din7(ap_phi_mux_data_7_val12_phi_phi_fu_432_p4),
    .din8(ap_phi_mux_data_8_val13_phi_phi_fu_444_p4),
    .din9(ap_phi_mux_data_9_val14_phi_phi_fu_456_p4),
    .def(a_fu_481_p21),
    .sel(w_index3_reg_175),
    .dout(a_fu_481_p23)
);

myproject_mac_muladd_16s_5s_24s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_5s_24s_24_1_1_U682(
    .din0(a_fu_481_p23),
    .din1(w20_q0),
    .din2(empty_reg_330),
    .dout(grp_fu_550_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_619 == 1'd1))) begin
            ap_return_preg <= {{grp_fu_550_p3[19:4]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_163_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_0_val5_phi_reg_344 <= data_0_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_0_val5_phi_reg_344 <= ap_phi_reg_pp0_iter0_data_0_val5_phi_reg_344;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_163_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_1_val6_phi_reg_356 <= data_1_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_1_val6_phi_reg_356 <= ap_phi_reg_pp0_iter0_data_1_val6_phi_reg_356;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_163_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_2_val7_phi_reg_368 <= data_2_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_2_val7_phi_reg_368 <= ap_phi_reg_pp0_iter0_data_2_val7_phi_reg_368;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_163_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_3_val8_phi_reg_380 <= data_3_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_3_val8_phi_reg_380 <= ap_phi_reg_pp0_iter0_data_3_val8_phi_reg_380;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_163_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_4_val9_phi_reg_392 <= data_4_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_4_val9_phi_reg_392 <= ap_phi_reg_pp0_iter0_data_4_val9_phi_reg_392;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_163_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_5_val10_phi_reg_404 <= data_5_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_5_val10_phi_reg_404 <= ap_phi_reg_pp0_iter0_data_5_val10_phi_reg_404;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_163_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_6_val11_phi_reg_416 <= data_6_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_6_val11_phi_reg_416 <= ap_phi_reg_pp0_iter0_data_6_val11_phi_reg_416;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_163_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_7_val12_phi_reg_428 <= data_7_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_7_val12_phi_reg_428 <= ap_phi_reg_pp0_iter0_data_7_val12_phi_reg_428;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_163_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_8_val13_phi_reg_440 <= data_8_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_8_val13_phi_reg_440 <= ap_phi_reg_pp0_iter0_data_8_val13_phi_reg_440;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_163_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_9_val14_phi_reg_452 <= data_9_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_9_val14_phi_reg_452 <= ap_phi_reg_pp0_iter0_data_9_val14_phi_reg_452;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_619 == 1'd0))) begin
        do_init_reg_159 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_619 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_159 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_619 == 1'd0))) begin
        empty_reg_330 <= grp_fu_550_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_619 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        empty_reg_330 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_619 == 1'd0))) begin
        w_index3_reg_175 <= w_index_reg_614;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_619 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index3_reg_175 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_619 == 1'd0))) begin
        data_0_val5_rewind_reg_190 <= ap_phi_mux_data_0_val5_phi_phi_fu_348_p4;
        data_1_val6_rewind_reg_204 <= ap_phi_mux_data_1_val6_phi_phi_fu_360_p4;
        data_2_val7_rewind_reg_218 <= ap_phi_mux_data_2_val7_phi_phi_fu_372_p4;
        data_3_val8_rewind_reg_232 <= ap_phi_mux_data_3_val8_phi_phi_fu_384_p4;
        data_4_val9_rewind_reg_246 <= ap_phi_mux_data_4_val9_phi_phi_fu_396_p4;
        data_5_val10_rewind_reg_260 <= ap_phi_mux_data_5_val10_phi_phi_fu_408_p4;
        data_6_val11_rewind_reg_274 <= ap_phi_mux_data_6_val11_phi_phi_fu_420_p4;
        data_7_val12_rewind_reg_288 <= ap_phi_mux_data_7_val12_phi_phi_fu_432_p4;
        data_8_val13_rewind_reg_302 <= ap_phi_mux_data_8_val13_phi_phi_fu_444_p4;
        data_9_val14_rewind_reg_316 <= ap_phi_mux_data_9_val14_phi_phi_fu_456_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln46_reg_619 <= icmp_ln46_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_614 <= w_index_fu_469_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_619 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((do_init_reg_159 == 1'd0)) begin
        ap_phi_mux_data_0_val5_phi_phi_fu_348_p4 = data_0_val5_rewind_reg_190;
    end else begin
        ap_phi_mux_data_0_val5_phi_phi_fu_348_p4 = ap_phi_reg_pp0_iter1_data_0_val5_phi_reg_344;
    end
end

always @ (*) begin
    if ((do_init_reg_159 == 1'd0)) begin
        ap_phi_mux_data_1_val6_phi_phi_fu_360_p4 = data_1_val6_rewind_reg_204;
    end else begin
        ap_phi_mux_data_1_val6_phi_phi_fu_360_p4 = ap_phi_reg_pp0_iter1_data_1_val6_phi_reg_356;
    end
end

always @ (*) begin
    if ((do_init_reg_159 == 1'd0)) begin
        ap_phi_mux_data_2_val7_phi_phi_fu_372_p4 = data_2_val7_rewind_reg_218;
    end else begin
        ap_phi_mux_data_2_val7_phi_phi_fu_372_p4 = ap_phi_reg_pp0_iter1_data_2_val7_phi_reg_368;
    end
end

always @ (*) begin
    if ((do_init_reg_159 == 1'd0)) begin
        ap_phi_mux_data_3_val8_phi_phi_fu_384_p4 = data_3_val8_rewind_reg_232;
    end else begin
        ap_phi_mux_data_3_val8_phi_phi_fu_384_p4 = ap_phi_reg_pp0_iter1_data_3_val8_phi_reg_380;
    end
end

always @ (*) begin
    if ((do_init_reg_159 == 1'd0)) begin
        ap_phi_mux_data_4_val9_phi_phi_fu_396_p4 = data_4_val9_rewind_reg_246;
    end else begin
        ap_phi_mux_data_4_val9_phi_phi_fu_396_p4 = ap_phi_reg_pp0_iter1_data_4_val9_phi_reg_392;
    end
end

always @ (*) begin
    if ((do_init_reg_159 == 1'd0)) begin
        ap_phi_mux_data_5_val10_phi_phi_fu_408_p4 = data_5_val10_rewind_reg_260;
    end else begin
        ap_phi_mux_data_5_val10_phi_phi_fu_408_p4 = ap_phi_reg_pp0_iter1_data_5_val10_phi_reg_404;
    end
end

always @ (*) begin
    if ((do_init_reg_159 == 1'd0)) begin
        ap_phi_mux_data_6_val11_phi_phi_fu_420_p4 = data_6_val11_rewind_reg_274;
    end else begin
        ap_phi_mux_data_6_val11_phi_phi_fu_420_p4 = ap_phi_reg_pp0_iter1_data_6_val11_phi_reg_416;
    end
end

always @ (*) begin
    if ((do_init_reg_159 == 1'd0)) begin
        ap_phi_mux_data_7_val12_phi_phi_fu_432_p4 = data_7_val12_rewind_reg_288;
    end else begin
        ap_phi_mux_data_7_val12_phi_phi_fu_432_p4 = ap_phi_reg_pp0_iter1_data_7_val12_phi_reg_428;
    end
end

always @ (*) begin
    if ((do_init_reg_159 == 1'd0)) begin
        ap_phi_mux_data_8_val13_phi_phi_fu_444_p4 = data_8_val13_rewind_reg_302;
    end else begin
        ap_phi_mux_data_8_val13_phi_phi_fu_444_p4 = ap_phi_reg_pp0_iter1_data_8_val13_phi_reg_440;
    end
end

always @ (*) begin
    if ((do_init_reg_159 == 1'd0)) begin
        ap_phi_mux_data_9_val14_phi_phi_fu_456_p4 = data_9_val14_rewind_reg_316;
    end else begin
        ap_phi_mux_data_9_val14_phi_phi_fu_456_p4 = ap_phi_reg_pp0_iter1_data_9_val14_phi_reg_452;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_150)) begin
        if ((icmp_ln46_reg_619 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_163_p6 = 1'd1;
        end else if ((icmp_ln46_reg_619 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_163_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_163_p6 = do_init_reg_159;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_163_p6 = do_init_reg_159;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_150)) begin
        if ((icmp_ln46_reg_619 == 1'd1)) begin
            ap_phi_mux_w_index3_phi_fu_179_p6 = 4'd0;
        end else if ((icmp_ln46_reg_619 == 1'd0)) begin
            ap_phi_mux_w_index3_phi_fu_179_p6 = w_index_reg_614;
        end else begin
            ap_phi_mux_w_index3_phi_fu_179_p6 = w_index3_reg_175;
        end
    end else begin
        ap_phi_mux_w_index3_phi_fu_179_p6 = w_index3_reg_175;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln46_fu_475_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_619 == 1'd1))) begin
        ap_return = {{grp_fu_550_p3[19:4]}};
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w20_ce0_local = 1'b1;
    end else begin
        w20_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_481_p21 = 'bx;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_150 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_37 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_data_0_val5_phi_reg_344 = 'bx;

assign ap_phi_reg_pp0_iter0_data_1_val6_phi_reg_356 = 'bx;

assign ap_phi_reg_pp0_iter0_data_2_val7_phi_reg_368 = 'bx;

assign ap_phi_reg_pp0_iter0_data_3_val8_phi_reg_380 = 'bx;

assign ap_phi_reg_pp0_iter0_data_4_val9_phi_reg_392 = 'bx;

assign ap_phi_reg_pp0_iter0_data_5_val10_phi_reg_404 = 'bx;

assign ap_phi_reg_pp0_iter0_data_6_val11_phi_reg_416 = 'bx;

assign ap_phi_reg_pp0_iter0_data_7_val12_phi_reg_428 = 'bx;

assign ap_phi_reg_pp0_iter0_data_8_val13_phi_reg_440 = 'bx;

assign ap_phi_reg_pp0_iter0_data_9_val14_phi_reg_452 = 'bx;

assign icmp_ln46_fu_475_p2 = ((ap_phi_mux_w_index3_phi_fu_179_p6 == 4'd9) ? 1'b1 : 1'b0);

assign w20_address0 = zext_ln46_fu_464_p1;

assign w_index_fu_469_p2 = (ap_phi_mux_w_index3_phi_fu_179_p6 + 4'd1);

assign zext_ln46_fu_464_p1 = ap_phi_mux_w_index3_phi_fu_179_p6;

endmodule //myproject_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config20_s
