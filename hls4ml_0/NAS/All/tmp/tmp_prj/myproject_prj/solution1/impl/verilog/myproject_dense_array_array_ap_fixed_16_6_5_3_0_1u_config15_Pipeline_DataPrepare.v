// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_array_array_ap_fixed_16_6_5_3_0_1u_config15_Pipeline_DataPrepare (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer13_out_dout,
        layer13_out_empty_n,
        layer13_out_read,
        layer13_out_num_data_valid,
        layer13_out_fifo_cap,
        data_53_out,
        data_53_out_ap_vld,
        data_52_out,
        data_52_out_ap_vld,
        data_51_out,
        data_51_out_ap_vld,
        data_50_out,
        data_50_out_ap_vld,
        data_49_out,
        data_49_out_ap_vld,
        data_48_out,
        data_48_out_ap_vld,
        data_47_out,
        data_47_out_ap_vld,
        data_46_out,
        data_46_out_ap_vld,
        data_45_out,
        data_45_out_ap_vld,
        data_44_out,
        data_44_out_ap_vld,
        data_43_out,
        data_43_out_ap_vld,
        data_42_out,
        data_42_out_ap_vld,
        data_41_out,
        data_41_out_ap_vld,
        data_40_out,
        data_40_out_ap_vld,
        data_39_out,
        data_39_out_ap_vld,
        data_38_out,
        data_38_out_ap_vld,
        data_37_out,
        data_37_out_ap_vld,
        data_36_out,
        data_36_out_ap_vld,
        data_35_out,
        data_35_out_ap_vld,
        data_34_out,
        data_34_out_ap_vld,
        data_33_out,
        data_33_out_ap_vld,
        data_32_out,
        data_32_out_ap_vld,
        data_31_out,
        data_31_out_ap_vld,
        data_30_out,
        data_30_out_ap_vld,
        data_29_out,
        data_29_out_ap_vld,
        data_28_out,
        data_28_out_ap_vld,
        data_27_out,
        data_27_out_ap_vld,
        data_26_out,
        data_26_out_ap_vld,
        data_25_out,
        data_25_out_ap_vld,
        data_24_out,
        data_24_out_ap_vld,
        data_23_out,
        data_23_out_ap_vld,
        data_22_out,
        data_22_out_ap_vld,
        data_21_out,
        data_21_out_ap_vld,
        data_20_out,
        data_20_out_ap_vld,
        data_19_out,
        data_19_out_ap_vld,
        data_18_out,
        data_18_out_ap_vld,
        data_17_out,
        data_17_out_ap_vld,
        data_16_out,
        data_16_out_ap_vld,
        data_15_out,
        data_15_out_ap_vld,
        data_14_out,
        data_14_out_ap_vld,
        data_13_out,
        data_13_out_ap_vld,
        data_12_out,
        data_12_out_ap_vld,
        data_11_out,
        data_11_out_ap_vld,
        data_10_out,
        data_10_out_ap_vld,
        data_9_out,
        data_9_out_ap_vld,
        data_8_out,
        data_8_out_ap_vld,
        data_7_out,
        data_7_out_ap_vld,
        data_6_out,
        data_6_out_ap_vld,
        data_5_out,
        data_5_out_ap_vld,
        data_4_out,
        data_4_out_ap_vld,
        data_3_out,
        data_3_out_ap_vld,
        data_2_out,
        data_2_out_ap_vld,
        data_1_out,
        data_1_out_ap_vld,
        data_out,
        data_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [35:0] layer13_out_dout;
input   layer13_out_empty_n;
output   layer13_out_read;
input  [4:0] layer13_out_num_data_valid;
input  [4:0] layer13_out_fifo_cap;
output  [5:0] data_53_out;
output   data_53_out_ap_vld;
output  [5:0] data_52_out;
output   data_52_out_ap_vld;
output  [5:0] data_51_out;
output   data_51_out_ap_vld;
output  [5:0] data_50_out;
output   data_50_out_ap_vld;
output  [5:0] data_49_out;
output   data_49_out_ap_vld;
output  [5:0] data_48_out;
output   data_48_out_ap_vld;
output  [5:0] data_47_out;
output   data_47_out_ap_vld;
output  [5:0] data_46_out;
output   data_46_out_ap_vld;
output  [5:0] data_45_out;
output   data_45_out_ap_vld;
output  [5:0] data_44_out;
output   data_44_out_ap_vld;
output  [5:0] data_43_out;
output   data_43_out_ap_vld;
output  [5:0] data_42_out;
output   data_42_out_ap_vld;
output  [5:0] data_41_out;
output   data_41_out_ap_vld;
output  [5:0] data_40_out;
output   data_40_out_ap_vld;
output  [5:0] data_39_out;
output   data_39_out_ap_vld;
output  [5:0] data_38_out;
output   data_38_out_ap_vld;
output  [5:0] data_37_out;
output   data_37_out_ap_vld;
output  [5:0] data_36_out;
output   data_36_out_ap_vld;
output  [5:0] data_35_out;
output   data_35_out_ap_vld;
output  [5:0] data_34_out;
output   data_34_out_ap_vld;
output  [5:0] data_33_out;
output   data_33_out_ap_vld;
output  [5:0] data_32_out;
output   data_32_out_ap_vld;
output  [5:0] data_31_out;
output   data_31_out_ap_vld;
output  [5:0] data_30_out;
output   data_30_out_ap_vld;
output  [5:0] data_29_out;
output   data_29_out_ap_vld;
output  [5:0] data_28_out;
output   data_28_out_ap_vld;
output  [5:0] data_27_out;
output   data_27_out_ap_vld;
output  [5:0] data_26_out;
output   data_26_out_ap_vld;
output  [5:0] data_25_out;
output   data_25_out_ap_vld;
output  [5:0] data_24_out;
output   data_24_out_ap_vld;
output  [5:0] data_23_out;
output   data_23_out_ap_vld;
output  [5:0] data_22_out;
output   data_22_out_ap_vld;
output  [5:0] data_21_out;
output   data_21_out_ap_vld;
output  [5:0] data_20_out;
output   data_20_out_ap_vld;
output  [5:0] data_19_out;
output   data_19_out_ap_vld;
output  [5:0] data_18_out;
output   data_18_out_ap_vld;
output  [5:0] data_17_out;
output   data_17_out_ap_vld;
output  [5:0] data_16_out;
output   data_16_out_ap_vld;
output  [5:0] data_15_out;
output   data_15_out_ap_vld;
output  [5:0] data_14_out;
output   data_14_out_ap_vld;
output  [5:0] data_13_out;
output   data_13_out_ap_vld;
output  [5:0] data_12_out;
output   data_12_out_ap_vld;
output  [5:0] data_11_out;
output   data_11_out_ap_vld;
output  [5:0] data_10_out;
output   data_10_out_ap_vld;
output  [5:0] data_9_out;
output   data_9_out_ap_vld;
output  [5:0] data_8_out;
output   data_8_out_ap_vld;
output  [5:0] data_7_out;
output   data_7_out_ap_vld;
output  [5:0] data_6_out;
output   data_6_out_ap_vld;
output  [5:0] data_5_out;
output   data_5_out_ap_vld;
output  [5:0] data_4_out;
output   data_4_out_ap_vld;
output  [5:0] data_3_out;
output   data_3_out_ap_vld;
output  [5:0] data_2_out;
output   data_2_out_ap_vld;
output  [5:0] data_1_out;
output   data_1_out_ap_vld;
output  [5:0] data_out;
output   data_out_ap_vld;

reg ap_idle;
reg layer13_out_read;
reg data_53_out_ap_vld;
reg data_52_out_ap_vld;
reg data_51_out_ap_vld;
reg data_50_out_ap_vld;
reg data_49_out_ap_vld;
reg data_48_out_ap_vld;
reg data_47_out_ap_vld;
reg data_46_out_ap_vld;
reg data_45_out_ap_vld;
reg data_44_out_ap_vld;
reg data_43_out_ap_vld;
reg data_42_out_ap_vld;
reg data_41_out_ap_vld;
reg data_40_out_ap_vld;
reg data_39_out_ap_vld;
reg data_38_out_ap_vld;
reg data_37_out_ap_vld;
reg data_36_out_ap_vld;
reg data_35_out_ap_vld;
reg data_34_out_ap_vld;
reg data_33_out_ap_vld;
reg data_32_out_ap_vld;
reg data_31_out_ap_vld;
reg data_30_out_ap_vld;
reg data_29_out_ap_vld;
reg data_28_out_ap_vld;
reg data_27_out_ap_vld;
reg data_26_out_ap_vld;
reg data_25_out_ap_vld;
reg data_24_out_ap_vld;
reg data_23_out_ap_vld;
reg data_22_out_ap_vld;
reg data_21_out_ap_vld;
reg data_20_out_ap_vld;
reg data_19_out_ap_vld;
reg data_18_out_ap_vld;
reg data_17_out_ap_vld;
reg data_16_out_ap_vld;
reg data_15_out_ap_vld;
reg data_14_out_ap_vld;
reg data_13_out_ap_vld;
reg data_12_out_ap_vld;
reg data_11_out_ap_vld;
reg data_10_out_ap_vld;
reg data_9_out_ap_vld;
reg data_8_out_ap_vld;
reg data_7_out_ap_vld;
reg data_6_out_ap_vld;
reg data_5_out_ap_vld;
reg data_4_out_ap_vld;
reg data_3_out_ap_vld;
reg data_2_out_ap_vld;
reg data_1_out_ap_vld;
reg data_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln33_fu_1118_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    layer13_out_blk_n;
reg   [3:0] i_in109_fu_176;
wire   [3:0] i_in_fu_842_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_in109_load;
wire   [3:0] i_in109_load_load_fu_785_p1;
reg   [5:0] p_0_5_0_0_01072_fu_180;
reg   [5:0] p_0_4_0_0_01054_fu_184;
reg   [5:0] p_0_3_0_0_01036_fu_188;
reg   [5:0] p_0_2_0_0_01018_fu_192;
reg   [5:0] p_0_1_0_0_09910_fu_196;
reg   [5:0] p_0_0_0_0_09712_fu_200;
wire   [5:0] trunc_ln35_fu_788_p1;
reg   [5:0] p_0_5_0_0_09514_fu_204;
reg   [5:0] p_0_4_0_0_09316_fu_208;
reg   [5:0] p_0_3_0_0_09118_fu_212;
reg   [5:0] p_0_2_0_0_08920_fu_216;
reg   [5:0] p_0_1_0_0_08722_fu_220;
reg   [5:0] p_0_0_0_0_08524_fu_224;
reg   [5:0] p_0_5_0_0_08326_fu_228;
reg   [5:0] p_0_4_0_0_08128_fu_232;
reg   [5:0] p_0_3_0_0_07930_fu_236;
reg   [5:0] p_0_2_0_0_07732_fu_240;
reg   [5:0] p_0_1_0_0_07534_fu_244;
reg   [5:0] p_0_0_0_0_07336_fu_248;
reg   [5:0] p_0_5_0_0_07138_fu_252;
reg   [5:0] p_0_4_0_0_06940_fu_256;
reg   [5:0] p_0_3_0_0_06742_fu_260;
reg   [5:0] p_0_2_0_0_06544_fu_264;
reg   [5:0] p_0_1_0_0_06346_fu_268;
reg   [5:0] p_0_0_0_0_06148_fu_272;
reg   [5:0] p_0_5_0_0_05950_fu_276;
reg   [5:0] p_0_4_0_0_05752_fu_280;
reg   [5:0] p_0_3_0_0_05554_fu_284;
reg   [5:0] p_0_2_0_0_05356_fu_288;
reg   [5:0] p_0_1_0_0_05158_fu_292;
reg   [5:0] p_0_0_0_0_04960_fu_296;
reg   [5:0] p_0_5_0_0_04762_fu_300;
reg   [5:0] p_0_4_0_0_04564_fu_304;
reg   [5:0] p_0_3_0_0_04366_fu_308;
reg   [5:0] p_0_2_0_0_04168_fu_312;
reg   [5:0] p_0_1_0_0_03970_fu_316;
reg   [5:0] p_0_0_0_0_03772_fu_320;
reg   [5:0] p_0_5_0_0_03574_fu_324;
reg   [5:0] p_0_4_0_0_03376_fu_328;
reg   [5:0] p_0_3_0_0_03178_fu_332;
reg   [5:0] p_0_2_0_0_02980_fu_336;
reg   [5:0] p_0_1_0_0_02782_fu_340;
reg   [5:0] p_0_0_0_0_02584_fu_344;
reg   [5:0] p_0_5_0_0_02386_fu_348;
reg   [5:0] p_0_4_0_0_02188_fu_352;
reg   [5:0] p_0_3_0_0_01990_fu_356;
reg   [5:0] p_0_2_0_0_01792_fu_360;
reg   [5:0] p_0_1_0_0_01594_fu_364;
reg   [5:0] p_0_0_0_0_01396_fu_368;
reg   [5:0] p_0_5_0_0_01198_fu_372;
reg   [5:0] p_0_4_0_0_09100_fu_376;
reg   [5:0] p_0_3_0_0_07102_fu_380;
reg   [5:0] p_0_2_0_0_05104_fu_384;
reg   [5:0] p_0_1_0_0_03106_fu_388;
reg   [5:0] p_0_0_0_0_01108_fu_392;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 i_in109_fu_176 = 4'd0;
#0 p_0_5_0_0_01072_fu_180 = 6'd0;
#0 p_0_4_0_0_01054_fu_184 = 6'd0;
#0 p_0_3_0_0_01036_fu_188 = 6'd0;
#0 p_0_2_0_0_01018_fu_192 = 6'd0;
#0 p_0_1_0_0_09910_fu_196 = 6'd0;
#0 p_0_0_0_0_09712_fu_200 = 6'd0;
#0 p_0_5_0_0_09514_fu_204 = 6'd0;
#0 p_0_4_0_0_09316_fu_208 = 6'd0;
#0 p_0_3_0_0_09118_fu_212 = 6'd0;
#0 p_0_2_0_0_08920_fu_216 = 6'd0;
#0 p_0_1_0_0_08722_fu_220 = 6'd0;
#0 p_0_0_0_0_08524_fu_224 = 6'd0;
#0 p_0_5_0_0_08326_fu_228 = 6'd0;
#0 p_0_4_0_0_08128_fu_232 = 6'd0;
#0 p_0_3_0_0_07930_fu_236 = 6'd0;
#0 p_0_2_0_0_07732_fu_240 = 6'd0;
#0 p_0_1_0_0_07534_fu_244 = 6'd0;
#0 p_0_0_0_0_07336_fu_248 = 6'd0;
#0 p_0_5_0_0_07138_fu_252 = 6'd0;
#0 p_0_4_0_0_06940_fu_256 = 6'd0;
#0 p_0_3_0_0_06742_fu_260 = 6'd0;
#0 p_0_2_0_0_06544_fu_264 = 6'd0;
#0 p_0_1_0_0_06346_fu_268 = 6'd0;
#0 p_0_0_0_0_06148_fu_272 = 6'd0;
#0 p_0_5_0_0_05950_fu_276 = 6'd0;
#0 p_0_4_0_0_05752_fu_280 = 6'd0;
#0 p_0_3_0_0_05554_fu_284 = 6'd0;
#0 p_0_2_0_0_05356_fu_288 = 6'd0;
#0 p_0_1_0_0_05158_fu_292 = 6'd0;
#0 p_0_0_0_0_04960_fu_296 = 6'd0;
#0 p_0_5_0_0_04762_fu_300 = 6'd0;
#0 p_0_4_0_0_04564_fu_304 = 6'd0;
#0 p_0_3_0_0_04366_fu_308 = 6'd0;
#0 p_0_2_0_0_04168_fu_312 = 6'd0;
#0 p_0_1_0_0_03970_fu_316 = 6'd0;
#0 p_0_0_0_0_03772_fu_320 = 6'd0;
#0 p_0_5_0_0_03574_fu_324 = 6'd0;
#0 p_0_4_0_0_03376_fu_328 = 6'd0;
#0 p_0_3_0_0_03178_fu_332 = 6'd0;
#0 p_0_2_0_0_02980_fu_336 = 6'd0;
#0 p_0_1_0_0_02782_fu_340 = 6'd0;
#0 p_0_0_0_0_02584_fu_344 = 6'd0;
#0 p_0_5_0_0_02386_fu_348 = 6'd0;
#0 p_0_4_0_0_02188_fu_352 = 6'd0;
#0 p_0_3_0_0_01990_fu_356 = 6'd0;
#0 p_0_2_0_0_01792_fu_360 = 6'd0;
#0 p_0_1_0_0_01594_fu_364 = 6'd0;
#0 p_0_0_0_0_01396_fu_368 = 6'd0;
#0 p_0_5_0_0_01198_fu_372 = 6'd0;
#0 p_0_4_0_0_09100_fu_376 = 6'd0;
#0 p_0_3_0_0_07102_fu_380 = 6'd0;
#0 p_0_2_0_0_05104_fu_384 = 6'd0;
#0 p_0_1_0_0_03106_fu_388 = 6'd0;
#0 p_0_0_0_0_01108_fu_392 = 6'd0;
#0 ap_done_reg = 1'b0;
end

myproject_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        i_in109_fu_176 <= i_in_fu_842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (i_in109_load_load_fu_785_p1 == 4'd7))) begin
        p_0_0_0_0_01108_fu_392 <= trunc_ln35_fu_788_p1;
        p_0_1_0_0_03106_fu_388 <= {{layer13_out_dout[11:6]}};
        p_0_2_0_0_05104_fu_384 <= {{layer13_out_dout[17:12]}};
        p_0_3_0_0_07102_fu_380 <= {{layer13_out_dout[23:18]}};
        p_0_4_0_0_09100_fu_376 <= {{layer13_out_dout[29:24]}};
        p_0_5_0_0_01198_fu_372 <= {{layer13_out_dout[35:30]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (i_in109_load_load_fu_785_p1 == 4'd6))) begin
        p_0_0_0_0_01396_fu_368 <= trunc_ln35_fu_788_p1;
        p_0_1_0_0_01594_fu_364 <= {{layer13_out_dout[11:6]}};
        p_0_2_0_0_01792_fu_360 <= {{layer13_out_dout[17:12]}};
        p_0_3_0_0_01990_fu_356 <= {{layer13_out_dout[23:18]}};
        p_0_4_0_0_02188_fu_352 <= {{layer13_out_dout[29:24]}};
        p_0_5_0_0_02386_fu_348 <= {{layer13_out_dout[35:30]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (i_in109_load_load_fu_785_p1 == 4'd5))) begin
        p_0_0_0_0_02584_fu_344 <= trunc_ln35_fu_788_p1;
        p_0_1_0_0_02782_fu_340 <= {{layer13_out_dout[11:6]}};
        p_0_2_0_0_02980_fu_336 <= {{layer13_out_dout[17:12]}};
        p_0_3_0_0_03178_fu_332 <= {{layer13_out_dout[23:18]}};
        p_0_4_0_0_03376_fu_328 <= {{layer13_out_dout[29:24]}};
        p_0_5_0_0_03574_fu_324 <= {{layer13_out_dout[35:30]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (i_in109_load_load_fu_785_p1 == 4'd4))) begin
        p_0_0_0_0_03772_fu_320 <= trunc_ln35_fu_788_p1;
        p_0_1_0_0_03970_fu_316 <= {{layer13_out_dout[11:6]}};
        p_0_2_0_0_04168_fu_312 <= {{layer13_out_dout[17:12]}};
        p_0_3_0_0_04366_fu_308 <= {{layer13_out_dout[23:18]}};
        p_0_4_0_0_04564_fu_304 <= {{layer13_out_dout[29:24]}};
        p_0_5_0_0_04762_fu_300 <= {{layer13_out_dout[35:30]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (i_in109_load_load_fu_785_p1 == 4'd3))) begin
        p_0_0_0_0_04960_fu_296 <= trunc_ln35_fu_788_p1;
        p_0_1_0_0_05158_fu_292 <= {{layer13_out_dout[11:6]}};
        p_0_2_0_0_05356_fu_288 <= {{layer13_out_dout[17:12]}};
        p_0_3_0_0_05554_fu_284 <= {{layer13_out_dout[23:18]}};
        p_0_4_0_0_05752_fu_280 <= {{layer13_out_dout[29:24]}};
        p_0_5_0_0_05950_fu_276 <= {{layer13_out_dout[35:30]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (i_in109_load_load_fu_785_p1 == 4'd2))) begin
        p_0_0_0_0_06148_fu_272 <= trunc_ln35_fu_788_p1;
        p_0_1_0_0_06346_fu_268 <= {{layer13_out_dout[11:6]}};
        p_0_2_0_0_06544_fu_264 <= {{layer13_out_dout[17:12]}};
        p_0_3_0_0_06742_fu_260 <= {{layer13_out_dout[23:18]}};
        p_0_4_0_0_06940_fu_256 <= {{layer13_out_dout[29:24]}};
        p_0_5_0_0_07138_fu_252 <= {{layer13_out_dout[35:30]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (i_in109_load_load_fu_785_p1 == 4'd1))) begin
        p_0_0_0_0_07336_fu_248 <= trunc_ln35_fu_788_p1;
        p_0_1_0_0_07534_fu_244 <= {{layer13_out_dout[11:6]}};
        p_0_2_0_0_07732_fu_240 <= {{layer13_out_dout[17:12]}};
        p_0_3_0_0_07930_fu_236 <= {{layer13_out_dout[23:18]}};
        p_0_4_0_0_08128_fu_232 <= {{layer13_out_dout[29:24]}};
        p_0_5_0_0_08326_fu_228 <= {{layer13_out_dout[35:30]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (i_in109_load_load_fu_785_p1 == 4'd0))) begin
        p_0_0_0_0_08524_fu_224 <= trunc_ln35_fu_788_p1;
        p_0_1_0_0_08722_fu_220 <= {{layer13_out_dout[11:6]}};
        p_0_2_0_0_08920_fu_216 <= {{layer13_out_dout[17:12]}};
        p_0_3_0_0_09118_fu_212 <= {{layer13_out_dout[23:18]}};
        p_0_4_0_0_09316_fu_208 <= {{layer13_out_dout[29:24]}};
        p_0_5_0_0_09514_fu_204 <= {{layer13_out_dout[35:30]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_in109_load_load_fu_785_p1 == 4'd7) & ~(i_in109_load_load_fu_785_p1 == 4'd6) & ~(i_in109_load_load_fu_785_p1 == 4'd5) & ~(i_in109_load_load_fu_785_p1 == 4'd4) & ~(i_in109_load_load_fu_785_p1 == 4'd3) & ~(i_in109_load_load_fu_785_p1 == 4'd2) & ~(i_in109_load_load_fu_785_p1 == 4'd1) & ~(i_in109_load_load_fu_785_p1 == 4'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_0_0_0_09712_fu_200 <= trunc_ln35_fu_788_p1;
        p_0_1_0_0_09910_fu_196 <= {{layer13_out_dout[11:6]}};
        p_0_2_0_0_01018_fu_192 <= {{layer13_out_dout[17:12]}};
        p_0_3_0_0_01036_fu_188 <= {{layer13_out_dout[23:18]}};
        p_0_4_0_0_01054_fu_184 <= {{layer13_out_dout[29:24]}};
        p_0_5_0_0_01072_fu_180 <= {{layer13_out_dout[35:30]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_in109_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i_in109_load = i_in109_fu_176;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_10_out_ap_vld = 1'b1;
    end else begin
        data_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_11_out_ap_vld = 1'b1;
    end else begin
        data_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_12_out_ap_vld = 1'b1;
    end else begin
        data_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_13_out_ap_vld = 1'b1;
    end else begin
        data_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_14_out_ap_vld = 1'b1;
    end else begin
        data_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_15_out_ap_vld = 1'b1;
    end else begin
        data_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_16_out_ap_vld = 1'b1;
    end else begin
        data_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_17_out_ap_vld = 1'b1;
    end else begin
        data_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_18_out_ap_vld = 1'b1;
    end else begin
        data_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_19_out_ap_vld = 1'b1;
    end else begin
        data_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_1_out_ap_vld = 1'b1;
    end else begin
        data_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_20_out_ap_vld = 1'b1;
    end else begin
        data_20_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_21_out_ap_vld = 1'b1;
    end else begin
        data_21_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_22_out_ap_vld = 1'b1;
    end else begin
        data_22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_23_out_ap_vld = 1'b1;
    end else begin
        data_23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_24_out_ap_vld = 1'b1;
    end else begin
        data_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_25_out_ap_vld = 1'b1;
    end else begin
        data_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_26_out_ap_vld = 1'b1;
    end else begin
        data_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_27_out_ap_vld = 1'b1;
    end else begin
        data_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_28_out_ap_vld = 1'b1;
    end else begin
        data_28_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_29_out_ap_vld = 1'b1;
    end else begin
        data_29_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_2_out_ap_vld = 1'b1;
    end else begin
        data_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_30_out_ap_vld = 1'b1;
    end else begin
        data_30_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_31_out_ap_vld = 1'b1;
    end else begin
        data_31_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_32_out_ap_vld = 1'b1;
    end else begin
        data_32_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_33_out_ap_vld = 1'b1;
    end else begin
        data_33_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_34_out_ap_vld = 1'b1;
    end else begin
        data_34_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_35_out_ap_vld = 1'b1;
    end else begin
        data_35_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_36_out_ap_vld = 1'b1;
    end else begin
        data_36_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_37_out_ap_vld = 1'b1;
    end else begin
        data_37_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_38_out_ap_vld = 1'b1;
    end else begin
        data_38_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_39_out_ap_vld = 1'b1;
    end else begin
        data_39_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_3_out_ap_vld = 1'b1;
    end else begin
        data_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_40_out_ap_vld = 1'b1;
    end else begin
        data_40_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_41_out_ap_vld = 1'b1;
    end else begin
        data_41_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_42_out_ap_vld = 1'b1;
    end else begin
        data_42_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_43_out_ap_vld = 1'b1;
    end else begin
        data_43_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_44_out_ap_vld = 1'b1;
    end else begin
        data_44_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_45_out_ap_vld = 1'b1;
    end else begin
        data_45_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_46_out_ap_vld = 1'b1;
    end else begin
        data_46_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_47_out_ap_vld = 1'b1;
    end else begin
        data_47_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_48_out_ap_vld = 1'b1;
    end else begin
        data_48_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_49_out_ap_vld = 1'b1;
    end else begin
        data_49_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_4_out_ap_vld = 1'b1;
    end else begin
        data_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_50_out_ap_vld = 1'b1;
    end else begin
        data_50_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_51_out_ap_vld = 1'b1;
    end else begin
        data_51_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_52_out_ap_vld = 1'b1;
    end else begin
        data_52_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_53_out_ap_vld = 1'b1;
    end else begin
        data_53_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_5_out_ap_vld = 1'b1;
    end else begin
        data_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_6_out_ap_vld = 1'b1;
    end else begin
        data_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_7_out_ap_vld = 1'b1;
    end else begin
        data_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_8_out_ap_vld = 1'b1;
    end else begin
        data_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_9_out_ap_vld = 1'b1;
    end else begin
        data_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln33_fu_1118_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        data_out_ap_vld = 1'b1;
    end else begin
        data_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        layer13_out_blk_n = layer13_out_empty_n;
    end else begin
        layer13_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        layer13_out_read = 1'b1;
    end else begin
        layer13_out_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | (layer13_out_empty_n == 1'b0));
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign data_10_out = p_0_4_0_0_02188_fu_352;

assign data_11_out = p_0_5_0_0_02386_fu_348;

assign data_12_out = p_0_0_0_0_02584_fu_344;

assign data_13_out = p_0_1_0_0_02782_fu_340;

assign data_14_out = p_0_2_0_0_02980_fu_336;

assign data_15_out = p_0_3_0_0_03178_fu_332;

assign data_16_out = p_0_4_0_0_03376_fu_328;

assign data_17_out = p_0_5_0_0_03574_fu_324;

assign data_18_out = p_0_0_0_0_03772_fu_320;

assign data_19_out = p_0_1_0_0_03970_fu_316;

assign data_1_out = p_0_1_0_0_03106_fu_388;

assign data_20_out = p_0_2_0_0_04168_fu_312;

assign data_21_out = p_0_3_0_0_04366_fu_308;

assign data_22_out = p_0_4_0_0_04564_fu_304;

assign data_23_out = p_0_5_0_0_04762_fu_300;

assign data_24_out = p_0_0_0_0_04960_fu_296;

assign data_25_out = p_0_1_0_0_05158_fu_292;

assign data_26_out = p_0_2_0_0_05356_fu_288;

assign data_27_out = p_0_3_0_0_05554_fu_284;

assign data_28_out = p_0_4_0_0_05752_fu_280;

assign data_29_out = p_0_5_0_0_05950_fu_276;

assign data_2_out = p_0_2_0_0_05104_fu_384;

assign data_30_out = p_0_0_0_0_06148_fu_272;

assign data_31_out = p_0_1_0_0_06346_fu_268;

assign data_32_out = p_0_2_0_0_06544_fu_264;

assign data_33_out = p_0_3_0_0_06742_fu_260;

assign data_34_out = p_0_4_0_0_06940_fu_256;

assign data_35_out = p_0_5_0_0_07138_fu_252;

assign data_36_out = p_0_0_0_0_07336_fu_248;

assign data_37_out = p_0_1_0_0_07534_fu_244;

assign data_38_out = p_0_2_0_0_07732_fu_240;

assign data_39_out = p_0_3_0_0_07930_fu_236;

assign data_3_out = p_0_3_0_0_07102_fu_380;

assign data_40_out = p_0_4_0_0_08128_fu_232;

assign data_41_out = p_0_5_0_0_08326_fu_228;

assign data_42_out = p_0_0_0_0_08524_fu_224;

assign data_43_out = p_0_1_0_0_08722_fu_220;

assign data_44_out = p_0_2_0_0_08920_fu_216;

assign data_45_out = p_0_3_0_0_09118_fu_212;

assign data_46_out = p_0_4_0_0_09316_fu_208;

assign data_47_out = p_0_5_0_0_09514_fu_204;

assign data_48_out = p_0_0_0_0_09712_fu_200;

assign data_49_out = p_0_1_0_0_09910_fu_196;

assign data_4_out = p_0_4_0_0_09100_fu_376;

assign data_50_out = p_0_2_0_0_01018_fu_192;

assign data_51_out = p_0_3_0_0_01036_fu_188;

assign data_52_out = p_0_4_0_0_01054_fu_184;

assign data_53_out = p_0_5_0_0_01072_fu_180;

assign data_5_out = p_0_5_0_0_01198_fu_372;

assign data_6_out = p_0_0_0_0_01396_fu_368;

assign data_7_out = p_0_1_0_0_01594_fu_364;

assign data_8_out = p_0_2_0_0_01792_fu_360;

assign data_9_out = p_0_3_0_0_01990_fu_356;

assign data_out = p_0_0_0_0_01108_fu_392;

assign i_in109_load_load_fu_785_p1 = ap_sig_allocacmp_i_in109_load;

assign i_in_fu_842_p2 = (ap_sig_allocacmp_i_in109_load + 4'd1);

assign icmp_ln33_fu_1118_p2 = ((ap_sig_allocacmp_i_in109_load == 4'd8) ? 1'b1 : 1'b0);

assign trunc_ln35_fu_788_p1 = layer13_out_dout[5:0];

endmodule //myproject_dense_array_array_ap_fixed_16_6_5_3_0_1u_config15_Pipeline_DataPrepare
