-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_latency_wrapper_ap_fixed_ap_fixed_37_19_5_3_0_config22_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_val1 : IN STD_LOGIC_VECTOR (26 downto 0);
    data_1_val2 : IN STD_LOGIC_VECTOR (26 downto 0);
    data_2_val3 : IN STD_LOGIC_VECTOR (26 downto 0);
    data_3_val4 : IN STD_LOGIC_VECTOR (26 downto 0);
    data_4_val5 : IN STD_LOGIC_VECTOR (26 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_dense_latency_wrapper_ap_fixed_ap_fixed_37_19_5_3_0_config22_s is 
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal data_1_val2_read_reg_210 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_neg12_fu_94_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg12_reg_215 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln73_fu_124_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln73_reg_220 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln73_34_fu_158_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln73_34_reg_225 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln58_fu_164_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub_ln58_reg_230 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub_ln58_reg_230_pp0_iter1_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln73_34_fu_181_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln73_34_reg_235 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln58_46_fu_186_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln58_46_reg_240 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln58_46_reg_240_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln58_fu_193_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln58_reg_245 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_fu_70_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_141_fu_82_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_shl11_fu_90_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_143_fu_100_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_144_fu_112_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln73_11_fu_108_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln73_12_fu_120_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_145_fu_134_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_146_fu_146_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln73_14_fu_154_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln73_13_fu_142_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln70_fu_130_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln73_fu_78_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_142_fu_170_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_shl13_fu_177_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln58_fu_190_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln58_31_fu_201_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln58_24_fu_198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_0_val1_int_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal data_1_val2_int_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal data_2_val3_int_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal data_3_val4_int_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal data_4_val5_int_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin




    data_0_val1_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_0_val1_int_reg <= data_0_val1;
        end if;
    end process;

    data_1_val2_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_1_val2_int_reg <= data_1_val2;
        end if;
    end process;

    data_2_val3_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_2_val3_int_reg <= data_2_val3;
        end if;
    end process;

    data_3_val4_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_3_val4_int_reg <= data_3_val4;
        end if;
    end process;

    data_4_val5_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_4_val5_int_reg <= data_4_val5;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    add_ln58_46_reg_240(30 downto 1) <= add_ln58_46_fu_186_p2(30 downto 1);
                    add_ln58_46_reg_240_pp0_iter2_reg(30 downto 1) <= add_ln58_46_reg_240(30 downto 1);
                add_ln58_reg_245 <= add_ln58_fu_193_p2;
                data_1_val2_read_reg_210 <= data_1_val2_int_reg;
                    mul_ln73_34_reg_235(30 downto 1) <= mul_ln73_34_fu_181_p2(30 downto 1);
                    p_neg12_reg_215(30 downto 3) <= p_neg12_fu_94_p2(30 downto 3);
                sub_ln58_reg_230 <= sub_ln58_fu_164_p2;
                sub_ln58_reg_230_pp0_iter1_reg <= sub_ln58_reg_230;
                    sub_ln73_34_reg_225(30 downto 1) <= sub_ln73_34_fu_158_p2(30 downto 1);
                    sub_ln73_reg_220(30 downto 1) <= sub_ln73_fu_124_p2(30 downto 1);
            end if;
        end if;
    end process;
    p_neg12_reg_215(2 downto 0) <= "000";
    sub_ln73_reg_220(0) <= '0';
    sub_ln73_34_reg_225(0) <= '0';
    mul_ln73_34_reg_235(0) <= '0';
    add_ln58_46_reg_240(0) <= '0';
    add_ln58_46_reg_240_pp0_iter2_reg(0) <= '0';
    add_ln58_46_fu_186_p2 <= std_logic_vector(unsigned(sub_ln73_reg_220) + unsigned(sub_ln73_34_reg_225));
    add_ln58_fu_193_p2 <= std_logic_vector(signed(sext_ln58_fu_190_p1) + signed(mul_ln73_34_reg_235));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= std_logic_vector(signed(sext_ln58_31_fu_201_p1) + signed(sext_ln58_24_fu_198_p1));
    mul_ln73_34_fu_181_p2 <= std_logic_vector(unsigned(p_neg12_reg_215) - unsigned(p_shl13_fu_177_p1));
    p_neg12_fu_94_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_shl11_fu_90_p1));
        p_shl11_fu_90_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_141_fu_82_p3),31));

        p_shl13_fu_177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_142_fu_170_p3),31));

        sext_ln58_24_fu_198_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_reg_245),32));

        sext_ln58_31_fu_201_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_46_reg_240_pp0_iter2_reg),32));

        sext_ln58_fu_190_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln58_reg_230_pp0_iter1_reg),31));

        sext_ln70_fu_130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_3_val4_int_reg),30));

        sext_ln73_11_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_143_fu_100_p3),31));

        sext_ln73_12_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_144_fu_112_p3),31));

        sext_ln73_13_fu_142_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_145_fu_134_p3),31));

        sext_ln73_14_fu_154_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_146_fu_146_p3),31));

        sext_ln73_fu_78_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_70_p3),30));

    sub_ln58_fu_164_p2 <= std_logic_vector(signed(sext_ln70_fu_130_p1) - signed(sext_ln73_fu_78_p1));
    sub_ln73_34_fu_158_p2 <= std_logic_vector(signed(sext_ln73_14_fu_154_p1) - signed(sext_ln73_13_fu_142_p1));
    sub_ln73_fu_124_p2 <= std_logic_vector(signed(sext_ln73_11_fu_108_p1) - signed(sext_ln73_12_fu_120_p1));
    tmp_141_fu_82_p3 <= (data_1_val2_int_reg & ap_const_lv3_0);
    tmp_142_fu_170_p3 <= (data_1_val2_read_reg_210 & ap_const_lv1_0);
    tmp_143_fu_100_p3 <= (data_2_val3_int_reg & ap_const_lv3_0);
    tmp_144_fu_112_p3 <= (data_2_val3_int_reg & ap_const_lv1_0);
    tmp_145_fu_134_p3 <= (data_4_val5_int_reg & ap_const_lv3_0);
    tmp_146_fu_146_p3 <= (data_4_val5_int_reg & ap_const_lv1_0);
    tmp_fu_70_p3 <= (data_0_val1_int_reg & ap_const_lv2_0);
end behav;
