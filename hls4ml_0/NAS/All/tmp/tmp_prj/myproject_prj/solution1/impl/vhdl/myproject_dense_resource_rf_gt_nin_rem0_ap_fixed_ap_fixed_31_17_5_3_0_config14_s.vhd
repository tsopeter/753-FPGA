-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_31_17_5_3_0_config14_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (19 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (19 downto 0);
    data_2_val : IN STD_LOGIC_VECTOR (19 downto 0);
    data_3_val : IN STD_LOGIC_VECTOR (19 downto 0);
    data_4_val : IN STD_LOGIC_VECTOR (19 downto 0);
    data_5_val : IN STD_LOGIC_VECTOR (19 downto 0);
    data_6_val : IN STD_LOGIC_VECTOR (19 downto 0);
    data_7_val : IN STD_LOGIC_VECTOR (19 downto 0);
    data_8_val : IN STD_LOGIC_VECTOR (19 downto 0);
    data_9_val : IN STD_LOGIC_VECTOR (19 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (30 downto 0) );
end;


architecture behav of myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_31_17_5_3_0_config14_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln135_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal outidx_73_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal outidx_73_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal w14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal w14_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal do_init_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_index19_reg_208 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_0_val23_rewind_reg_222 : STD_LOGIC_VECTOR (19 downto 0);
    signal data_1_val24_rewind_reg_236 : STD_LOGIC_VECTOR (19 downto 0);
    signal data_2_val25_rewind_reg_250 : STD_LOGIC_VECTOR (19 downto 0);
    signal data_3_val26_rewind_reg_264 : STD_LOGIC_VECTOR (19 downto 0);
    signal data_4_val27_rewind_reg_278 : STD_LOGIC_VECTOR (19 downto 0);
    signal data_5_val28_rewind_reg_292 : STD_LOGIC_VECTOR (19 downto 0);
    signal data_6_val29_rewind_reg_306 : STD_LOGIC_VECTOR (19 downto 0);
    signal data_7_val30_rewind_reg_320 : STD_LOGIC_VECTOR (19 downto 0);
    signal data_8_val31_rewind_reg_334 : STD_LOGIC_VECTOR (19 downto 0);
    signal data_9_val32_rewind_reg_348 : STD_LOGIC_VECTOR (19 downto 0);
    signal in_index20_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc17_reg_376 : STD_LOGIC_VECTOR (30 downto 0);
    signal acc_715_reg_390 : STD_LOGIC_VECTOR (30 downto 0);
    signal acc_813_reg_404 : STD_LOGIC_VECTOR (30 downto 0);
    signal acc_911_reg_418 : STD_LOGIC_VECTOR (30 downto 0);
    signal acc_1010_reg_432 : STD_LOGIC_VECTOR (30 downto 0);
    signal w_index_fu_572_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_index_reg_916 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln135_reg_921 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_9_fu_752_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal acc_8_fu_760_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal acc_7_fu_768_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal acc_6_fu_776_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal acc_fu_784_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal in_index_fu_804_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_do_init_phi_fu_196_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_w_index19_phi_fu_212_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_0_val23_phi_phi_fu_450_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_data_1_val24_phi_phi_fu_462_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_data_2_val25_phi_phi_fu_474_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_data_3_val26_phi_phi_fu_486_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_data_4_val27_phi_phi_fu_498_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_data_5_val28_phi_phi_fu_510_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_data_6_val29_phi_phi_fu_522_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_data_7_val30_phi_phi_fu_534_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_data_8_val31_phi_phi_fu_546_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_data_9_val32_phi_phi_fu_558_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_446 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_446 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_458 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_458 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_470 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_470 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_482 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_482 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_494 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_494 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_506 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_506 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_518 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_518 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_530 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_530 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_542 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_542 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_554 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_554 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln135_fu_566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal outidx_73_ce0_local : STD_LOGIC;
    signal w14_ce0_local : STD_LOGIC;
    signal a_fu_588_p21 : STD_LOGIC_VECTOR (19 downto 0);
    signal a_fu_588_p22 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_588_p23 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_fu_644_p11 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_fu_644_p13 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_846_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln144_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_4_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_2_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_3_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_1_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_1_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_2_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_3_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_4_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_5_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_10_fu_729_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal acc_11_fu_737_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal in_index_2_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln154_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_184 : BOOLEAN;
    signal ap_condition_37 : BOOLEAN;
    signal a_fu_588_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_588_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_588_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_588_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_588_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_588_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_588_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_588_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_588_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_588_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_644_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_644_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_644_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_644_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_644_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_sparsemux_21_4_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        din3 : IN STD_LOGIC_VECTOR (19 downto 0);
        din4 : IN STD_LOGIC_VECTOR (19 downto 0);
        din5 : IN STD_LOGIC_VECTOR (19 downto 0);
        din6 : IN STD_LOGIC_VECTOR (19 downto 0);
        din7 : IN STD_LOGIC_VECTOR (19 downto 0);
        din8 : IN STD_LOGIC_VECTOR (19 downto 0);
        din9 : IN STD_LOGIC_VECTOR (19 downto 0);
        def : IN STD_LOGIC_VECTOR (19 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_sparsemux_11_3_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (2 downto 0);
        din4_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        din3 : IN STD_LOGIC_VECTOR (30 downto 0);
        din4 : IN STD_LOGIC_VECTOR (30 downto 0);
        def : IN STD_LOGIC_VECTOR (30 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component myproject_mac_muladd_20s_5s_31s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_31_17_5_3_0_config14_s_outidxIfE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_31_17_5_3_0_config14_s_w14_ROJfO IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;



begin
    outidx_73_U : component myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_31_17_5_3_0_config14_s_outidxIfE
    generic map (
        DataWidth => 3,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outidx_73_address0,
        ce0 => outidx_73_ce0_local,
        q0 => outidx_73_q0);

    w14_U : component myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_31_17_5_3_0_config14_s_w14_ROJfO
    generic map (
        DataWidth => 5,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w14_address0,
        ce0 => w14_ce0_local,
        q0 => w14_q0);

    sparsemux_21_4_20_1_1_U727 : component myproject_sparsemux_21_4_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 20,
        CASE1 => "0001",
        din1_WIDTH => 20,
        CASE2 => "0010",
        din2_WIDTH => 20,
        CASE3 => "0011",
        din3_WIDTH => 20,
        CASE4 => "0100",
        din4_WIDTH => 20,
        CASE5 => "0101",
        din5_WIDTH => 20,
        CASE6 => "0110",
        din6_WIDTH => 20,
        CASE7 => "0111",
        din7_WIDTH => 20,
        CASE8 => "1000",
        din8_WIDTH => 20,
        CASE9 => "1001",
        din9_WIDTH => 20,
        def_WIDTH => 20,
        sel_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => ap_phi_mux_data_0_val23_phi_phi_fu_450_p4,
        din1 => ap_phi_mux_data_1_val24_phi_phi_fu_462_p4,
        din2 => ap_phi_mux_data_2_val25_phi_phi_fu_474_p4,
        din3 => ap_phi_mux_data_3_val26_phi_phi_fu_486_p4,
        din4 => ap_phi_mux_data_4_val27_phi_phi_fu_498_p4,
        din5 => ap_phi_mux_data_5_val28_phi_phi_fu_510_p4,
        din6 => ap_phi_mux_data_6_val29_phi_phi_fu_522_p4,
        din7 => ap_phi_mux_data_7_val30_phi_phi_fu_534_p4,
        din8 => ap_phi_mux_data_8_val31_phi_phi_fu_546_p4,
        din9 => ap_phi_mux_data_9_val32_phi_phi_fu_558_p4,
        def => a_fu_588_p21,
        sel => a_fu_588_p22,
        dout => a_fu_588_p23);

    sparsemux_11_3_31_1_1_U728 : component myproject_sparsemux_11_3_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 31,
        CASE1 => "001",
        din1_WIDTH => 31,
        CASE2 => "010",
        din2_WIDTH => 31,
        CASE3 => "011",
        din3_WIDTH => 31,
        CASE4 => "100",
        din4_WIDTH => 31,
        def_WIDTH => 31,
        sel_WIDTH => 3,
        dout_WIDTH => 31)
    port map (
        din0 => acc17_reg_376,
        din1 => acc_715_reg_390,
        din2 => acc_813_reg_404,
        din3 => acc_911_reg_418,
        din4 => acc_1010_reg_432,
        def => tmp_fu_644_p11,
        sel => outidx_73_q0,
        dout => tmp_fu_644_p13);

    mac_muladd_20s_5s_31s_32_1_1_U729 : component myproject_mac_muladd_20s_5s_31s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 5,
        din2_WIDTH => 31,
        dout_WIDTH => 32)
    port map (
        din0 => a_fu_588_p23,
        din1 => w14_q0,
        din2 => tmp_fu_644_p13,
        dout => grp_fu_846_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv31_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1))) then 
                    ap_return_0_preg <= acc_fu_784_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv31_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1))) then 
                    ap_return_1_preg <= acc_6_fu_776_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv31_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1))) then 
                    ap_return_2_preg <= acc_7_fu_768_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv31_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1))) then 
                    ap_return_3_preg <= acc_8_fu_760_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg <= ap_const_lv31_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1))) then 
                    ap_return_4_preg <= acc_9_fu_752_p3;
                end if; 
            end if;
        end if;
    end process;


    acc17_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_0))) then 
                acc17_reg_376 <= acc_fu_784_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc17_reg_376 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    acc_1010_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_0))) then 
                acc_1010_reg_432 <= acc_9_fu_752_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_1010_reg_432 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    acc_715_reg_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_0))) then 
                acc_715_reg_390 <= acc_6_fu_776_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_715_reg_390 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    acc_813_reg_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_0))) then 
                acc_813_reg_404 <= acc_7_fu_768_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_813_reg_404 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    acc_911_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_0))) then 
                acc_911_reg_418 <= acc_8_fu_760_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_911_reg_418 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_446_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_196_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_446 <= data_0_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_446 <= ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_446;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_458_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_196_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_458 <= data_1_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_458 <= ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_458;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_196_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_470 <= data_2_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_470 <= ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_470;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_196_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_482 <= data_3_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_482 <= ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_482;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_196_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_494 <= data_4_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_494 <= ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_494;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_196_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_506 <= data_5_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_506 <= ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_506;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_518_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_196_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_518 <= data_6_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_518 <= ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_518;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_196_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_530 <= data_7_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_530 <= ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_530;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_196_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_542 <= data_8_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_542 <= ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_542;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_196_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_554 <= data_9_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_554 <= ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_554;
                end if;
            end if; 
        end if;
    end process;

    do_init_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_0))) then 
                do_init_reg_192 <= ap_const_lv1_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_192 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    in_index20_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_0))) then 
                in_index20_reg_362 <= in_index_fu_804_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                in_index20_reg_362 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    w_index19_reg_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_0))) then 
                w_index19_reg_208 <= w_index_reg_916;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                w_index19_reg_208 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_0))) then
                data_0_val23_rewind_reg_222 <= ap_phi_mux_data_0_val23_phi_phi_fu_450_p4;
                data_1_val24_rewind_reg_236 <= ap_phi_mux_data_1_val24_phi_phi_fu_462_p4;
                data_2_val25_rewind_reg_250 <= ap_phi_mux_data_2_val25_phi_phi_fu_474_p4;
                data_3_val26_rewind_reg_264 <= ap_phi_mux_data_3_val26_phi_phi_fu_486_p4;
                data_4_val27_rewind_reg_278 <= ap_phi_mux_data_4_val27_phi_phi_fu_498_p4;
                data_5_val28_rewind_reg_292 <= ap_phi_mux_data_5_val28_phi_phi_fu_510_p4;
                data_6_val29_rewind_reg_306 <= ap_phi_mux_data_6_val29_phi_phi_fu_522_p4;
                data_7_val30_rewind_reg_320 <= ap_phi_mux_data_7_val30_phi_phi_fu_534_p4;
                data_8_val31_rewind_reg_334 <= ap_phi_mux_data_8_val31_phi_phi_fu_546_p4;
                data_9_val32_rewind_reg_348 <= ap_phi_mux_data_9_val32_phi_phi_fu_558_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln135_reg_921 <= icmp_ln135_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                w_index_reg_916 <= w_index_fu_572_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    a_fu_588_p21 <= "XXXXXXXXXXXXXXXXXXXX";
    a_fu_588_p22 <= in_index20_reg_362(4 - 1 downto 0);
    acc_10_fu_729_p3 <= 
        acc_1010_reg_432 when (or_ln144_3_fu_723_p2(0) = '1') else 
        ap_const_lv31_0;
    acc_11_fu_737_p1 <= grp_fu_846_p3(31 - 1 downto 0);
    acc_6_fu_776_p3 <= 
        acc_11_fu_737_p1 when (icmp_ln144_1_fu_682_p2(0) = '1') else 
        acc_715_reg_390;
    acc_7_fu_768_p3 <= 
        acc_11_fu_737_p1 when (icmp_ln144_2_fu_688_p2(0) = '1') else 
        acc_813_reg_404;
    acc_8_fu_760_p3 <= 
        acc_11_fu_737_p1 when (icmp_ln144_3_fu_694_p2(0) = '1') else 
        acc_911_reg_418;
    acc_9_fu_752_p3 <= 
        acc_10_fu_729_p3 when (or_ln144_5_fu_746_p2(0) = '1') else 
        acc_11_fu_737_p1;
    acc_fu_784_p3 <= 
        acc_11_fu_737_p1 when (icmp_ln144_fu_676_p2(0) = '1') else 
        acc17_reg_376;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_184_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_184 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_37_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_37 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_921, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_data_0_val23_phi_phi_fu_450_p4_assign_proc : process(do_init_reg_192, data_0_val23_rewind_reg_222, ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_446)
    begin
        if ((do_init_reg_192 = ap_const_lv1_0)) then 
            ap_phi_mux_data_0_val23_phi_phi_fu_450_p4 <= data_0_val23_rewind_reg_222;
        else 
            ap_phi_mux_data_0_val23_phi_phi_fu_450_p4 <= ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_446;
        end if; 
    end process;


    ap_phi_mux_data_1_val24_phi_phi_fu_462_p4_assign_proc : process(do_init_reg_192, data_1_val24_rewind_reg_236, ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_458)
    begin
        if ((do_init_reg_192 = ap_const_lv1_0)) then 
            ap_phi_mux_data_1_val24_phi_phi_fu_462_p4 <= data_1_val24_rewind_reg_236;
        else 
            ap_phi_mux_data_1_val24_phi_phi_fu_462_p4 <= ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_458;
        end if; 
    end process;


    ap_phi_mux_data_2_val25_phi_phi_fu_474_p4_assign_proc : process(do_init_reg_192, data_2_val25_rewind_reg_250, ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_470)
    begin
        if ((do_init_reg_192 = ap_const_lv1_0)) then 
            ap_phi_mux_data_2_val25_phi_phi_fu_474_p4 <= data_2_val25_rewind_reg_250;
        else 
            ap_phi_mux_data_2_val25_phi_phi_fu_474_p4 <= ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_470;
        end if; 
    end process;


    ap_phi_mux_data_3_val26_phi_phi_fu_486_p4_assign_proc : process(do_init_reg_192, data_3_val26_rewind_reg_264, ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_482)
    begin
        if ((do_init_reg_192 = ap_const_lv1_0)) then 
            ap_phi_mux_data_3_val26_phi_phi_fu_486_p4 <= data_3_val26_rewind_reg_264;
        else 
            ap_phi_mux_data_3_val26_phi_phi_fu_486_p4 <= ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_482;
        end if; 
    end process;


    ap_phi_mux_data_4_val27_phi_phi_fu_498_p4_assign_proc : process(do_init_reg_192, data_4_val27_rewind_reg_278, ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_494)
    begin
        if ((do_init_reg_192 = ap_const_lv1_0)) then 
            ap_phi_mux_data_4_val27_phi_phi_fu_498_p4 <= data_4_val27_rewind_reg_278;
        else 
            ap_phi_mux_data_4_val27_phi_phi_fu_498_p4 <= ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_494;
        end if; 
    end process;


    ap_phi_mux_data_5_val28_phi_phi_fu_510_p4_assign_proc : process(do_init_reg_192, data_5_val28_rewind_reg_292, ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_506)
    begin
        if ((do_init_reg_192 = ap_const_lv1_0)) then 
            ap_phi_mux_data_5_val28_phi_phi_fu_510_p4 <= data_5_val28_rewind_reg_292;
        else 
            ap_phi_mux_data_5_val28_phi_phi_fu_510_p4 <= ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_506;
        end if; 
    end process;


    ap_phi_mux_data_6_val29_phi_phi_fu_522_p4_assign_proc : process(do_init_reg_192, data_6_val29_rewind_reg_306, ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_518)
    begin
        if ((do_init_reg_192 = ap_const_lv1_0)) then 
            ap_phi_mux_data_6_val29_phi_phi_fu_522_p4 <= data_6_val29_rewind_reg_306;
        else 
            ap_phi_mux_data_6_val29_phi_phi_fu_522_p4 <= ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_518;
        end if; 
    end process;


    ap_phi_mux_data_7_val30_phi_phi_fu_534_p4_assign_proc : process(do_init_reg_192, data_7_val30_rewind_reg_320, ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_530)
    begin
        if ((do_init_reg_192 = ap_const_lv1_0)) then 
            ap_phi_mux_data_7_val30_phi_phi_fu_534_p4 <= data_7_val30_rewind_reg_320;
        else 
            ap_phi_mux_data_7_val30_phi_phi_fu_534_p4 <= ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_530;
        end if; 
    end process;


    ap_phi_mux_data_8_val31_phi_phi_fu_546_p4_assign_proc : process(do_init_reg_192, data_8_val31_rewind_reg_334, ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_542)
    begin
        if ((do_init_reg_192 = ap_const_lv1_0)) then 
            ap_phi_mux_data_8_val31_phi_phi_fu_546_p4 <= data_8_val31_rewind_reg_334;
        else 
            ap_phi_mux_data_8_val31_phi_phi_fu_546_p4 <= ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_542;
        end if; 
    end process;


    ap_phi_mux_data_9_val32_phi_phi_fu_558_p4_assign_proc : process(do_init_reg_192, data_9_val32_rewind_reg_348, ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_554)
    begin
        if ((do_init_reg_192 = ap_const_lv1_0)) then 
            ap_phi_mux_data_9_val32_phi_phi_fu_558_p4 <= data_9_val32_rewind_reg_348;
        else 
            ap_phi_mux_data_9_val32_phi_phi_fu_558_p4 <= ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_554;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_196_p6_assign_proc : process(do_init_reg_192, icmp_ln135_reg_921, ap_condition_184)
    begin
        if ((ap_const_boolean_1 = ap_condition_184)) then
            if ((icmp_ln135_reg_921 = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_196_p6 <= ap_const_lv1_1;
            elsif ((icmp_ln135_reg_921 = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_196_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_196_p6 <= do_init_reg_192;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_196_p6 <= do_init_reg_192;
        end if; 
    end process;


    ap_phi_mux_w_index19_phi_fu_212_p6_assign_proc : process(w_index19_reg_208, w_index_reg_916, icmp_ln135_reg_921, ap_condition_184)
    begin
        if ((ap_const_boolean_1 = ap_condition_184)) then
            if ((icmp_ln135_reg_921 = ap_const_lv1_1)) then 
                ap_phi_mux_w_index19_phi_fu_212_p6 <= ap_const_lv6_0;
            elsif ((icmp_ln135_reg_921 = ap_const_lv1_0)) then 
                ap_phi_mux_w_index19_phi_fu_212_p6 <= w_index_reg_916;
            else 
                ap_phi_mux_w_index19_phi_fu_212_p6 <= w_index19_reg_208;
            end if;
        else 
            ap_phi_mux_w_index19_phi_fu_212_p6 <= w_index19_reg_208;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_446 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_458 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_470 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_482 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_494 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_506 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_518 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_530 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_542 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_554 <= "XXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(icmp_ln135_fu_578_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln135_fu_578_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_921, ap_enable_reg_pp0_iter1, acc_fu_784_p3, ap_return_0_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1))) then 
            ap_return_0 <= acc_fu_784_p3;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_921, ap_enable_reg_pp0_iter1, acc_6_fu_776_p3, ap_return_1_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1))) then 
            ap_return_1 <= acc_6_fu_776_p3;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_921, ap_enable_reg_pp0_iter1, acc_7_fu_768_p3, ap_return_2_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1))) then 
            ap_return_2 <= acc_7_fu_768_p3;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_921, ap_enable_reg_pp0_iter1, acc_8_fu_760_p3, ap_return_3_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1))) then 
            ap_return_3 <= acc_8_fu_760_p3;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_921, acc_9_fu_752_p3, ap_enable_reg_pp0_iter1, ap_return_4_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_921 = ap_const_lv1_1))) then 
            ap_return_4 <= acc_9_fu_752_p3;
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;

    icmp_ln135_fu_578_p2 <= "1" when (ap_phi_mux_w_index19_phi_fu_212_p6 = ap_const_lv6_31) else "0";
    icmp_ln144_1_fu_682_p2 <= "1" when (outidx_73_q0 = ap_const_lv3_1) else "0";
    icmp_ln144_2_fu_688_p2 <= "1" when (outidx_73_q0 = ap_const_lv3_2) else "0";
    icmp_ln144_3_fu_694_p2 <= "1" when (outidx_73_q0 = ap_const_lv3_3) else "0";
    icmp_ln144_4_fu_700_p2 <= "0" when (grp_fu_846_p3 = ap_const_lv32_0) else "1";
    icmp_ln144_fu_676_p2 <= "1" when (outidx_73_q0 = ap_const_lv3_0) else "0";
    icmp_ln154_fu_798_p2 <= "1" when (signed(in_index_2_fu_792_p2) > signed(ap_const_lv32_9)) else "0";
    in_index_2_fu_792_p2 <= std_logic_vector(unsigned(in_index20_reg_362) + unsigned(ap_const_lv32_1));
    in_index_fu_804_p3 <= 
        ap_const_lv32_0 when (icmp_ln154_fu_798_p2(0) = '1') else 
        in_index_2_fu_792_p2;
    or_ln144_1_fu_711_p2 <= (icmp_ln144_3_fu_694_p2 or icmp_ln144_2_fu_688_p2);
    or_ln144_2_fu_717_p2 <= (or_ln144_1_fu_711_p2 or icmp_ln144_1_fu_682_p2);
    or_ln144_3_fu_723_p2 <= (or_ln144_fu_705_p2 or or_ln144_2_fu_717_p2);
    or_ln144_4_fu_740_p2 <= (icmp_ln144_fu_676_p2 or icmp_ln144_1_fu_682_p2);
    or_ln144_5_fu_746_p2 <= (or_ln144_4_fu_740_p2 or or_ln144_1_fu_711_p2);
    or_ln144_fu_705_p2 <= (icmp_ln144_fu_676_p2 or icmp_ln144_4_fu_700_p2);
    outidx_73_address0 <= zext_ln135_fu_566_p1(6 - 1 downto 0);

    outidx_73_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            outidx_73_ce0_local <= ap_const_logic_1;
        else 
            outidx_73_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_644_p11 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    w14_address0 <= zext_ln135_fu_566_p1(6 - 1 downto 0);

    w14_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w14_ce0_local <= ap_const_logic_1;
        else 
            w14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_572_p2 <= std_logic_vector(unsigned(ap_phi_mux_w_index19_phi_fu_212_p6) + unsigned(ap_const_lv6_1));
    zext_ln135_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index19_phi_fu_212_p6),64));
end behav;
