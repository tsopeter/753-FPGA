// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_array_ap_fixed_10u_array_ap_ufixed_6_0_4_0_0_10u_relu_config16_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer15_out_dout,
        layer15_out_empty_n,
        layer15_out_read,
        layer15_out_num_data_valid,
        layer15_out_fifo_cap,
        layer16_out_din,
        layer16_out_full_n,
        layer16_out_write,
        layer16_out_num_data_valid,
        layer16_out_fifo_cap
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [189:0] layer15_out_dout;
input   layer15_out_empty_n;
output   layer15_out_read;
input  [1:0] layer15_out_num_data_valid;
input  [1:0] layer15_out_fifo_cap;
output  [59:0] layer16_out_din;
input   layer16_out_full_n;
output   layer16_out_write;
input  [1:0] layer16_out_num_data_valid;
input  [1:0] layer16_out_fifo_cap;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer15_out_read;
reg layer16_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer15_out_blk_n;
reg    layer16_out_blk_n;
reg    ap_block_state1;
wire   [18:0] trunc_ln44_fu_195_p1;
wire   [2:0] trunc_ln52_fu_321_p1;
wire   [0:0] tmp_89_fu_339_p3;
wire   [0:0] icmp_ln52_fu_325_p2;
wire   [0:0] or_ln52_fu_347_p2;
wire   [0:0] tmp_86_fu_313_p3;
wire   [0:0] and_ln52_fu_353_p2;
wire   [5:0] trunc_ln4_fu_303_p4;
wire   [5:0] zext_ln52_fu_359_p1;
wire   [8:0] tmp_s_fu_369_p4;
wire   [5:0] add_ln52_fu_363_p2;
wire   [0:0] tmp_88_fu_331_p3;
wire   [0:0] tmp_90_fu_385_p3;
wire   [0:0] not_tmp_105_fu_393_p2;
wire   [0:0] icmp_ln52_19_fu_379_p2;
wire   [0:0] and_ln52_31_fu_399_p2;
wire   [0:0] empty_fu_405_p2;
wire   [0:0] tmp_fu_295_p3;
wire   [0:0] xor_ln52_fu_417_p2;
wire   [0:0] or_ln52_29_fu_411_p2;
wire   [5:0] select_ln52_fu_429_p3;
wire   [0:0] or_ln52_30_fu_423_p2;
wire   [5:0] select_ln52_29_fu_437_p3;
wire   [0:0] icmp_ln51_fu_289_p2;
wire   [5:0] select_ln52_30_fu_445_p3;
wire   [18:0] trunc_ln44_s_fu_199_p4;
wire   [2:0] tmp_45_fu_493_p4;
wire   [0:0] tmp_96_fu_517_p3;
wire   [0:0] icmp_ln52_20_fu_503_p2;
wire   [0:0] or_ln52_31_fu_525_p2;
wire   [0:0] tmp_93_fu_485_p3;
wire   [0:0] and_ln52_13_fu_531_p2;
wire   [5:0] trunc_ln52_s_fu_475_p4;
wire   [5:0] zext_ln52_9_fu_537_p1;
wire   [8:0] tmp_46_fu_547_p4;
wire   [5:0] add_ln52_9_fu_541_p2;
wire   [0:0] tmp_95_fu_509_p3;
wire   [0:0] tmp_97_fu_563_p3;
wire   [0:0] not_tmp_112_fu_571_p2;
wire   [0:0] icmp_ln52_21_fu_557_p2;
wire   [0:0] and_ln52_33_fu_577_p2;
wire   [0:0] empty_62_fu_583_p2;
wire   [0:0] tmp_92_fu_467_p3;
wire   [0:0] xor_ln52_9_fu_595_p2;
wire   [0:0] or_ln52_32_fu_589_p2;
wire   [5:0] select_ln52_31_fu_607_p3;
wire   [0:0] or_ln52_33_fu_601_p2;
wire   [5:0] select_ln52_32_fu_615_p3;
wire   [0:0] icmp_ln51_9_fu_461_p2;
wire   [5:0] select_ln52_33_fu_623_p3;
wire   [18:0] trunc_ln44_3_fu_209_p4;
wire   [2:0] tmp_47_fu_671_p4;
wire   [0:0] tmp_103_fu_695_p3;
wire   [0:0] icmp_ln52_22_fu_681_p2;
wire   [0:0] or_ln52_34_fu_703_p2;
wire   [0:0] tmp_100_fu_663_p3;
wire   [0:0] and_ln52_14_fu_709_p2;
wire   [5:0] trunc_ln52_3_fu_653_p4;
wire   [5:0] zext_ln52_10_fu_715_p1;
wire   [8:0] tmp_48_fu_725_p4;
wire   [5:0] add_ln52_10_fu_719_p2;
wire   [0:0] tmp_102_fu_687_p3;
wire   [0:0] tmp_104_fu_741_p3;
wire   [0:0] not_tmp_119_fu_749_p2;
wire   [0:0] icmp_ln52_23_fu_735_p2;
wire   [0:0] and_ln52_35_fu_755_p2;
wire   [0:0] empty_63_fu_761_p2;
wire   [0:0] tmp_99_fu_645_p3;
wire   [0:0] xor_ln52_10_fu_773_p2;
wire   [0:0] or_ln52_35_fu_767_p2;
wire   [5:0] select_ln52_34_fu_785_p3;
wire   [0:0] or_ln52_36_fu_779_p2;
wire   [5:0] select_ln52_35_fu_793_p3;
wire   [0:0] icmp_ln51_10_fu_639_p2;
wire   [5:0] select_ln52_36_fu_801_p3;
wire   [18:0] trunc_ln44_4_fu_219_p4;
wire   [2:0] tmp_49_fu_849_p4;
wire   [0:0] tmp_110_fu_873_p3;
wire   [0:0] icmp_ln52_24_fu_859_p2;
wire   [0:0] or_ln52_37_fu_881_p2;
wire   [0:0] tmp_107_fu_841_p3;
wire   [0:0] and_ln52_15_fu_887_p2;
wire   [5:0] trunc_ln52_4_fu_831_p4;
wire   [5:0] zext_ln52_11_fu_893_p1;
wire   [8:0] tmp_50_fu_903_p4;
wire   [5:0] add_ln52_11_fu_897_p2;
wire   [0:0] tmp_109_fu_865_p3;
wire   [0:0] tmp_111_fu_919_p3;
wire   [0:0] not_tmp_126_fu_927_p2;
wire   [0:0] icmp_ln52_25_fu_913_p2;
wire   [0:0] and_ln52_37_fu_933_p2;
wire   [0:0] empty_64_fu_939_p2;
wire   [0:0] tmp_106_fu_823_p3;
wire   [0:0] xor_ln52_11_fu_951_p2;
wire   [0:0] or_ln52_38_fu_945_p2;
wire   [5:0] select_ln52_37_fu_963_p3;
wire   [0:0] or_ln52_39_fu_957_p2;
wire   [5:0] select_ln52_38_fu_971_p3;
wire   [0:0] icmp_ln51_11_fu_817_p2;
wire   [5:0] select_ln52_39_fu_979_p3;
wire   [18:0] trunc_ln44_5_fu_229_p4;
wire   [2:0] tmp_51_fu_1027_p4;
wire   [0:0] tmp_117_fu_1051_p3;
wire   [0:0] icmp_ln52_26_fu_1037_p2;
wire   [0:0] or_ln52_40_fu_1059_p2;
wire   [0:0] tmp_114_fu_1019_p3;
wire   [0:0] and_ln52_16_fu_1065_p2;
wire   [5:0] trunc_ln52_5_fu_1009_p4;
wire   [5:0] zext_ln52_12_fu_1071_p1;
wire   [8:0] tmp_52_fu_1081_p4;
wire   [5:0] add_ln52_12_fu_1075_p2;
wire   [0:0] tmp_116_fu_1043_p3;
wire   [0:0] tmp_118_fu_1097_p3;
wire   [0:0] not_tmp_133_fu_1105_p2;
wire   [0:0] icmp_ln52_27_fu_1091_p2;
wire   [0:0] and_ln52_39_fu_1111_p2;
wire   [0:0] empty_65_fu_1117_p2;
wire   [0:0] tmp_113_fu_1001_p3;
wire   [0:0] xor_ln52_12_fu_1129_p2;
wire   [0:0] or_ln52_41_fu_1123_p2;
wire   [5:0] select_ln52_40_fu_1141_p3;
wire   [0:0] or_ln52_42_fu_1135_p2;
wire   [5:0] select_ln52_41_fu_1149_p3;
wire   [0:0] icmp_ln51_12_fu_995_p2;
wire   [5:0] select_ln52_42_fu_1157_p3;
wire   [18:0] trunc_ln44_6_fu_239_p4;
wire   [2:0] tmp_53_fu_1205_p4;
wire   [0:0] tmp_124_fu_1229_p3;
wire   [0:0] icmp_ln52_28_fu_1215_p2;
wire   [0:0] or_ln52_43_fu_1237_p2;
wire   [0:0] tmp_121_fu_1197_p3;
wire   [0:0] and_ln52_17_fu_1243_p2;
wire   [5:0] trunc_ln52_6_fu_1187_p4;
wire   [5:0] zext_ln52_13_fu_1249_p1;
wire   [8:0] tmp_54_fu_1259_p4;
wire   [5:0] add_ln52_13_fu_1253_p2;
wire   [0:0] tmp_123_fu_1221_p3;
wire   [0:0] tmp_125_fu_1275_p3;
wire   [0:0] not_tmp_140_fu_1283_p2;
wire   [0:0] icmp_ln52_29_fu_1269_p2;
wire   [0:0] and_ln52_41_fu_1289_p2;
wire   [0:0] empty_66_fu_1295_p2;
wire   [0:0] tmp_120_fu_1179_p3;
wire   [0:0] xor_ln52_13_fu_1307_p2;
wire   [0:0] or_ln52_44_fu_1301_p2;
wire   [5:0] select_ln52_43_fu_1319_p3;
wire   [0:0] or_ln52_45_fu_1313_p2;
wire   [5:0] select_ln52_44_fu_1327_p3;
wire   [0:0] icmp_ln51_13_fu_1173_p2;
wire   [5:0] select_ln52_45_fu_1335_p3;
wire   [18:0] trunc_ln44_7_fu_249_p4;
wire   [2:0] tmp_55_fu_1383_p4;
wire   [0:0] tmp_131_fu_1407_p3;
wire   [0:0] icmp_ln52_30_fu_1393_p2;
wire   [0:0] or_ln52_46_fu_1415_p2;
wire   [0:0] tmp_128_fu_1375_p3;
wire   [0:0] and_ln52_18_fu_1421_p2;
wire   [5:0] trunc_ln52_7_fu_1365_p4;
wire   [5:0] zext_ln52_14_fu_1427_p1;
wire   [8:0] tmp_56_fu_1437_p4;
wire   [5:0] add_ln52_14_fu_1431_p2;
wire   [0:0] tmp_130_fu_1399_p3;
wire   [0:0] tmp_132_fu_1453_p3;
wire   [0:0] not_tmp_147_fu_1461_p2;
wire   [0:0] icmp_ln52_31_fu_1447_p2;
wire   [0:0] and_ln52_43_fu_1467_p2;
wire   [0:0] empty_67_fu_1473_p2;
wire   [0:0] tmp_127_fu_1357_p3;
wire   [0:0] xor_ln52_14_fu_1485_p2;
wire   [0:0] or_ln52_47_fu_1479_p2;
wire   [5:0] select_ln52_46_fu_1497_p3;
wire   [0:0] or_ln52_48_fu_1491_p2;
wire   [5:0] select_ln52_47_fu_1505_p3;
wire   [0:0] icmp_ln51_14_fu_1351_p2;
wire   [5:0] select_ln52_48_fu_1513_p3;
wire   [18:0] trunc_ln44_8_fu_259_p4;
wire   [2:0] tmp_57_fu_1561_p4;
wire   [0:0] tmp_138_fu_1585_p3;
wire   [0:0] icmp_ln52_32_fu_1571_p2;
wire   [0:0] or_ln52_49_fu_1593_p2;
wire   [0:0] tmp_135_fu_1553_p3;
wire   [0:0] and_ln52_19_fu_1599_p2;
wire   [5:0] trunc_ln52_8_fu_1543_p4;
wire   [5:0] zext_ln52_15_fu_1605_p1;
wire   [8:0] tmp_58_fu_1615_p4;
wire   [5:0] add_ln52_15_fu_1609_p2;
wire   [0:0] tmp_137_fu_1577_p3;
wire   [0:0] tmp_139_fu_1631_p3;
wire   [0:0] not_tmp_154_fu_1639_p2;
wire   [0:0] icmp_ln52_33_fu_1625_p2;
wire   [0:0] and_ln52_45_fu_1645_p2;
wire   [0:0] empty_68_fu_1651_p2;
wire   [0:0] tmp_134_fu_1535_p3;
wire   [0:0] xor_ln52_15_fu_1663_p2;
wire   [0:0] or_ln52_50_fu_1657_p2;
wire   [5:0] select_ln52_49_fu_1675_p3;
wire   [0:0] or_ln52_51_fu_1669_p2;
wire   [5:0] select_ln52_50_fu_1683_p3;
wire   [0:0] icmp_ln51_15_fu_1529_p2;
wire   [5:0] select_ln52_51_fu_1691_p3;
wire   [18:0] trunc_ln44_9_fu_269_p4;
wire   [2:0] tmp_59_fu_1739_p4;
wire   [0:0] tmp_143_fu_1763_p3;
wire   [0:0] icmp_ln52_34_fu_1749_p2;
wire   [0:0] or_ln52_52_fu_1771_p2;
wire   [0:0] tmp_141_fu_1731_p3;
wire   [0:0] and_ln52_20_fu_1777_p2;
wire   [5:0] trunc_ln52_9_fu_1721_p4;
wire   [5:0] zext_ln52_16_fu_1783_p1;
wire   [8:0] tmp_60_fu_1793_p4;
wire   [5:0] add_ln52_16_fu_1787_p2;
wire   [0:0] tmp_142_fu_1755_p3;
wire   [0:0] tmp_144_fu_1809_p3;
wire   [0:0] not_tmp_161_fu_1817_p2;
wire   [0:0] icmp_ln52_35_fu_1803_p2;
wire   [0:0] and_ln52_47_fu_1823_p2;
wire   [0:0] empty_69_fu_1829_p2;
wire   [0:0] tmp_140_fu_1713_p3;
wire   [0:0] xor_ln52_16_fu_1841_p2;
wire   [0:0] or_ln52_53_fu_1835_p2;
wire   [5:0] select_ln52_52_fu_1853_p3;
wire   [0:0] or_ln52_54_fu_1847_p2;
wire   [5:0] select_ln52_53_fu_1861_p3;
wire   [0:0] icmp_ln51_16_fu_1707_p2;
wire   [5:0] select_ln52_54_fu_1869_p3;
wire   [18:0] trunc_ln44_1_fu_279_p4;
wire   [2:0] tmp_61_fu_1917_p4;
wire   [0:0] tmp_148_fu_1941_p3;
wire   [0:0] icmp_ln52_36_fu_1927_p2;
wire   [0:0] or_ln52_55_fu_1949_p2;
wire   [0:0] tmp_146_fu_1909_p3;
wire   [0:0] and_ln52_21_fu_1955_p2;
wire   [5:0] trunc_ln52_1_fu_1899_p4;
wire   [5:0] zext_ln52_17_fu_1961_p1;
wire   [8:0] tmp_62_fu_1971_p4;
wire   [5:0] add_ln52_17_fu_1965_p2;
wire   [0:0] tmp_147_fu_1933_p3;
wire   [0:0] tmp_149_fu_1987_p3;
wire   [0:0] not_tmp_168_fu_1995_p2;
wire   [0:0] icmp_ln52_37_fu_1981_p2;
wire   [0:0] and_ln52_48_fu_2001_p2;
wire   [0:0] empty_70_fu_2007_p2;
wire   [0:0] tmp_145_fu_1891_p3;
wire   [0:0] xor_ln52_17_fu_2019_p2;
wire   [0:0] or_ln52_56_fu_2013_p2;
wire   [5:0] select_ln52_55_fu_2031_p3;
wire   [0:0] or_ln52_57_fu_2025_p2;
wire   [5:0] select_ln52_56_fu_2039_p3;
wire   [0:0] icmp_ln51_17_fu_1885_p2;
wire   [5:0] select_ln52_57_fu_2047_p3;
wire   [5:0] out_data_0_9_0_0_0_load_fu_2055_p3;
wire   [5:0] out_data_0_8_0_0_0_load_fu_1877_p3;
wire   [5:0] out_data_0_7_0_0_0_load_fu_1699_p3;
wire   [5:0] out_data_0_6_0_0_0_load_fu_1521_p3;
wire   [5:0] out_data_0_5_0_0_0_load_fu_1343_p3;
wire   [5:0] out_data_0_4_0_0_0_load_fu_1165_p3;
wire   [5:0] out_data_0_3_0_0_0_load_fu_987_p3;
wire   [5:0] out_data_0_2_0_0_0_load_fu_809_p3;
wire   [5:0] out_data_0_1_0_0_0_load_fu_631_p3;
wire   [5:0] out_data_0_0_0_0_0_load_fu_453_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_blk_n = layer15_out_empty_n;
    end else begin
        layer15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_read = 1'b1;
    end else begin
        layer15_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer16_out_blk_n = layer16_out_full_n;
    end else begin
        layer16_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        layer16_out_write = 1'b1;
    end else begin
        layer16_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln52_10_fu_719_p2 = (trunc_ln52_3_fu_653_p4 + zext_ln52_10_fu_715_p1);

assign add_ln52_11_fu_897_p2 = (trunc_ln52_4_fu_831_p4 + zext_ln52_11_fu_893_p1);

assign add_ln52_12_fu_1075_p2 = (trunc_ln52_5_fu_1009_p4 + zext_ln52_12_fu_1071_p1);

assign add_ln52_13_fu_1253_p2 = (trunc_ln52_6_fu_1187_p4 + zext_ln52_13_fu_1249_p1);

assign add_ln52_14_fu_1431_p2 = (trunc_ln52_7_fu_1365_p4 + zext_ln52_14_fu_1427_p1);

assign add_ln52_15_fu_1609_p2 = (trunc_ln52_8_fu_1543_p4 + zext_ln52_15_fu_1605_p1);

assign add_ln52_16_fu_1787_p2 = (trunc_ln52_9_fu_1721_p4 + zext_ln52_16_fu_1783_p1);

assign add_ln52_17_fu_1965_p2 = (trunc_ln52_1_fu_1899_p4 + zext_ln52_17_fu_1961_p1);

assign add_ln52_9_fu_541_p2 = (trunc_ln52_s_fu_475_p4 + zext_ln52_9_fu_537_p1);

assign add_ln52_fu_363_p2 = (trunc_ln4_fu_303_p4 + zext_ln52_fu_359_p1);

assign and_ln52_13_fu_531_p2 = (tmp_93_fu_485_p3 & or_ln52_31_fu_525_p2);

assign and_ln52_14_fu_709_p2 = (tmp_100_fu_663_p3 & or_ln52_34_fu_703_p2);

assign and_ln52_15_fu_887_p2 = (tmp_107_fu_841_p3 & or_ln52_37_fu_881_p2);

assign and_ln52_16_fu_1065_p2 = (tmp_114_fu_1019_p3 & or_ln52_40_fu_1059_p2);

assign and_ln52_17_fu_1243_p2 = (tmp_121_fu_1197_p3 & or_ln52_43_fu_1237_p2);

assign and_ln52_18_fu_1421_p2 = (tmp_128_fu_1375_p3 & or_ln52_46_fu_1415_p2);

assign and_ln52_19_fu_1599_p2 = (tmp_135_fu_1553_p3 & or_ln52_49_fu_1593_p2);

assign and_ln52_20_fu_1777_p2 = (tmp_141_fu_1731_p3 & or_ln52_52_fu_1771_p2);

assign and_ln52_21_fu_1955_p2 = (tmp_146_fu_1909_p3 & or_ln52_55_fu_1949_p2);

assign and_ln52_31_fu_399_p2 = (tmp_90_fu_385_p3 | not_tmp_105_fu_393_p2);

assign and_ln52_33_fu_577_p2 = (tmp_97_fu_563_p3 | not_tmp_112_fu_571_p2);

assign and_ln52_35_fu_755_p2 = (tmp_104_fu_741_p3 | not_tmp_119_fu_749_p2);

assign and_ln52_37_fu_933_p2 = (tmp_111_fu_919_p3 | not_tmp_126_fu_927_p2);

assign and_ln52_39_fu_1111_p2 = (tmp_118_fu_1097_p3 | not_tmp_133_fu_1105_p2);

assign and_ln52_41_fu_1289_p2 = (tmp_125_fu_1275_p3 | not_tmp_140_fu_1283_p2);

assign and_ln52_43_fu_1467_p2 = (tmp_132_fu_1453_p3 | not_tmp_147_fu_1461_p2);

assign and_ln52_45_fu_1645_p2 = (tmp_139_fu_1631_p3 | not_tmp_154_fu_1639_p2);

assign and_ln52_47_fu_1823_p2 = (tmp_144_fu_1809_p3 | not_tmp_161_fu_1817_p2);

assign and_ln52_48_fu_2001_p2 = (tmp_149_fu_1987_p3 | not_tmp_168_fu_1995_p2);

assign and_ln52_fu_353_p2 = (tmp_86_fu_313_p3 & or_ln52_fu_347_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer16_out_full_n == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign empty_62_fu_583_p2 = (icmp_ln52_21_fu_557_p2 & and_ln52_33_fu_577_p2);

assign empty_63_fu_761_p2 = (icmp_ln52_23_fu_735_p2 & and_ln52_35_fu_755_p2);

assign empty_64_fu_939_p2 = (icmp_ln52_25_fu_913_p2 & and_ln52_37_fu_933_p2);

assign empty_65_fu_1117_p2 = (icmp_ln52_27_fu_1091_p2 & and_ln52_39_fu_1111_p2);

assign empty_66_fu_1295_p2 = (icmp_ln52_29_fu_1269_p2 & and_ln52_41_fu_1289_p2);

assign empty_67_fu_1473_p2 = (icmp_ln52_31_fu_1447_p2 & and_ln52_43_fu_1467_p2);

assign empty_68_fu_1651_p2 = (icmp_ln52_33_fu_1625_p2 & and_ln52_45_fu_1645_p2);

assign empty_69_fu_1829_p2 = (icmp_ln52_35_fu_1803_p2 & and_ln52_47_fu_1823_p2);

assign empty_70_fu_2007_p2 = (icmp_ln52_37_fu_1981_p2 & and_ln52_48_fu_2001_p2);

assign empty_fu_405_p2 = (icmp_ln52_19_fu_379_p2 & and_ln52_31_fu_399_p2);

assign icmp_ln51_10_fu_639_p2 = (($signed(trunc_ln44_3_fu_209_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_11_fu_817_p2 = (($signed(trunc_ln44_4_fu_219_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_12_fu_995_p2 = (($signed(trunc_ln44_5_fu_229_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_13_fu_1173_p2 = (($signed(trunc_ln44_6_fu_239_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_14_fu_1351_p2 = (($signed(trunc_ln44_7_fu_249_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_15_fu_1529_p2 = (($signed(trunc_ln44_8_fu_259_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_16_fu_1707_p2 = (($signed(trunc_ln44_9_fu_269_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_17_fu_1885_p2 = (($signed(trunc_ln44_1_fu_279_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_9_fu_461_p2 = (($signed(trunc_ln44_s_fu_199_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_289_p2 = (($signed(trunc_ln44_fu_195_p1) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln52_19_fu_379_p2 = ((tmp_s_fu_369_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_20_fu_503_p2 = ((tmp_45_fu_493_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_21_fu_557_p2 = ((tmp_46_fu_547_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_22_fu_681_p2 = ((tmp_47_fu_671_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_23_fu_735_p2 = ((tmp_48_fu_725_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_24_fu_859_p2 = ((tmp_49_fu_849_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_25_fu_913_p2 = ((tmp_50_fu_903_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_26_fu_1037_p2 = ((tmp_51_fu_1027_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_27_fu_1091_p2 = ((tmp_52_fu_1081_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_28_fu_1215_p2 = ((tmp_53_fu_1205_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_29_fu_1269_p2 = ((tmp_54_fu_1259_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_30_fu_1393_p2 = ((tmp_55_fu_1383_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_31_fu_1447_p2 = ((tmp_56_fu_1437_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_32_fu_1571_p2 = ((tmp_57_fu_1561_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_33_fu_1625_p2 = ((tmp_58_fu_1615_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_34_fu_1749_p2 = ((tmp_59_fu_1739_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_35_fu_1803_p2 = ((tmp_60_fu_1793_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_36_fu_1927_p2 = ((tmp_61_fu_1917_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_37_fu_1981_p2 = ((tmp_62_fu_1971_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_325_p2 = ((trunc_ln52_fu_321_p1 != 3'd0) ? 1'b1 : 1'b0);

assign layer16_out_din = {{{{{{{{{{out_data_0_9_0_0_0_load_fu_2055_p3}, {out_data_0_8_0_0_0_load_fu_1877_p3}}, {out_data_0_7_0_0_0_load_fu_1699_p3}}, {out_data_0_6_0_0_0_load_fu_1521_p3}}, {out_data_0_5_0_0_0_load_fu_1343_p3}}, {out_data_0_4_0_0_0_load_fu_1165_p3}}, {out_data_0_3_0_0_0_load_fu_987_p3}}, {out_data_0_2_0_0_0_load_fu_809_p3}}, {out_data_0_1_0_0_0_load_fu_631_p3}}, {out_data_0_0_0_0_0_load_fu_453_p3}};

assign not_tmp_105_fu_393_p2 = (tmp_88_fu_331_p3 ^ 1'd1);

assign not_tmp_112_fu_571_p2 = (tmp_95_fu_509_p3 ^ 1'd1);

assign not_tmp_119_fu_749_p2 = (tmp_102_fu_687_p3 ^ 1'd1);

assign not_tmp_126_fu_927_p2 = (tmp_109_fu_865_p3 ^ 1'd1);

assign not_tmp_133_fu_1105_p2 = (tmp_116_fu_1043_p3 ^ 1'd1);

assign not_tmp_140_fu_1283_p2 = (tmp_123_fu_1221_p3 ^ 1'd1);

assign not_tmp_147_fu_1461_p2 = (tmp_130_fu_1399_p3 ^ 1'd1);

assign not_tmp_154_fu_1639_p2 = (tmp_137_fu_1577_p3 ^ 1'd1);

assign not_tmp_161_fu_1817_p2 = (tmp_142_fu_1755_p3 ^ 1'd1);

assign not_tmp_168_fu_1995_p2 = (tmp_147_fu_1933_p3 ^ 1'd1);

assign or_ln52_29_fu_411_p2 = (tmp_fu_295_p3 | empty_fu_405_p2);

assign or_ln52_30_fu_423_p2 = (xor_ln52_fu_417_p2 | tmp_fu_295_p3);

assign or_ln52_31_fu_525_p2 = (tmp_96_fu_517_p3 | icmp_ln52_20_fu_503_p2);

assign or_ln52_32_fu_589_p2 = (tmp_92_fu_467_p3 | empty_62_fu_583_p2);

assign or_ln52_33_fu_601_p2 = (xor_ln52_9_fu_595_p2 | tmp_92_fu_467_p3);

assign or_ln52_34_fu_703_p2 = (tmp_103_fu_695_p3 | icmp_ln52_22_fu_681_p2);

assign or_ln52_35_fu_767_p2 = (tmp_99_fu_645_p3 | empty_63_fu_761_p2);

assign or_ln52_36_fu_779_p2 = (xor_ln52_10_fu_773_p2 | tmp_99_fu_645_p3);

assign or_ln52_37_fu_881_p2 = (tmp_110_fu_873_p3 | icmp_ln52_24_fu_859_p2);

assign or_ln52_38_fu_945_p2 = (tmp_106_fu_823_p3 | empty_64_fu_939_p2);

assign or_ln52_39_fu_957_p2 = (xor_ln52_11_fu_951_p2 | tmp_106_fu_823_p3);

assign or_ln52_40_fu_1059_p2 = (tmp_117_fu_1051_p3 | icmp_ln52_26_fu_1037_p2);

assign or_ln52_41_fu_1123_p2 = (tmp_113_fu_1001_p3 | empty_65_fu_1117_p2);

assign or_ln52_42_fu_1135_p2 = (xor_ln52_12_fu_1129_p2 | tmp_113_fu_1001_p3);

assign or_ln52_43_fu_1237_p2 = (tmp_124_fu_1229_p3 | icmp_ln52_28_fu_1215_p2);

assign or_ln52_44_fu_1301_p2 = (tmp_120_fu_1179_p3 | empty_66_fu_1295_p2);

assign or_ln52_45_fu_1313_p2 = (xor_ln52_13_fu_1307_p2 | tmp_120_fu_1179_p3);

assign or_ln52_46_fu_1415_p2 = (tmp_131_fu_1407_p3 | icmp_ln52_30_fu_1393_p2);

assign or_ln52_47_fu_1479_p2 = (tmp_127_fu_1357_p3 | empty_67_fu_1473_p2);

assign or_ln52_48_fu_1491_p2 = (xor_ln52_14_fu_1485_p2 | tmp_127_fu_1357_p3);

assign or_ln52_49_fu_1593_p2 = (tmp_138_fu_1585_p3 | icmp_ln52_32_fu_1571_p2);

assign or_ln52_50_fu_1657_p2 = (tmp_134_fu_1535_p3 | empty_68_fu_1651_p2);

assign or_ln52_51_fu_1669_p2 = (xor_ln52_15_fu_1663_p2 | tmp_134_fu_1535_p3);

assign or_ln52_52_fu_1771_p2 = (tmp_143_fu_1763_p3 | icmp_ln52_34_fu_1749_p2);

assign or_ln52_53_fu_1835_p2 = (tmp_140_fu_1713_p3 | empty_69_fu_1829_p2);

assign or_ln52_54_fu_1847_p2 = (xor_ln52_16_fu_1841_p2 | tmp_140_fu_1713_p3);

assign or_ln52_55_fu_1949_p2 = (tmp_148_fu_1941_p3 | icmp_ln52_36_fu_1927_p2);

assign or_ln52_56_fu_2013_p2 = (tmp_145_fu_1891_p3 | empty_70_fu_2007_p2);

assign or_ln52_57_fu_2025_p2 = (xor_ln52_17_fu_2019_p2 | tmp_145_fu_1891_p3);

assign or_ln52_fu_347_p2 = (tmp_89_fu_339_p3 | icmp_ln52_fu_325_p2);

assign out_data_0_0_0_0_0_load_fu_453_p3 = ((icmp_ln51_fu_289_p2[0:0] == 1'b1) ? select_ln52_30_fu_445_p3 : 6'd0);

assign out_data_0_1_0_0_0_load_fu_631_p3 = ((icmp_ln51_9_fu_461_p2[0:0] == 1'b1) ? select_ln52_33_fu_623_p3 : 6'd0);

assign out_data_0_2_0_0_0_load_fu_809_p3 = ((icmp_ln51_10_fu_639_p2[0:0] == 1'b1) ? select_ln52_36_fu_801_p3 : 6'd0);

assign out_data_0_3_0_0_0_load_fu_987_p3 = ((icmp_ln51_11_fu_817_p2[0:0] == 1'b1) ? select_ln52_39_fu_979_p3 : 6'd0);

assign out_data_0_4_0_0_0_load_fu_1165_p3 = ((icmp_ln51_12_fu_995_p2[0:0] == 1'b1) ? select_ln52_42_fu_1157_p3 : 6'd0);

assign out_data_0_5_0_0_0_load_fu_1343_p3 = ((icmp_ln51_13_fu_1173_p2[0:0] == 1'b1) ? select_ln52_45_fu_1335_p3 : 6'd0);

assign out_data_0_6_0_0_0_load_fu_1521_p3 = ((icmp_ln51_14_fu_1351_p2[0:0] == 1'b1) ? select_ln52_48_fu_1513_p3 : 6'd0);

assign out_data_0_7_0_0_0_load_fu_1699_p3 = ((icmp_ln51_15_fu_1529_p2[0:0] == 1'b1) ? select_ln52_51_fu_1691_p3 : 6'd0);

assign out_data_0_8_0_0_0_load_fu_1877_p3 = ((icmp_ln51_16_fu_1707_p2[0:0] == 1'b1) ? select_ln52_54_fu_1869_p3 : 6'd0);

assign out_data_0_9_0_0_0_load_fu_2055_p3 = ((icmp_ln51_17_fu_1885_p2[0:0] == 1'b1) ? select_ln52_57_fu_2047_p3 : 6'd0);

assign select_ln52_29_fu_437_p3 = ((or_ln52_29_fu_411_p2[0:0] == 1'b1) ? select_ln52_fu_429_p3 : 6'd63);

assign select_ln52_30_fu_445_p3 = ((or_ln52_30_fu_423_p2[0:0] == 1'b1) ? select_ln52_29_fu_437_p3 : add_ln52_fu_363_p2);

assign select_ln52_31_fu_607_p3 = ((tmp_92_fu_467_p3[0:0] == 1'b1) ? 6'd0 : add_ln52_9_fu_541_p2);

assign select_ln52_32_fu_615_p3 = ((or_ln52_32_fu_589_p2[0:0] == 1'b1) ? select_ln52_31_fu_607_p3 : 6'd63);

assign select_ln52_33_fu_623_p3 = ((or_ln52_33_fu_601_p2[0:0] == 1'b1) ? select_ln52_32_fu_615_p3 : add_ln52_9_fu_541_p2);

assign select_ln52_34_fu_785_p3 = ((tmp_99_fu_645_p3[0:0] == 1'b1) ? 6'd0 : add_ln52_10_fu_719_p2);

assign select_ln52_35_fu_793_p3 = ((or_ln52_35_fu_767_p2[0:0] == 1'b1) ? select_ln52_34_fu_785_p3 : 6'd63);

assign select_ln52_36_fu_801_p3 = ((or_ln52_36_fu_779_p2[0:0] == 1'b1) ? select_ln52_35_fu_793_p3 : add_ln52_10_fu_719_p2);

assign select_ln52_37_fu_963_p3 = ((tmp_106_fu_823_p3[0:0] == 1'b1) ? 6'd0 : add_ln52_11_fu_897_p2);

assign select_ln52_38_fu_971_p3 = ((or_ln52_38_fu_945_p2[0:0] == 1'b1) ? select_ln52_37_fu_963_p3 : 6'd63);

assign select_ln52_39_fu_979_p3 = ((or_ln52_39_fu_957_p2[0:0] == 1'b1) ? select_ln52_38_fu_971_p3 : add_ln52_11_fu_897_p2);

assign select_ln52_40_fu_1141_p3 = ((tmp_113_fu_1001_p3[0:0] == 1'b1) ? 6'd0 : add_ln52_12_fu_1075_p2);

assign select_ln52_41_fu_1149_p3 = ((or_ln52_41_fu_1123_p2[0:0] == 1'b1) ? select_ln52_40_fu_1141_p3 : 6'd63);

assign select_ln52_42_fu_1157_p3 = ((or_ln52_42_fu_1135_p2[0:0] == 1'b1) ? select_ln52_41_fu_1149_p3 : add_ln52_12_fu_1075_p2);

assign select_ln52_43_fu_1319_p3 = ((tmp_120_fu_1179_p3[0:0] == 1'b1) ? 6'd0 : add_ln52_13_fu_1253_p2);

assign select_ln52_44_fu_1327_p3 = ((or_ln52_44_fu_1301_p2[0:0] == 1'b1) ? select_ln52_43_fu_1319_p3 : 6'd63);

assign select_ln52_45_fu_1335_p3 = ((or_ln52_45_fu_1313_p2[0:0] == 1'b1) ? select_ln52_44_fu_1327_p3 : add_ln52_13_fu_1253_p2);

assign select_ln52_46_fu_1497_p3 = ((tmp_127_fu_1357_p3[0:0] == 1'b1) ? 6'd0 : add_ln52_14_fu_1431_p2);

assign select_ln52_47_fu_1505_p3 = ((or_ln52_47_fu_1479_p2[0:0] == 1'b1) ? select_ln52_46_fu_1497_p3 : 6'd63);

assign select_ln52_48_fu_1513_p3 = ((or_ln52_48_fu_1491_p2[0:0] == 1'b1) ? select_ln52_47_fu_1505_p3 : add_ln52_14_fu_1431_p2);

assign select_ln52_49_fu_1675_p3 = ((tmp_134_fu_1535_p3[0:0] == 1'b1) ? 6'd0 : add_ln52_15_fu_1609_p2);

assign select_ln52_50_fu_1683_p3 = ((or_ln52_50_fu_1657_p2[0:0] == 1'b1) ? select_ln52_49_fu_1675_p3 : 6'd63);

assign select_ln52_51_fu_1691_p3 = ((or_ln52_51_fu_1669_p2[0:0] == 1'b1) ? select_ln52_50_fu_1683_p3 : add_ln52_15_fu_1609_p2);

assign select_ln52_52_fu_1853_p3 = ((tmp_140_fu_1713_p3[0:0] == 1'b1) ? 6'd0 : add_ln52_16_fu_1787_p2);

assign select_ln52_53_fu_1861_p3 = ((or_ln52_53_fu_1835_p2[0:0] == 1'b1) ? select_ln52_52_fu_1853_p3 : 6'd63);

assign select_ln52_54_fu_1869_p3 = ((or_ln52_54_fu_1847_p2[0:0] == 1'b1) ? select_ln52_53_fu_1861_p3 : add_ln52_16_fu_1787_p2);

assign select_ln52_55_fu_2031_p3 = ((tmp_145_fu_1891_p3[0:0] == 1'b1) ? 6'd0 : add_ln52_17_fu_1965_p2);

assign select_ln52_56_fu_2039_p3 = ((or_ln52_56_fu_2013_p2[0:0] == 1'b1) ? select_ln52_55_fu_2031_p3 : 6'd63);

assign select_ln52_57_fu_2047_p3 = ((or_ln52_57_fu_2025_p2[0:0] == 1'b1) ? select_ln52_56_fu_2039_p3 : add_ln52_17_fu_1965_p2);

assign select_ln52_fu_429_p3 = ((tmp_fu_295_p3[0:0] == 1'b1) ? 6'd0 : add_ln52_fu_363_p2);

assign start_out = real_start;

assign tmp_100_fu_663_p3 = layer15_out_dout[32'd41];

assign tmp_102_fu_687_p3 = layer15_out_dout[32'd47];

assign tmp_103_fu_695_p3 = layer15_out_dout[32'd42];

assign tmp_104_fu_741_p3 = add_ln52_10_fu_719_p2[32'd5];

assign tmp_106_fu_823_p3 = layer15_out_dout[32'd75];

assign tmp_107_fu_841_p3 = layer15_out_dout[32'd60];

assign tmp_109_fu_865_p3 = layer15_out_dout[32'd66];

assign tmp_110_fu_873_p3 = layer15_out_dout[32'd61];

assign tmp_111_fu_919_p3 = add_ln52_11_fu_897_p2[32'd5];

assign tmp_113_fu_1001_p3 = layer15_out_dout[32'd94];

assign tmp_114_fu_1019_p3 = layer15_out_dout[32'd79];

assign tmp_116_fu_1043_p3 = layer15_out_dout[32'd85];

assign tmp_117_fu_1051_p3 = layer15_out_dout[32'd80];

assign tmp_118_fu_1097_p3 = add_ln52_12_fu_1075_p2[32'd5];

assign tmp_120_fu_1179_p3 = layer15_out_dout[32'd113];

assign tmp_121_fu_1197_p3 = layer15_out_dout[32'd98];

assign tmp_123_fu_1221_p3 = layer15_out_dout[32'd104];

assign tmp_124_fu_1229_p3 = layer15_out_dout[32'd99];

assign tmp_125_fu_1275_p3 = add_ln52_13_fu_1253_p2[32'd5];

assign tmp_127_fu_1357_p3 = layer15_out_dout[32'd132];

assign tmp_128_fu_1375_p3 = layer15_out_dout[32'd117];

assign tmp_130_fu_1399_p3 = layer15_out_dout[32'd123];

assign tmp_131_fu_1407_p3 = layer15_out_dout[32'd118];

assign tmp_132_fu_1453_p3 = add_ln52_14_fu_1431_p2[32'd5];

assign tmp_134_fu_1535_p3 = layer15_out_dout[32'd151];

assign tmp_135_fu_1553_p3 = layer15_out_dout[32'd136];

assign tmp_137_fu_1577_p3 = layer15_out_dout[32'd142];

assign tmp_138_fu_1585_p3 = layer15_out_dout[32'd137];

assign tmp_139_fu_1631_p3 = add_ln52_15_fu_1609_p2[32'd5];

assign tmp_140_fu_1713_p3 = layer15_out_dout[32'd170];

assign tmp_141_fu_1731_p3 = layer15_out_dout[32'd155];

assign tmp_142_fu_1755_p3 = layer15_out_dout[32'd161];

assign tmp_143_fu_1763_p3 = layer15_out_dout[32'd156];

assign tmp_144_fu_1809_p3 = add_ln52_16_fu_1787_p2[32'd5];

assign tmp_145_fu_1891_p3 = layer15_out_dout[32'd189];

assign tmp_146_fu_1909_p3 = layer15_out_dout[32'd174];

assign tmp_147_fu_1933_p3 = layer15_out_dout[32'd180];

assign tmp_148_fu_1941_p3 = layer15_out_dout[32'd175];

assign tmp_149_fu_1987_p3 = add_ln52_17_fu_1965_p2[32'd5];

assign tmp_45_fu_493_p4 = {{layer15_out_dout[21:19]}};

assign tmp_46_fu_547_p4 = {{layer15_out_dout[37:29]}};

assign tmp_47_fu_671_p4 = {{layer15_out_dout[40:38]}};

assign tmp_48_fu_725_p4 = {{layer15_out_dout[56:48]}};

assign tmp_49_fu_849_p4 = {{layer15_out_dout[59:57]}};

assign tmp_50_fu_903_p4 = {{layer15_out_dout[75:67]}};

assign tmp_51_fu_1027_p4 = {{layer15_out_dout[78:76]}};

assign tmp_52_fu_1081_p4 = {{layer15_out_dout[94:86]}};

assign tmp_53_fu_1205_p4 = {{layer15_out_dout[97:95]}};

assign tmp_54_fu_1259_p4 = {{layer15_out_dout[113:105]}};

assign tmp_55_fu_1383_p4 = {{layer15_out_dout[116:114]}};

assign tmp_56_fu_1437_p4 = {{layer15_out_dout[132:124]}};

assign tmp_57_fu_1561_p4 = {{layer15_out_dout[135:133]}};

assign tmp_58_fu_1615_p4 = {{layer15_out_dout[151:143]}};

assign tmp_59_fu_1739_p4 = {{layer15_out_dout[154:152]}};

assign tmp_60_fu_1793_p4 = {{layer15_out_dout[170:162]}};

assign tmp_61_fu_1917_p4 = {{layer15_out_dout[173:171]}};

assign tmp_62_fu_1971_p4 = {{layer15_out_dout[189:181]}};

assign tmp_86_fu_313_p3 = layer15_out_dout[32'd3];

assign tmp_88_fu_331_p3 = layer15_out_dout[32'd9];

assign tmp_89_fu_339_p3 = layer15_out_dout[32'd4];

assign tmp_90_fu_385_p3 = add_ln52_fu_363_p2[32'd5];

assign tmp_92_fu_467_p3 = layer15_out_dout[32'd37];

assign tmp_93_fu_485_p3 = layer15_out_dout[32'd22];

assign tmp_95_fu_509_p3 = layer15_out_dout[32'd28];

assign tmp_96_fu_517_p3 = layer15_out_dout[32'd23];

assign tmp_97_fu_563_p3 = add_ln52_9_fu_541_p2[32'd5];

assign tmp_99_fu_645_p3 = layer15_out_dout[32'd56];

assign tmp_fu_295_p3 = layer15_out_dout[32'd18];

assign tmp_s_fu_369_p4 = {{layer15_out_dout[18:10]}};

assign trunc_ln44_1_fu_279_p4 = {{layer15_out_dout[189:171]}};

assign trunc_ln44_3_fu_209_p4 = {{layer15_out_dout[56:38]}};

assign trunc_ln44_4_fu_219_p4 = {{layer15_out_dout[75:57]}};

assign trunc_ln44_5_fu_229_p4 = {{layer15_out_dout[94:76]}};

assign trunc_ln44_6_fu_239_p4 = {{layer15_out_dout[113:95]}};

assign trunc_ln44_7_fu_249_p4 = {{layer15_out_dout[132:114]}};

assign trunc_ln44_8_fu_259_p4 = {{layer15_out_dout[151:133]}};

assign trunc_ln44_9_fu_269_p4 = {{layer15_out_dout[170:152]}};

assign trunc_ln44_fu_195_p1 = layer15_out_dout[18:0];

assign trunc_ln44_s_fu_199_p4 = {{layer15_out_dout[37:19]}};

assign trunc_ln4_fu_303_p4 = {{layer15_out_dout[9:4]}};

assign trunc_ln52_1_fu_1899_p4 = {{layer15_out_dout[180:175]}};

assign trunc_ln52_3_fu_653_p4 = {{layer15_out_dout[47:42]}};

assign trunc_ln52_4_fu_831_p4 = {{layer15_out_dout[66:61]}};

assign trunc_ln52_5_fu_1009_p4 = {{layer15_out_dout[85:80]}};

assign trunc_ln52_6_fu_1187_p4 = {{layer15_out_dout[104:99]}};

assign trunc_ln52_7_fu_1365_p4 = {{layer15_out_dout[123:118]}};

assign trunc_ln52_8_fu_1543_p4 = {{layer15_out_dout[142:137]}};

assign trunc_ln52_9_fu_1721_p4 = {{layer15_out_dout[161:156]}};

assign trunc_ln52_fu_321_p1 = layer15_out_dout[2:0];

assign trunc_ln52_s_fu_475_p4 = {{layer15_out_dout[28:23]}};

assign xor_ln52_10_fu_773_p2 = (empty_63_fu_761_p2 ^ 1'd1);

assign xor_ln52_11_fu_951_p2 = (empty_64_fu_939_p2 ^ 1'd1);

assign xor_ln52_12_fu_1129_p2 = (empty_65_fu_1117_p2 ^ 1'd1);

assign xor_ln52_13_fu_1307_p2 = (empty_66_fu_1295_p2 ^ 1'd1);

assign xor_ln52_14_fu_1485_p2 = (empty_67_fu_1473_p2 ^ 1'd1);

assign xor_ln52_15_fu_1663_p2 = (empty_68_fu_1651_p2 ^ 1'd1);

assign xor_ln52_16_fu_1841_p2 = (empty_69_fu_1829_p2 ^ 1'd1);

assign xor_ln52_17_fu_2019_p2 = (empty_70_fu_2007_p2 ^ 1'd1);

assign xor_ln52_9_fu_595_p2 = (empty_62_fu_583_p2 ^ 1'd1);

assign xor_ln52_fu_417_p2 = (empty_fu_405_p2 ^ 1'd1);

assign zext_ln52_10_fu_715_p1 = and_ln52_14_fu_709_p2;

assign zext_ln52_11_fu_893_p1 = and_ln52_15_fu_887_p2;

assign zext_ln52_12_fu_1071_p1 = and_ln52_16_fu_1065_p2;

assign zext_ln52_13_fu_1249_p1 = and_ln52_17_fu_1243_p2;

assign zext_ln52_14_fu_1427_p1 = and_ln52_18_fu_1421_p2;

assign zext_ln52_15_fu_1605_p1 = and_ln52_19_fu_1599_p2;

assign zext_ln52_16_fu_1783_p1 = and_ln52_20_fu_1777_p2;

assign zext_ln52_17_fu_1961_p1 = and_ln52_21_fu_1955_p2;

assign zext_ln52_9_fu_537_p1 = and_ln52_13_fu_531_p2;

assign zext_ln52_fu_359_p1 = and_ln52_fu_353_p2;

endmodule //myproject_relu_array_ap_fixed_10u_array_ap_ufixed_6_0_4_0_0_10u_relu_config16_s
