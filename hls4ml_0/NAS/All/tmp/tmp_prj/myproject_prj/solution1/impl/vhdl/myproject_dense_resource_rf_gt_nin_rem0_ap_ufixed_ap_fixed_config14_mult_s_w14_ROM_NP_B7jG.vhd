-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_config14_mult_s_w14_ROM_NP_B7jG is 
    generic(
             DataWidth     : integer := 16; 
             AddressWidth     : integer := 7; 
             AddressRange    : integer := 108
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_config14_mult_s_w14_ROM_NP_B7jG is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "0000000100111110", 1 => "1110000011111111", 2 => "1111000100000010", 3 => "0110000000000010", 
    4 => "0011000101000110", 5 => "1001000001111011", 6 => "1101000010000001", 7 => "1111000100111111", 
    8 => "0000000100000000", 9 => "0000111010111011", 10 => "1010000001000000", 11 => "0000000001000011", 
    12 => "0100111111000000", 13 => "0010000010000001", 14 => "1101111110111111", 15 => "0001111101000111", 
    16 => "0000000011000011", 17 => "1101111011000010", 18 => "0001000010000010", 19 => "0010111110000110", 
    20 => "0000000100111111", 21 => "0000000001000000", 22 => "0001111110000000", 23 => "0001000001111111", 
    24 => "0011000010111100", 25 => "1110111101000110", 26 => "0000111101111101", 27 => "0000000011000110", 
    28 => "1100000100000011", 29 => "0001000000111001", 30 => "0000111100111111", 31 => "1001111111000010", 
    32 => "1111000000111001", 33 => "1110111111000101", 34 => "0110000110111111", 35 => "0001000001111010", 
    36 => "0101000001111110", 37 => "0000000001000110", 38 => "1100000000111010", 39 => "1101000010111110", 
    40 => "0011111111111110", 41 => "0000111110000010", 42 => "0001000000111001", 43 => "1101000000111100", 
    44 => "0101111111000011", 45 => "0011000001000010", 46 => "1100111110000010", 47 => "0001000010111101", 
    48 => "1110000000000100", 49 => "0010111110111101", 50 => "0010000000111101", 51 => "1100111110000101", 
    52 => "0010000101000000", 53 => "1101000010111100", 54 => "1100000011000100", 55 => "0001000001000100", 
    56 => "1101000000111010", 57 => "1111111101111110", 58 => "1110000111000001", 59 => "1110111111111110", 
    60 => "1111000101000010", 61 => "0001111101111110", 62 => "0001000010000000", 63 => "1110111011000011", 
    64 => "0010000000111011", 65 => "1111111011111101", 66 => "1111000100000001", 67 => "0011111100000010", 
    68 => "1110111011000010", 69 => "1111111011111100", 70 => "1101000001000011", 71 => "1111111011111101", 
    72 => "1110111111000101", 73 => "0100000110000101", 74 => "1110000000000001", 75 => "1110000010111011", 
    76 => "0001111101111101", 77 => "0001111110111010", 78 => "1111000101111100", 79 => "1101000011111100", 
    80 => "0001000000000100", 81 => "0101000000000000", 82 => "1111111111000101", 83 => "0001111111111100", 
    84 => "0011111110111110", 85 => "0001111011111110", 86 => "0000111101000011", 87 => "0000000100111101", 
    88 => "0000111101000001", 89 => "0000000100000001", 90 => "0000000000111011", 91 => "0000000001000110", 
    92 => "0001111111111110", 93 => "0011000000000000", 94 => "0000000101000000", 95 => "0001000110111011", 
    96 => "1101000000000001", 97 => "0101000001000001", 98 => "0101111101000111", 99 => "1101111111000101", 
    100 => "0110000001111100", 101 => "0001111010000010", 102 => "0000000100111111", 103 => "1101111111000000", 
    104 => "0010000001000100", 105 => "1110111100000100", 106 => "1100111101000000", 107 => "1110000000000001");



attribute syn_rom_style : string;

attribute syn_rom_style of mem0 : signal is "block_rom"; 
attribute ROM_STYLE : string;

attribute ROM_STYLE of mem0 : signal is "block";

begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

