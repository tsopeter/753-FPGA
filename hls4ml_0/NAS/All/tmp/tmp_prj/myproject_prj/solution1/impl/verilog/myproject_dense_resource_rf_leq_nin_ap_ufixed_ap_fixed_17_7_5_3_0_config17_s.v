// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        data_8_val,
        data_9_val,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] data_0_val;
input  [5:0] data_1_val;
input  [5:0] data_2_val;
input  [5:0] data_3_val;
input  [5:0] data_4_val;
input  [5:0] data_5_val;
input  [5:0] data_6_val;
input  [5:0] data_7_val;
input  [5:0] data_8_val;
input  [5:0] data_9_val;
output  [13:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] ap_return;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln46_fu_469_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] w17_address0;
wire  signed [4:0] w17_q0;
reg   [0:0] do_init_reg_153;
reg   [3:0] w_index3_reg_169;
reg   [5:0] data_0_val4_rewind_reg_184;
reg   [5:0] data_1_val5_rewind_reg_198;
reg   [5:0] data_2_val6_rewind_reg_212;
reg   [5:0] data_3_val7_rewind_reg_226;
reg   [5:0] data_4_val8_rewind_reg_240;
reg   [5:0] data_5_val9_rewind_reg_254;
reg   [5:0] data_6_val10_rewind_reg_268;
reg   [5:0] data_7_val11_rewind_reg_282;
reg   [5:0] data_8_val12_rewind_reg_296;
reg   [5:0] data_9_val13_rewind_reg_310;
reg  signed [13:0] empty_reg_324;
wire   [3:0] w_index_fu_463_p2;
reg   [3:0] w_index_reg_598;
reg   [0:0] icmp_ln46_reg_603;
wire  signed [13:0] grp_fu_534_p3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_do_init_phi_fu_157_p6;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_w_index3_phi_fu_173_p6;
reg   [5:0] ap_phi_mux_data_0_val4_phi_phi_fu_342_p4;
reg   [5:0] ap_phi_mux_data_1_val5_phi_phi_fu_354_p4;
reg   [5:0] ap_phi_mux_data_2_val6_phi_phi_fu_366_p4;
reg   [5:0] ap_phi_mux_data_3_val7_phi_phi_fu_378_p4;
reg   [5:0] ap_phi_mux_data_4_val8_phi_phi_fu_390_p4;
reg   [5:0] ap_phi_mux_data_5_val9_phi_phi_fu_402_p4;
reg   [5:0] ap_phi_mux_data_6_val10_phi_phi_fu_414_p4;
reg   [5:0] ap_phi_mux_data_7_val11_phi_phi_fu_426_p4;
reg   [5:0] ap_phi_mux_data_8_val12_phi_phi_fu_438_p4;
reg   [5:0] ap_phi_mux_data_9_val13_phi_phi_fu_450_p4;
wire   [5:0] ap_phi_reg_pp0_iter0_data_0_val4_phi_reg_338;
reg   [5:0] ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_338;
wire   [5:0] ap_phi_reg_pp0_iter0_data_1_val5_phi_reg_350;
reg   [5:0] ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_350;
wire   [5:0] ap_phi_reg_pp0_iter0_data_2_val6_phi_reg_362;
reg   [5:0] ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_362;
wire   [5:0] ap_phi_reg_pp0_iter0_data_3_val7_phi_reg_374;
reg   [5:0] ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_374;
wire   [5:0] ap_phi_reg_pp0_iter0_data_4_val8_phi_reg_386;
reg   [5:0] ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_386;
wire   [5:0] ap_phi_reg_pp0_iter0_data_5_val9_phi_reg_398;
reg   [5:0] ap_phi_reg_pp0_iter1_data_5_val9_phi_reg_398;
wire   [5:0] ap_phi_reg_pp0_iter0_data_6_val10_phi_reg_410;
reg   [5:0] ap_phi_reg_pp0_iter1_data_6_val10_phi_reg_410;
wire   [5:0] ap_phi_reg_pp0_iter0_data_7_val11_phi_reg_422;
reg   [5:0] ap_phi_reg_pp0_iter1_data_7_val11_phi_reg_422;
wire   [5:0] ap_phi_reg_pp0_iter0_data_8_val12_phi_reg_434;
reg   [5:0] ap_phi_reg_pp0_iter1_data_8_val12_phi_reg_434;
wire   [5:0] ap_phi_reg_pp0_iter0_data_9_val13_phi_reg_446;
reg   [5:0] ap_phi_reg_pp0_iter1_data_9_val13_phi_reg_446;
wire   [63:0] zext_ln46_fu_458_p1;
reg    w17_ce0_local;
wire   [5:0] a_fu_475_p21;
wire   [5:0] a_fu_475_p23;
wire   [5:0] grp_fu_534_p0;
reg   [13:0] ap_return_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [10:0] grp_fu_534_p00;
reg    ap_condition_150;
reg    ap_condition_37;
wire   [3:0] a_fu_475_p1;
wire   [3:0] a_fu_475_p3;
wire   [3:0] a_fu_475_p5;
wire   [3:0] a_fu_475_p7;
wire   [3:0] a_fu_475_p9;
wire   [3:0] a_fu_475_p11;
wire   [3:0] a_fu_475_p13;
wire   [3:0] a_fu_475_p15;
wire  signed [3:0] a_fu_475_p17;
wire  signed [3:0] a_fu_475_p19;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 14'd0;
end

myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s_w17_ROM_NPThq #(
    .DataWidth( 5 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
w17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w17_address0),
    .ce0(w17_ce0_local),
    .q0(w17_q0)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_21_4_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 6 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 6 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 6 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 6 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 6 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 6 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 6 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 6 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 6 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 6 ),
    .def_WIDTH( 6 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 6 ))
sparsemux_21_4_6_1_1_U657(
    .din0(ap_phi_mux_data_0_val4_phi_phi_fu_342_p4),
    .din1(ap_phi_mux_data_1_val5_phi_phi_fu_354_p4),
    .din2(ap_phi_mux_data_2_val6_phi_phi_fu_366_p4),
    .din3(ap_phi_mux_data_3_val7_phi_phi_fu_378_p4),
    .din4(ap_phi_mux_data_4_val8_phi_phi_fu_390_p4),
    .din5(ap_phi_mux_data_5_val9_phi_phi_fu_402_p4),
    .din6(ap_phi_mux_data_6_val10_phi_phi_fu_414_p4),
    .din7(ap_phi_mux_data_7_val11_phi_phi_fu_426_p4),
    .din8(ap_phi_mux_data_8_val12_phi_phi_fu_438_p4),
    .din9(ap_phi_mux_data_9_val13_phi_phi_fu_450_p4),
    .def(a_fu_475_p21),
    .sel(w_index3_reg_169),
    .dout(a_fu_475_p23)
);

myproject_mac_muladd_6ns_5s_14s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mac_muladd_6ns_5s_14s_14_1_1_U658(
    .din0(grp_fu_534_p0),
    .din1(w17_q0),
    .din2(empty_reg_324),
    .dout(grp_fu_534_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 14'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_603 == 1'd1))) begin
            ap_return_preg <= grp_fu_534_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_157_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_338 <= data_0_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_338 <= ap_phi_reg_pp0_iter0_data_0_val4_phi_reg_338;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_157_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_350 <= data_1_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_350 <= ap_phi_reg_pp0_iter0_data_1_val5_phi_reg_350;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_157_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_362 <= data_2_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_362 <= ap_phi_reg_pp0_iter0_data_2_val6_phi_reg_362;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_157_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_374 <= data_3_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_374 <= ap_phi_reg_pp0_iter0_data_3_val7_phi_reg_374;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_157_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_386 <= data_4_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_386 <= ap_phi_reg_pp0_iter0_data_4_val8_phi_reg_386;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_157_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_5_val9_phi_reg_398 <= data_5_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_5_val9_phi_reg_398 <= ap_phi_reg_pp0_iter0_data_5_val9_phi_reg_398;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_157_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_6_val10_phi_reg_410 <= data_6_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_6_val10_phi_reg_410 <= ap_phi_reg_pp0_iter0_data_6_val10_phi_reg_410;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_157_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_7_val11_phi_reg_422 <= data_7_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_7_val11_phi_reg_422 <= ap_phi_reg_pp0_iter0_data_7_val11_phi_reg_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_157_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_8_val12_phi_reg_434 <= data_8_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_8_val12_phi_reg_434 <= ap_phi_reg_pp0_iter0_data_8_val12_phi_reg_434;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_157_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_9_val13_phi_reg_446 <= data_9_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_9_val13_phi_reg_446 <= ap_phi_reg_pp0_iter0_data_9_val13_phi_reg_446;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_603 == 1'd0))) begin
        do_init_reg_153 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_603 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_153 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_603 == 1'd0))) begin
        empty_reg_324 <= grp_fu_534_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_603 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        empty_reg_324 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_603 == 1'd0))) begin
        w_index3_reg_169 <= w_index_reg_598;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_603 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index3_reg_169 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_603 == 1'd0))) begin
        data_0_val4_rewind_reg_184 <= ap_phi_mux_data_0_val4_phi_phi_fu_342_p4;
        data_1_val5_rewind_reg_198 <= ap_phi_mux_data_1_val5_phi_phi_fu_354_p4;
        data_2_val6_rewind_reg_212 <= ap_phi_mux_data_2_val6_phi_phi_fu_366_p4;
        data_3_val7_rewind_reg_226 <= ap_phi_mux_data_3_val7_phi_phi_fu_378_p4;
        data_4_val8_rewind_reg_240 <= ap_phi_mux_data_4_val8_phi_phi_fu_390_p4;
        data_5_val9_rewind_reg_254 <= ap_phi_mux_data_5_val9_phi_phi_fu_402_p4;
        data_6_val10_rewind_reg_268 <= ap_phi_mux_data_6_val10_phi_phi_fu_414_p4;
        data_7_val11_rewind_reg_282 <= ap_phi_mux_data_7_val11_phi_phi_fu_426_p4;
        data_8_val12_rewind_reg_296 <= ap_phi_mux_data_8_val12_phi_phi_fu_438_p4;
        data_9_val13_rewind_reg_310 <= ap_phi_mux_data_9_val13_phi_phi_fu_450_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln46_reg_603 <= icmp_ln46_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_598 <= w_index_fu_463_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_603 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((do_init_reg_153 == 1'd0)) begin
        ap_phi_mux_data_0_val4_phi_phi_fu_342_p4 = data_0_val4_rewind_reg_184;
    end else begin
        ap_phi_mux_data_0_val4_phi_phi_fu_342_p4 = ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_338;
    end
end

always @ (*) begin
    if ((do_init_reg_153 == 1'd0)) begin
        ap_phi_mux_data_1_val5_phi_phi_fu_354_p4 = data_1_val5_rewind_reg_198;
    end else begin
        ap_phi_mux_data_1_val5_phi_phi_fu_354_p4 = ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_350;
    end
end

always @ (*) begin
    if ((do_init_reg_153 == 1'd0)) begin
        ap_phi_mux_data_2_val6_phi_phi_fu_366_p4 = data_2_val6_rewind_reg_212;
    end else begin
        ap_phi_mux_data_2_val6_phi_phi_fu_366_p4 = ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_362;
    end
end

always @ (*) begin
    if ((do_init_reg_153 == 1'd0)) begin
        ap_phi_mux_data_3_val7_phi_phi_fu_378_p4 = data_3_val7_rewind_reg_226;
    end else begin
        ap_phi_mux_data_3_val7_phi_phi_fu_378_p4 = ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_374;
    end
end

always @ (*) begin
    if ((do_init_reg_153 == 1'd0)) begin
        ap_phi_mux_data_4_val8_phi_phi_fu_390_p4 = data_4_val8_rewind_reg_240;
    end else begin
        ap_phi_mux_data_4_val8_phi_phi_fu_390_p4 = ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_386;
    end
end

always @ (*) begin
    if ((do_init_reg_153 == 1'd0)) begin
        ap_phi_mux_data_5_val9_phi_phi_fu_402_p4 = data_5_val9_rewind_reg_254;
    end else begin
        ap_phi_mux_data_5_val9_phi_phi_fu_402_p4 = ap_phi_reg_pp0_iter1_data_5_val9_phi_reg_398;
    end
end

always @ (*) begin
    if ((do_init_reg_153 == 1'd0)) begin
        ap_phi_mux_data_6_val10_phi_phi_fu_414_p4 = data_6_val10_rewind_reg_268;
    end else begin
        ap_phi_mux_data_6_val10_phi_phi_fu_414_p4 = ap_phi_reg_pp0_iter1_data_6_val10_phi_reg_410;
    end
end

always @ (*) begin
    if ((do_init_reg_153 == 1'd0)) begin
        ap_phi_mux_data_7_val11_phi_phi_fu_426_p4 = data_7_val11_rewind_reg_282;
    end else begin
        ap_phi_mux_data_7_val11_phi_phi_fu_426_p4 = ap_phi_reg_pp0_iter1_data_7_val11_phi_reg_422;
    end
end

always @ (*) begin
    if ((do_init_reg_153 == 1'd0)) begin
        ap_phi_mux_data_8_val12_phi_phi_fu_438_p4 = data_8_val12_rewind_reg_296;
    end else begin
        ap_phi_mux_data_8_val12_phi_phi_fu_438_p4 = ap_phi_reg_pp0_iter1_data_8_val12_phi_reg_434;
    end
end

always @ (*) begin
    if ((do_init_reg_153 == 1'd0)) begin
        ap_phi_mux_data_9_val13_phi_phi_fu_450_p4 = data_9_val13_rewind_reg_310;
    end else begin
        ap_phi_mux_data_9_val13_phi_phi_fu_450_p4 = ap_phi_reg_pp0_iter1_data_9_val13_phi_reg_446;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_150)) begin
        if ((icmp_ln46_reg_603 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_157_p6 = 1'd1;
        end else if ((icmp_ln46_reg_603 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_157_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_157_p6 = do_init_reg_153;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_157_p6 = do_init_reg_153;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_150)) begin
        if ((icmp_ln46_reg_603 == 1'd1)) begin
            ap_phi_mux_w_index3_phi_fu_173_p6 = 4'd0;
        end else if ((icmp_ln46_reg_603 == 1'd0)) begin
            ap_phi_mux_w_index3_phi_fu_173_p6 = w_index_reg_598;
        end else begin
            ap_phi_mux_w_index3_phi_fu_173_p6 = w_index3_reg_169;
        end
    end else begin
        ap_phi_mux_w_index3_phi_fu_173_p6 = w_index3_reg_169;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln46_fu_469_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_603 == 1'd1))) begin
        ap_return = grp_fu_534_p3;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w17_ce0_local = 1'b1;
    end else begin
        w17_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_475_p21 = 'bx;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_150 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_37 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_data_0_val4_phi_reg_338 = 'bx;

assign ap_phi_reg_pp0_iter0_data_1_val5_phi_reg_350 = 'bx;

assign ap_phi_reg_pp0_iter0_data_2_val6_phi_reg_362 = 'bx;

assign ap_phi_reg_pp0_iter0_data_3_val7_phi_reg_374 = 'bx;

assign ap_phi_reg_pp0_iter0_data_4_val8_phi_reg_386 = 'bx;

assign ap_phi_reg_pp0_iter0_data_5_val9_phi_reg_398 = 'bx;

assign ap_phi_reg_pp0_iter0_data_6_val10_phi_reg_410 = 'bx;

assign ap_phi_reg_pp0_iter0_data_7_val11_phi_reg_422 = 'bx;

assign ap_phi_reg_pp0_iter0_data_8_val12_phi_reg_434 = 'bx;

assign ap_phi_reg_pp0_iter0_data_9_val13_phi_reg_446 = 'bx;

assign grp_fu_534_p0 = grp_fu_534_p00;

assign grp_fu_534_p00 = a_fu_475_p23;

assign icmp_ln46_fu_469_p2 = ((ap_phi_mux_w_index3_phi_fu_173_p6 == 4'd9) ? 1'b1 : 1'b0);

assign w17_address0 = zext_ln46_fu_458_p1;

assign w_index_fu_463_p2 = (ap_phi_mux_w_index3_phi_fu_173_p6 + 4'd1);

assign zext_ln46_fu_458_p1 = ap_phi_mux_w_index3_phi_fu_173_p6;

endmodule //myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s
