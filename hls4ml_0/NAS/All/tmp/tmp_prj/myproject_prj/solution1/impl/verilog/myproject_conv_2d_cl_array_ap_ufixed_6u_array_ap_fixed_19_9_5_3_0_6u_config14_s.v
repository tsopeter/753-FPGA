// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_conv_2d_cl_array_ap_ufixed_6u_array_ap_fixed_19_9_5_3_0_6u_config14_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer13_out_dout,
        layer13_out_empty_n,
        layer13_out_read,
        layer13_out_num_data_valid,
        layer13_out_fifo_cap,
        layer14_out_din,
        layer14_out_full_n,
        layer14_out_write,
        layer14_out_num_data_valid,
        layer14_out_fifo_cap
);

parameter    ap_ST_fsm_pp0_stage0 = 18'd1;
parameter    ap_ST_fsm_pp0_stage1 = 18'd2;
parameter    ap_ST_fsm_pp0_stage2 = 18'd4;
parameter    ap_ST_fsm_pp0_stage3 = 18'd8;
parameter    ap_ST_fsm_pp0_stage4 = 18'd16;
parameter    ap_ST_fsm_pp0_stage5 = 18'd32;
parameter    ap_ST_fsm_pp0_stage6 = 18'd64;
parameter    ap_ST_fsm_pp0_stage7 = 18'd128;
parameter    ap_ST_fsm_pp0_stage8 = 18'd256;
parameter    ap_ST_fsm_pp0_stage9 = 18'd512;
parameter    ap_ST_fsm_pp0_stage10 = 18'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 18'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 18'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 18'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 18'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 18'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 18'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [35:0] layer13_out_dout;
input   layer13_out_empty_n;
output   layer13_out_read;
input  [4:0] layer13_out_num_data_valid;
input  [4:0] layer13_out_fifo_cap;
output  [113:0] layer14_out_din;
input   layer14_out_full_n;
output   layer14_out_write;
input  [1:0] layer14_out_num_data_valid;
input  [1:0] layer14_out_fifo_cap;

reg ap_idle;
reg start_write;
reg layer13_out_read;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    internal_ap_ready;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [0:0] icmp_ln24_reg_452;
reg    ap_condition_exit_pp0_iter0_stage17;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    layer13_out_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_grp1;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_blk_n;
reg    layer14_out_blk_n;
wire   [0:0] icmp_ln24_fu_434_p2;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_pp0_stage1_subdone;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_start;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_done;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_idle;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_ready;
reg    grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_ce;
wire   [5:0] grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read;
wire   [5:0] grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read1;
wire   [5:0] grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read2;
wire   [5:0] grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read3;
wire   [5:0] grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read4;
wire   [5:0] grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read5;
wire   [113:0] grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_din;
wire    grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_write;
reg    ap_block_pp0_stage1_11001_ignoreCallOp36;
reg    ap_done_reg;
reg    ap_block_pp0_stage2_11001_ignoreCallOp41;
wire    ap_block_pp0_stage3_11001_ignoreCallOp42;
wire    ap_block_pp0_stage4_11001_ignoreCallOp43;
wire    ap_block_pp0_stage5_11001_ignoreCallOp44;
wire    ap_block_pp0_stage6_11001_ignoreCallOp45;
wire    ap_block_pp0_stage7_11001_ignoreCallOp46;
wire    ap_block_pp0_stage8_11001_ignoreCallOp47;
wire    ap_block_pp0_stage9_11001_ignoreCallOp48;
wire    ap_block_pp0_stage10_11001_ignoreCallOp49;
wire    ap_block_pp0_stage11_11001_ignoreCallOp50;
wire    ap_block_pp0_stage12_11001_ignoreCallOp51;
wire    ap_block_pp0_stage13_11001_ignoreCallOp52;
wire    ap_block_pp0_stage14_11001_ignoreCallOp53;
wire    ap_block_pp0_stage15_11001_ignoreCallOp54;
wire    ap_block_pp0_stage16_11001_ignoreCallOp55;
wire    ap_block_pp0_stage17_11001_ignoreCallOp56;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call11;
reg    ap_block_pp0_stage0_11001_ignoreCallOp57;
reg    ap_block_pp0_stage1_11001_ignoreCallOp36_grp1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
reg    grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_start_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage1_ignoreCallOp36_grp1;
wire    ap_block_pp0_stage1_ignoreCallOp61_grp1;
wire    ap_block_pp0_stage4_ignoreCallOp43;
wire    ap_block_pp0_stage2_ignoreCallOp41;
wire    ap_block_pp0_stage5_ignoreCallOp44;
wire    ap_block_pp0_stage3_ignoreCallOp42;
wire    ap_block_pp0_stage9_ignoreCallOp48;
wire    ap_block_pp0_stage7_ignoreCallOp46;
wire    ap_block_pp0_stage8_ignoreCallOp47;
wire    ap_block_pp0_stage10_ignoreCallOp49;
wire    ap_block_pp0_stage6_ignoreCallOp45;
reg   [3:0] indvar_flatten2_fu_198;
wire   [3:0] add_ln24_fu_428_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg    ap_block_pp0_stage1_11001_grp1;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
wire    ap_block_pp0_stage17_11001;
reg    ap_condition_exit_pp0_iter1_stage1;
reg    ap_idle_pp0_0to0;
reg   [17:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_start_reg = 1'b0;
#0 indvar_flatten2_fu_198 = 4'd0;
end

myproject_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_start),
    .ap_done(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_done),
    .ap_idle(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_idle),
    .ap_ready(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_ready),
    .ap_ce(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_ce),
    .p_read(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read),
    .p_read1(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read1),
    .p_read2(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read2),
    .p_read3(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read3),
    .p_read4(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read4),
    .p_read5(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read5),
    .layer14_out_din(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_din),
    .layer14_out_full_n(layer14_out_full_n),
    .layer14_out_write(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_write),
    .layer14_out_num_data_valid(2'd0),
    .layer14_out_fifo_cap(2'd0),
    .layer14_out_blk_n(grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_blk_n)
);

myproject_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage17),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_start_reg <= 1'b1;
        end else if ((grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_ready == 1'b1)) begin
            grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1)))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten2_fu_198 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten2_fu_198 <= add_ln24_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln24_reg_452 <= icmp_ln24_fu_434_p2;
    end
end

always @ (*) begin
    if (((icmp_ln24_reg_452 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        ap_condition_exit_pp0_iter0_stage17 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage17 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln24_reg_452 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp57) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage17_11001_ignoreCallOp56) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001_ignoreCallOp55) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp54) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001_ignoreCallOp53) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001_ignoreCallOp52) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001_ignoreCallOp51) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp50) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp49) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001_ignoreCallOp48) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001_ignoreCallOp47) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp46) 
    & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp45) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp44) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp43) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp42) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp41) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp36_grp1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_ce = 1'b1;
    end else begin
        grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_grp1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer13_out_blk_n = layer13_out_empty_n;
    end else begin
        layer13_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer13_out_read = 1'b1;
    end else begin
        layer13_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer14_out_blk_n = grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_blk_n;
    end else begin
        layer14_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln24_fu_428_p2 = (indvar_flatten2_fu_198 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp57 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call11));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001_ignoreCallOp49 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_ignoreCallOp49 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001_ignoreCallOp50 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001_ignoreCallOp51 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001_ignoreCallOp52 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001_ignoreCallOp53 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001_ignoreCallOp54 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001_ignoreCallOp55 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001_ignoreCallOp56 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((layer13_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_blk_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp1 = (((layer13_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_blk_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp36 = ((layer13_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp36_grp1 = ((layer13_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage1_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_ignoreCallOp36_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_ignoreCallOp61_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((layer13_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_blk_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_ignoreCallOp41 = (ap_done_reg == 1'b1);
end

assign ap_block_pp0_stage2_ignoreCallOp41 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (ap_done_reg == 1'b1);
end

assign ap_block_pp0_stage3_11001_ignoreCallOp42 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_ignoreCallOp42 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp43 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_ignoreCallOp43 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp44 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_ignoreCallOp44 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp45 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_ignoreCallOp45 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp46 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_ignoreCallOp46 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001_ignoreCallOp47 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_ignoreCallOp47 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001_ignoreCallOp48 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_ignoreCallOp48 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call11 = (ap_done_reg == 1'b1);
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage17;

assign ap_ready = internal_ap_ready;

assign grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_start = grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_ap_start_reg;

assign grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read = layer13_out_dout[5:0];

assign grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read1 = {{layer13_out_dout[11:6]}};

assign grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read2 = {{layer13_out_dout[17:12]}};

assign grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read3 = {{layer13_out_dout[23:18]}};

assign grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read4 = {{layer13_out_dout[29:24]}};

assign grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_p_read5 = {{layer13_out_dout[35:30]}};

assign icmp_ln24_fu_434_p2 = ((indvar_flatten2_fu_198 == 4'd8) ? 1'b1 : 1'b0);

assign layer14_out_din = grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_din;

assign layer14_out_write = grp_compute_output_buffer_2d_array_array_ap_fixed_19_9_5_3_0_6u_config14_s_fu_208_layer14_out_write;

assign start_out = real_start;

endmodule //myproject_conv_2d_cl_array_ap_ufixed_6u_array_ap_fixed_19_9_5_3_0_6u_config14_s
