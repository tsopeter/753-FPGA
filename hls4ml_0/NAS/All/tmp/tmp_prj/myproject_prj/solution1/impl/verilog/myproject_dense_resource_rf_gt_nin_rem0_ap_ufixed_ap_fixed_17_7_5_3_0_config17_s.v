// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        data_8_val,
        data_9_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] data_0_val;
input  [5:0] data_1_val;
input  [5:0] data_2_val;
input  [5:0] data_3_val;
input  [5:0] data_4_val;
input  [5:0] data_5_val;
input  [5:0] data_6_val;
input  [5:0] data_7_val;
input  [5:0] data_8_val;
input  [5:0] data_9_val;
output  [16:0] ap_return_0;
output  [16:0] ap_return_1;
output  [16:0] ap_return_2;
output  [16:0] ap_return_3;
output  [16:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[16:0] ap_return_0;
reg[16:0] ap_return_1;
reg[16:0] ap_return_2;
reg[16:0] ap_return_3;
reg[16:0] ap_return_4;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln135_fu_580_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] outidx_96_address0;
wire   [2:0] outidx_96_q0;
wire   [5:0] w17_address0;
wire  signed [4:0] w17_q0;
reg   [0:0] do_init_reg_194;
reg   [5:0] w_index19_reg_210;
reg   [5:0] data_0_val23_rewind_reg_224;
reg   [5:0] data_1_val24_rewind_reg_238;
reg   [5:0] data_2_val25_rewind_reg_252;
reg   [5:0] data_3_val26_rewind_reg_266;
reg   [5:0] data_4_val27_rewind_reg_280;
reg   [5:0] data_5_val28_rewind_reg_294;
reg   [5:0] data_6_val29_rewind_reg_308;
reg   [5:0] data_7_val30_rewind_reg_322;
reg   [5:0] data_8_val31_rewind_reg_336;
reg   [5:0] data_9_val32_rewind_reg_350;
reg   [31:0] in_index20_reg_364;
reg   [16:0] acc17_reg_378;
reg   [16:0] acc_715_reg_392;
reg   [16:0] acc_813_reg_406;
reg   [16:0] acc_911_reg_420;
reg   [16:0] acc_1010_reg_434;
wire   [5:0] w_index_fu_574_p2;
reg   [5:0] w_index_reg_918;
reg   [0:0] icmp_ln135_reg_923;
wire   [16:0] acc_9_fu_754_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [16:0] acc_8_fu_762_p3;
wire   [16:0] acc_7_fu_770_p3;
wire   [16:0] acc_6_fu_778_p3;
wire   [16:0] acc_fu_786_p3;
wire   [31:0] in_index_fu_806_p3;
wire    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_do_init_phi_fu_198_p6;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_w_index19_phi_fu_214_p6;
reg   [5:0] ap_phi_mux_data_0_val23_phi_phi_fu_452_p4;
reg   [5:0] ap_phi_mux_data_1_val24_phi_phi_fu_464_p4;
reg   [5:0] ap_phi_mux_data_2_val25_phi_phi_fu_476_p4;
reg   [5:0] ap_phi_mux_data_3_val26_phi_phi_fu_488_p4;
reg   [5:0] ap_phi_mux_data_4_val27_phi_phi_fu_500_p4;
reg   [5:0] ap_phi_mux_data_5_val28_phi_phi_fu_512_p4;
reg   [5:0] ap_phi_mux_data_6_val29_phi_phi_fu_524_p4;
reg   [5:0] ap_phi_mux_data_7_val30_phi_phi_fu_536_p4;
reg   [5:0] ap_phi_mux_data_8_val31_phi_phi_fu_548_p4;
reg   [5:0] ap_phi_mux_data_9_val32_phi_phi_fu_560_p4;
wire   [5:0] ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_448;
reg   [5:0] ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_448;
wire   [5:0] ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_460;
reg   [5:0] ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_460;
wire   [5:0] ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_472;
reg   [5:0] ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_472;
wire   [5:0] ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_484;
reg   [5:0] ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_484;
wire   [5:0] ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_496;
reg   [5:0] ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_496;
wire   [5:0] ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_508;
reg   [5:0] ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_508;
wire   [5:0] ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_520;
reg   [5:0] ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_520;
wire   [5:0] ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_532;
reg   [5:0] ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_532;
wire   [5:0] ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_544;
reg   [5:0] ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_544;
wire   [5:0] ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_556;
reg   [5:0] ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_556;
wire   [63:0] zext_ln135_fu_568_p1;
reg    outidx_96_ce0_local;
reg    w17_ce0_local;
wire   [5:0] a_fu_590_p21;
wire   [3:0] a_fu_590_p22;
wire   [5:0] a_fu_590_p23;
wire   [16:0] tmp_fu_646_p11;
wire  signed [16:0] tmp_fu_646_p13;
wire  signed [17:0] grp_fu_848_p3;
wire   [0:0] icmp_ln144_fu_678_p2;
wire   [0:0] icmp_ln144_4_fu_702_p2;
wire   [0:0] icmp_ln144_2_fu_690_p2;
wire   [0:0] icmp_ln144_3_fu_696_p2;
wire   [0:0] or_ln144_1_fu_713_p2;
wire   [0:0] icmp_ln144_1_fu_684_p2;
wire   [0:0] or_ln144_2_fu_719_p2;
wire   [0:0] or_ln144_fu_707_p2;
wire   [0:0] or_ln144_3_fu_725_p2;
wire   [0:0] or_ln144_4_fu_742_p2;
wire   [0:0] or_ln144_5_fu_748_p2;
wire   [16:0] acc_10_fu_731_p3;
wire   [16:0] acc_11_fu_739_p1;
wire   [31:0] in_index_2_fu_794_p2;
wire   [0:0] icmp_ln154_fu_800_p2;
wire   [5:0] grp_fu_848_p0;
reg   [16:0] ap_return_0_preg;
reg   [16:0] ap_return_1_preg;
reg   [16:0] ap_return_2_preg;
reg   [16:0] ap_return_3_preg;
reg   [16:0] ap_return_4_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [10:0] grp_fu_848_p00;
reg    ap_condition_184;
reg    ap_condition_37;
wire   [3:0] a_fu_590_p1;
wire   [3:0] a_fu_590_p3;
wire   [3:0] a_fu_590_p5;
wire   [3:0] a_fu_590_p7;
wire   [3:0] a_fu_590_p9;
wire   [3:0] a_fu_590_p11;
wire   [3:0] a_fu_590_p13;
wire   [3:0] a_fu_590_p15;
wire  signed [3:0] a_fu_590_p17;
wire  signed [3:0] a_fu_590_p19;
wire   [2:0] tmp_fu_646_p1;
wire   [2:0] tmp_fu_646_p3;
wire   [2:0] tmp_fu_646_p5;
wire   [2:0] tmp_fu_646_p7;
wire  signed [2:0] tmp_fu_646_p9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_0_preg = 17'd0;
#0 ap_return_1_preg = 17'd0;
#0 ap_return_2_preg = 17'd0;
#0 ap_return_3_preg = 17'd0;
#0 ap_return_4_preg = 17'd0;
end

myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s_outidxThq #(
    .DataWidth( 3 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
outidx_96_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(outidx_96_address0),
    .ce0(outidx_96_ce0_local),
    .q0(outidx_96_q0)
);

myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s_w17_ROUhA #(
    .DataWidth( 5 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
w17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w17_address0),
    .ce0(w17_ce0_local),
    .q0(w17_q0)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_21_4_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 6 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 6 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 6 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 6 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 6 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 6 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 6 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 6 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 6 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 6 ),
    .def_WIDTH( 6 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 6 ))
sparsemux_21_4_6_1_1_U656(
    .din0(ap_phi_mux_data_0_val23_phi_phi_fu_452_p4),
    .din1(ap_phi_mux_data_1_val24_phi_phi_fu_464_p4),
    .din2(ap_phi_mux_data_2_val25_phi_phi_fu_476_p4),
    .din3(ap_phi_mux_data_3_val26_phi_phi_fu_488_p4),
    .din4(ap_phi_mux_data_4_val27_phi_phi_fu_500_p4),
    .din5(ap_phi_mux_data_5_val28_phi_phi_fu_512_p4),
    .din6(ap_phi_mux_data_6_val29_phi_phi_fu_524_p4),
    .din7(ap_phi_mux_data_7_val30_phi_phi_fu_536_p4),
    .din8(ap_phi_mux_data_8_val31_phi_phi_fu_548_p4),
    .din9(ap_phi_mux_data_9_val32_phi_phi_fu_560_p4),
    .def(a_fu_590_p21),
    .sel(a_fu_590_p22),
    .dout(a_fu_590_p23)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_11_3_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 17 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 17 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 17 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 17 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 17 ),
    .def_WIDTH( 17 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 17 ))
sparsemux_11_3_17_1_1_U657(
    .din0(acc17_reg_378),
    .din1(acc_715_reg_392),
    .din2(acc_813_reg_406),
    .din3(acc_911_reg_420),
    .din4(acc_1010_reg_434),
    .def(tmp_fu_646_p11),
    .sel(outidx_96_q0),
    .dout(tmp_fu_646_p13)
);

myproject_mac_muladd_6ns_5s_17s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
mac_muladd_6ns_5s_17s_18_1_1_U658(
    .din0(grp_fu_848_p0),
    .din1(w17_q0),
    .din2(tmp_fu_646_p13),
    .dout(grp_fu_848_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1))) begin
            ap_return_0_preg <= acc_fu_786_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1))) begin
            ap_return_1_preg <= acc_6_fu_778_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1))) begin
            ap_return_2_preg <= acc_7_fu_770_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1))) begin
            ap_return_3_preg <= acc_8_fu_762_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1))) begin
            ap_return_4_preg <= acc_9_fu_754_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd0))) begin
        acc17_reg_378 <= acc_fu_786_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc17_reg_378 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd0))) begin
        acc_1010_reg_434 <= acc_9_fu_754_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_1010_reg_434 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd0))) begin
        acc_715_reg_392 <= acc_6_fu_778_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_715_reg_392 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd0))) begin
        acc_813_reg_406 <= acc_7_fu_770_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_813_reg_406 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd0))) begin
        acc_911_reg_420 <= acc_8_fu_762_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_911_reg_420 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_198_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_448 <= data_0_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_448 <= ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_448;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_198_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_460 <= data_1_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_460 <= ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_460;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_198_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_472 <= data_2_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_472 <= ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_472;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_198_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_484 <= data_3_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_484 <= ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_484;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_198_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_496 <= data_4_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_496 <= ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_496;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_198_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_508 <= data_5_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_508 <= ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_508;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_198_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_520 <= data_6_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_520 <= ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_520;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_198_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_532 <= data_7_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_532 <= ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_532;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_198_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_544 <= data_8_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_544 <= ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_544;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_198_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_556 <= data_9_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_556 <= ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_556;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd0))) begin
        do_init_reg_194 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_194 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd0))) begin
        in_index20_reg_364 <= in_index_fu_806_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_index20_reg_364 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd0))) begin
        w_index19_reg_210 <= w_index_reg_918;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index19_reg_210 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd0))) begin
        data_0_val23_rewind_reg_224 <= ap_phi_mux_data_0_val23_phi_phi_fu_452_p4;
        data_1_val24_rewind_reg_238 <= ap_phi_mux_data_1_val24_phi_phi_fu_464_p4;
        data_2_val25_rewind_reg_252 <= ap_phi_mux_data_2_val25_phi_phi_fu_476_p4;
        data_3_val26_rewind_reg_266 <= ap_phi_mux_data_3_val26_phi_phi_fu_488_p4;
        data_4_val27_rewind_reg_280 <= ap_phi_mux_data_4_val27_phi_phi_fu_500_p4;
        data_5_val28_rewind_reg_294 <= ap_phi_mux_data_5_val28_phi_phi_fu_512_p4;
        data_6_val29_rewind_reg_308 <= ap_phi_mux_data_6_val29_phi_phi_fu_524_p4;
        data_7_val30_rewind_reg_322 <= ap_phi_mux_data_7_val30_phi_phi_fu_536_p4;
        data_8_val31_rewind_reg_336 <= ap_phi_mux_data_8_val31_phi_phi_fu_548_p4;
        data_9_val32_rewind_reg_350 <= ap_phi_mux_data_9_val32_phi_phi_fu_560_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln135_reg_923 <= icmp_ln135_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_918 <= w_index_fu_574_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((do_init_reg_194 == 1'd0)) begin
        ap_phi_mux_data_0_val23_phi_phi_fu_452_p4 = data_0_val23_rewind_reg_224;
    end else begin
        ap_phi_mux_data_0_val23_phi_phi_fu_452_p4 = ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_448;
    end
end

always @ (*) begin
    if ((do_init_reg_194 == 1'd0)) begin
        ap_phi_mux_data_1_val24_phi_phi_fu_464_p4 = data_1_val24_rewind_reg_238;
    end else begin
        ap_phi_mux_data_1_val24_phi_phi_fu_464_p4 = ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_460;
    end
end

always @ (*) begin
    if ((do_init_reg_194 == 1'd0)) begin
        ap_phi_mux_data_2_val25_phi_phi_fu_476_p4 = data_2_val25_rewind_reg_252;
    end else begin
        ap_phi_mux_data_2_val25_phi_phi_fu_476_p4 = ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_472;
    end
end

always @ (*) begin
    if ((do_init_reg_194 == 1'd0)) begin
        ap_phi_mux_data_3_val26_phi_phi_fu_488_p4 = data_3_val26_rewind_reg_266;
    end else begin
        ap_phi_mux_data_3_val26_phi_phi_fu_488_p4 = ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_484;
    end
end

always @ (*) begin
    if ((do_init_reg_194 == 1'd0)) begin
        ap_phi_mux_data_4_val27_phi_phi_fu_500_p4 = data_4_val27_rewind_reg_280;
    end else begin
        ap_phi_mux_data_4_val27_phi_phi_fu_500_p4 = ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_496;
    end
end

always @ (*) begin
    if ((do_init_reg_194 == 1'd0)) begin
        ap_phi_mux_data_5_val28_phi_phi_fu_512_p4 = data_5_val28_rewind_reg_294;
    end else begin
        ap_phi_mux_data_5_val28_phi_phi_fu_512_p4 = ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_508;
    end
end

always @ (*) begin
    if ((do_init_reg_194 == 1'd0)) begin
        ap_phi_mux_data_6_val29_phi_phi_fu_524_p4 = data_6_val29_rewind_reg_308;
    end else begin
        ap_phi_mux_data_6_val29_phi_phi_fu_524_p4 = ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_520;
    end
end

always @ (*) begin
    if ((do_init_reg_194 == 1'd0)) begin
        ap_phi_mux_data_7_val30_phi_phi_fu_536_p4 = data_7_val30_rewind_reg_322;
    end else begin
        ap_phi_mux_data_7_val30_phi_phi_fu_536_p4 = ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_532;
    end
end

always @ (*) begin
    if ((do_init_reg_194 == 1'd0)) begin
        ap_phi_mux_data_8_val31_phi_phi_fu_548_p4 = data_8_val31_rewind_reg_336;
    end else begin
        ap_phi_mux_data_8_val31_phi_phi_fu_548_p4 = ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_544;
    end
end

always @ (*) begin
    if ((do_init_reg_194 == 1'd0)) begin
        ap_phi_mux_data_9_val32_phi_phi_fu_560_p4 = data_9_val32_rewind_reg_350;
    end else begin
        ap_phi_mux_data_9_val32_phi_phi_fu_560_p4 = ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_556;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_184)) begin
        if ((icmp_ln135_reg_923 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_198_p6 = 1'd1;
        end else if ((icmp_ln135_reg_923 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_198_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_198_p6 = do_init_reg_194;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_198_p6 = do_init_reg_194;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_184)) begin
        if ((icmp_ln135_reg_923 == 1'd1)) begin
            ap_phi_mux_w_index19_phi_fu_214_p6 = 6'd0;
        end else if ((icmp_ln135_reg_923 == 1'd0)) begin
            ap_phi_mux_w_index19_phi_fu_214_p6 = w_index_reg_918;
        end else begin
            ap_phi_mux_w_index19_phi_fu_214_p6 = w_index19_reg_210;
        end
    end else begin
        ap_phi_mux_w_index19_phi_fu_214_p6 = w_index19_reg_210;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln135_fu_580_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1))) begin
        ap_return_0 = acc_fu_786_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1))) begin
        ap_return_1 = acc_6_fu_778_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1))) begin
        ap_return_2 = acc_7_fu_770_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1))) begin
        ap_return_3 = acc_8_fu_762_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_923 == 1'd1))) begin
        ap_return_4 = acc_9_fu_754_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outidx_96_ce0_local = 1'b1;
    end else begin
        outidx_96_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w17_ce0_local = 1'b1;
    end else begin
        w17_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_590_p21 = 'bx;

assign a_fu_590_p22 = in_index20_reg_364[3:0];

assign acc_10_fu_731_p3 = ((or_ln144_3_fu_725_p2[0:0] == 1'b1) ? acc_1010_reg_434 : 17'd0);

assign acc_11_fu_739_p1 = grp_fu_848_p3[16:0];

assign acc_6_fu_778_p3 = ((icmp_ln144_1_fu_684_p2[0:0] == 1'b1) ? acc_11_fu_739_p1 : acc_715_reg_392);

assign acc_7_fu_770_p3 = ((icmp_ln144_2_fu_690_p2[0:0] == 1'b1) ? acc_11_fu_739_p1 : acc_813_reg_406);

assign acc_8_fu_762_p3 = ((icmp_ln144_3_fu_696_p2[0:0] == 1'b1) ? acc_11_fu_739_p1 : acc_911_reg_420);

assign acc_9_fu_754_p3 = ((or_ln144_5_fu_748_p2[0:0] == 1'b1) ? acc_10_fu_731_p3 : acc_11_fu_739_p1);

assign acc_fu_786_p3 = ((icmp_ln144_fu_678_p2[0:0] == 1'b1) ? acc_11_fu_739_p1 : acc17_reg_378);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_184 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_37 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_448 = 'bx;

assign ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_460 = 'bx;

assign ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_472 = 'bx;

assign ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_484 = 'bx;

assign ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_496 = 'bx;

assign ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_508 = 'bx;

assign ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_520 = 'bx;

assign ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_532 = 'bx;

assign ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_544 = 'bx;

assign ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_556 = 'bx;

assign grp_fu_848_p0 = grp_fu_848_p00;

assign grp_fu_848_p00 = a_fu_590_p23;

assign icmp_ln135_fu_580_p2 = ((ap_phi_mux_w_index19_phi_fu_214_p6 == 6'd49) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_684_p2 = ((outidx_96_q0 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln144_2_fu_690_p2 = ((outidx_96_q0 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln144_3_fu_696_p2 = ((outidx_96_q0 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln144_4_fu_702_p2 = ((grp_fu_848_p3 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_678_p2 = ((outidx_96_q0 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_800_p2 = (($signed(in_index_2_fu_794_p2) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign in_index_2_fu_794_p2 = (in_index20_reg_364 + 32'd1);

assign in_index_fu_806_p3 = ((icmp_ln154_fu_800_p2[0:0] == 1'b1) ? 32'd0 : in_index_2_fu_794_p2);

assign or_ln144_1_fu_713_p2 = (icmp_ln144_3_fu_696_p2 | icmp_ln144_2_fu_690_p2);

assign or_ln144_2_fu_719_p2 = (or_ln144_1_fu_713_p2 | icmp_ln144_1_fu_684_p2);

assign or_ln144_3_fu_725_p2 = (or_ln144_fu_707_p2 | or_ln144_2_fu_719_p2);

assign or_ln144_4_fu_742_p2 = (icmp_ln144_fu_678_p2 | icmp_ln144_1_fu_684_p2);

assign or_ln144_5_fu_748_p2 = (or_ln144_4_fu_742_p2 | or_ln144_1_fu_713_p2);

assign or_ln144_fu_707_p2 = (icmp_ln144_fu_678_p2 | icmp_ln144_4_fu_702_p2);

assign outidx_96_address0 = zext_ln135_fu_568_p1;

assign tmp_fu_646_p11 = 'bx;

assign w17_address0 = zext_ln135_fu_568_p1;

assign w_index_fu_574_p2 = (ap_phi_mux_w_index19_phi_fu_214_p6 + 6'd1);

assign zext_ln135_fu_568_p1 = ap_phi_mux_w_index19_phi_fu_214_p6;

endmodule //myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s
