// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config18_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] data_0_val;
input  [5:0] data_1_val;
input  [5:0] data_2_val;
input  [5:0] data_3_val;
input  [5:0] data_4_val;
input  [5:0] data_5_val;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;
reg[15:0] ap_return_5;
reg[15:0] ap_return_6;
reg[15:0] ap_return_7;
reg[15:0] ap_return_8;
reg[15:0] ap_return_9;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln46_fu_527_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] w18_address0;
wire   [118:0] w18_q0;
reg   [0:0] do_init_reg_189;
reg   [1:0] w_index3_reg_205;
reg   [5:0] data_0_val95_rewind_reg_220;
reg   [5:0] data_1_val96_rewind_reg_234;
reg   [5:0] data_2_val97_rewind_reg_248;
reg   [5:0] data_3_val98_rewind_reg_262;
reg   [5:0] data_4_val99_rewind_reg_276;
reg   [5:0] data_5_val100_rewind_reg_290;
reg   [13:0] res_0_022_reg_304;
reg   [13:0] res_1_020_reg_318;
reg   [13:0] res_2_018_reg_332;
reg   [13:0] res_3_016_reg_346;
reg   [13:0] res_4_014_reg_360;
reg   [13:0] res_5_012_reg_374;
reg   [13:0] res_6_010_reg_388;
reg   [13:0] res_7_08_reg_402;
reg   [13:0] res_8_06_reg_416;
reg   [13:0] res_9_04_reg_430;
wire   [1:0] w_index_fu_521_p2;
reg   [1:0] w_index_reg_1358;
reg   [0:0] icmp_ln46_reg_1363;
wire   [13:0] empty_fu_670_p1;
reg    ap_enable_reg_pp0_iter1;
wire   [13:0] empty_96_fu_725_p1;
wire   [13:0] empty_97_fu_780_p1;
wire   [13:0] empty_98_fu_835_p1;
wire   [13:0] empty_99_fu_890_p1;
wire   [13:0] empty_100_fu_945_p1;
wire   [13:0] empty_101_fu_1000_p1;
wire   [13:0] empty_102_fu_1055_p1;
wire   [13:0] empty_103_fu_1110_p1;
wire   [13:0] trunc_ln46_fu_1165_p1;
wire    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_do_init_phi_fu_193_p6;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_w_index3_phi_fu_209_p6;
reg   [5:0] ap_phi_mux_data_0_val95_phi_phi_fu_448_p4;
reg   [5:0] ap_phi_mux_data_1_val96_phi_phi_fu_460_p4;
reg   [5:0] ap_phi_mux_data_2_val97_phi_phi_fu_472_p4;
reg   [5:0] ap_phi_mux_data_3_val98_phi_phi_fu_484_p4;
reg   [5:0] ap_phi_mux_data_4_val99_phi_phi_fu_496_p4;
reg   [5:0] ap_phi_mux_data_5_val100_phi_phi_fu_508_p4;
wire   [5:0] ap_phi_reg_pp0_iter0_data_0_val95_phi_reg_444;
reg   [5:0] ap_phi_reg_pp0_iter1_data_0_val95_phi_reg_444;
wire   [5:0] ap_phi_reg_pp0_iter0_data_1_val96_phi_reg_456;
reg   [5:0] ap_phi_reg_pp0_iter1_data_1_val96_phi_reg_456;
wire   [5:0] ap_phi_reg_pp0_iter0_data_2_val97_phi_reg_468;
reg   [5:0] ap_phi_reg_pp0_iter1_data_2_val97_phi_reg_468;
wire   [5:0] ap_phi_reg_pp0_iter0_data_3_val98_phi_reg_480;
reg   [5:0] ap_phi_reg_pp0_iter1_data_3_val98_phi_reg_480;
wire   [5:0] ap_phi_reg_pp0_iter0_data_4_val99_phi_reg_492;
reg   [5:0] ap_phi_reg_pp0_iter1_data_4_val99_phi_reg_492;
wire   [5:0] ap_phi_reg_pp0_iter0_data_5_val100_phi_reg_504;
reg   [5:0] ap_phi_reg_pp0_iter1_data_5_val100_phi_reg_504;
wire   [63:0] zext_ln46_fu_516_p1;
reg    w18_ce0_local;
wire   [5:0] a_fu_573_p7;
wire   [5:0] a_fu_573_p9;
wire  signed [5:0] w_fu_593_p1;
wire   [5:0] a_69_fu_605_p7;
wire   [5:0] a_69_fu_605_p9;
wire  signed [5:0] w_364_fu_625_p4;
wire   [5:0] mul_ln73_369_fu_647_p1;
wire   [11:0] zext_ln73_69_fu_635_p1;
wire  signed [11:0] mul_ln73_369_fu_647_p2;
wire  signed [12:0] grp_fu_1233_p3;
wire  signed [14:0] sext_ln46_23_fu_569_p1;
wire  signed [14:0] sext_ln58_368_fu_657_p1;
wire  signed [14:0] add_ln58_369_fu_660_p2;
wire  signed [5:0] w_365_fu_674_p4;
wire  signed [5:0] w_366_fu_688_p4;
wire   [5:0] mul_ln73_371_fu_702_p1;
wire  signed [11:0] mul_ln73_371_fu_702_p2;
wire  signed [12:0] grp_fu_1242_p3;
wire  signed [14:0] sext_ln46_22_fu_565_p1;
wire  signed [14:0] sext_ln58_370_fu_712_p1;
wire  signed [14:0] add_ln58_371_fu_715_p2;
wire  signed [5:0] w_367_fu_729_p4;
wire  signed [5:0] w_368_fu_743_p4;
wire   [5:0] mul_ln73_373_fu_757_p1;
wire  signed [11:0] mul_ln73_373_fu_757_p2;
wire  signed [12:0] grp_fu_1251_p3;
wire  signed [14:0] sext_ln46_21_fu_561_p1;
wire  signed [14:0] sext_ln58_372_fu_767_p1;
wire  signed [14:0] add_ln58_373_fu_770_p2;
wire  signed [5:0] w_369_fu_784_p4;
wire  signed [5:0] w_370_fu_798_p4;
wire   [5:0] mul_ln73_375_fu_812_p1;
wire  signed [11:0] mul_ln73_375_fu_812_p2;
wire  signed [12:0] grp_fu_1260_p3;
wire  signed [14:0] sext_ln46_20_fu_557_p1;
wire  signed [14:0] sext_ln58_374_fu_822_p1;
wire  signed [14:0] add_ln58_375_fu_825_p2;
wire  signed [5:0] w_371_fu_839_p4;
wire  signed [5:0] w_372_fu_853_p4;
wire   [5:0] mul_ln73_377_fu_867_p1;
wire  signed [11:0] mul_ln73_377_fu_867_p2;
wire  signed [12:0] grp_fu_1269_p3;
wire  signed [14:0] sext_ln46_19_fu_553_p1;
wire  signed [14:0] sext_ln58_376_fu_877_p1;
wire  signed [14:0] add_ln58_377_fu_880_p2;
wire  signed [5:0] w_373_fu_894_p4;
wire  signed [5:0] w_374_fu_908_p4;
wire   [5:0] mul_ln73_379_fu_922_p1;
wire  signed [11:0] mul_ln73_379_fu_922_p2;
wire  signed [12:0] grp_fu_1278_p3;
wire  signed [14:0] sext_ln46_18_fu_549_p1;
wire  signed [14:0] sext_ln58_378_fu_932_p1;
wire  signed [14:0] add_ln58_379_fu_935_p2;
wire  signed [5:0] w_375_fu_949_p4;
wire  signed [5:0] w_376_fu_963_p4;
wire   [5:0] mul_ln73_381_fu_977_p1;
wire  signed [11:0] mul_ln73_381_fu_977_p2;
wire  signed [12:0] grp_fu_1287_p3;
wire  signed [14:0] sext_ln46_17_fu_545_p1;
wire  signed [14:0] sext_ln58_380_fu_987_p1;
wire  signed [14:0] add_ln58_381_fu_990_p2;
wire  signed [5:0] w_377_fu_1004_p4;
wire  signed [5:0] w_378_fu_1018_p4;
wire   [5:0] mul_ln73_383_fu_1032_p1;
wire  signed [11:0] mul_ln73_383_fu_1032_p2;
wire  signed [12:0] grp_fu_1296_p3;
wire  signed [14:0] sext_ln46_16_fu_541_p1;
wire  signed [14:0] sext_ln58_382_fu_1042_p1;
wire  signed [14:0] add_ln58_383_fu_1045_p2;
wire  signed [5:0] w_379_fu_1059_p4;
wire  signed [5:0] w_380_fu_1073_p4;
wire   [5:0] mul_ln73_385_fu_1087_p1;
wire  signed [11:0] mul_ln73_385_fu_1087_p2;
wire  signed [12:0] grp_fu_1305_p3;
wire  signed [14:0] sext_ln46_15_fu_537_p1;
wire  signed [14:0] sext_ln58_384_fu_1097_p1;
wire  signed [14:0] add_ln58_385_fu_1100_p2;
wire  signed [5:0] w_381_fu_1114_p4;
wire   [5:0] mul_ln73_386_fu_1128_p1;
wire   [11:0] zext_ln73_fu_597_p1;
wire  signed [11:0] mul_ln73_386_fu_1128_p2;
wire  signed [4:0] tmp_fu_1138_p4;
wire  signed [12:0] grp_fu_1314_p3;
wire  signed [14:0] sext_ln46_fu_533_p1;
wire  signed [14:0] sext_ln58_386_fu_1152_p1;
wire  signed [14:0] add_ln58_387_fu_1155_p2;
wire  signed [15:0] add_ln58_369_cast25_fu_666_p1;
wire  signed [15:0] add_ln58_371_cast27_fu_721_p1;
wire  signed [15:0] add_ln58_373_cast29_fu_776_p1;
wire  signed [15:0] add_ln58_375_cast31_fu_831_p1;
wire  signed [15:0] add_ln58_377_cast33_fu_886_p1;
wire  signed [15:0] add_ln58_379_cast35_fu_941_p1;
wire  signed [15:0] add_ln58_381_cast37_fu_996_p1;
wire  signed [15:0] add_ln58_383_cast39_fu_1051_p1;
wire  signed [15:0] add_ln58_385_cast41_fu_1106_p1;
wire  signed [15:0] sext_ln46_24_fu_1161_p1;
wire   [5:0] grp_fu_1233_p1;
wire   [5:0] grp_fu_1242_p1;
wire   [5:0] grp_fu_1251_p1;
wire   [5:0] grp_fu_1260_p1;
wire   [5:0] grp_fu_1269_p1;
wire   [5:0] grp_fu_1278_p1;
wire   [5:0] grp_fu_1287_p1;
wire   [5:0] grp_fu_1296_p1;
wire   [5:0] grp_fu_1305_p1;
wire   [5:0] grp_fu_1314_p0;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [15:0] ap_return_3_preg;
reg   [15:0] ap_return_4_preg;
reg   [15:0] ap_return_5_preg;
reg   [15:0] ap_return_6_preg;
reg   [15:0] ap_return_7_preg;
reg   [15:0] ap_return_8_preg;
reg   [15:0] ap_return_9_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [10:0] grp_fu_1314_p00;
reg    ap_condition_168;
reg    ap_condition_37;
wire   [1:0] a_fu_573_p1;
wire   [1:0] a_fu_573_p3;
wire  signed [1:0] a_fu_573_p5;
wire   [1:0] a_69_fu_605_p1;
wire   [1:0] a_69_fu_605_p3;
wire  signed [1:0] a_69_fu_605_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
#0 ap_return_2_preg = 16'd0;
#0 ap_return_3_preg = 16'd0;
#0 ap_return_4_preg = 16'd0;
#0 ap_return_5_preg = 16'd0;
#0 ap_return_6_preg = 16'd0;
#0 ap_return_7_preg = 16'd0;
#0 ap_return_8_preg = 16'd0;
#0 ap_return_9_preg = 16'd0;
end

myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config18_s_w18_ROM_NP4jc #(
    .DataWidth( 119 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
w18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w18_address0),
    .ce0(w18_ce0_local),
    .q0(w18_q0)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_7_2_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 6 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 6 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 6 ),
    .def_WIDTH( 6 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
sparsemux_7_2_6_1_1_U1080(
    .din0(ap_phi_mux_data_0_val95_phi_phi_fu_448_p4),
    .din1(ap_phi_mux_data_1_val96_phi_phi_fu_460_p4),
    .din2(ap_phi_mux_data_2_val97_phi_phi_fu_472_p4),
    .def(a_fu_573_p7),
    .sel(w_index3_reg_205),
    .dout(a_fu_573_p9)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_7_2_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 6 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 6 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 6 ),
    .def_WIDTH( 6 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
sparsemux_7_2_6_1_1_U1081(
    .din0(ap_phi_mux_data_3_val98_phi_phi_fu_484_p4),
    .din1(ap_phi_mux_data_4_val99_phi_phi_fu_496_p4),
    .din2(ap_phi_mux_data_5_val100_phi_phi_fu_508_p4),
    .def(a_69_fu_605_p7),
    .sel(w_index3_reg_205),
    .dout(a_69_fu_605_p9)
);

myproject_mul_6s_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6s_6ns_12_1_1_U1082(
    .din0(w_364_fu_625_p4),
    .din1(mul_ln73_369_fu_647_p1),
    .dout(mul_ln73_369_fu_647_p2)
);

myproject_mul_6s_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6s_6ns_12_1_1_U1083(
    .din0(w_366_fu_688_p4),
    .din1(mul_ln73_371_fu_702_p1),
    .dout(mul_ln73_371_fu_702_p2)
);

myproject_mul_6s_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6s_6ns_12_1_1_U1084(
    .din0(w_368_fu_743_p4),
    .din1(mul_ln73_373_fu_757_p1),
    .dout(mul_ln73_373_fu_757_p2)
);

myproject_mul_6s_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6s_6ns_12_1_1_U1085(
    .din0(w_370_fu_798_p4),
    .din1(mul_ln73_375_fu_812_p1),
    .dout(mul_ln73_375_fu_812_p2)
);

myproject_mul_6s_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6s_6ns_12_1_1_U1086(
    .din0(w_372_fu_853_p4),
    .din1(mul_ln73_377_fu_867_p1),
    .dout(mul_ln73_377_fu_867_p2)
);

myproject_mul_6s_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6s_6ns_12_1_1_U1087(
    .din0(w_374_fu_908_p4),
    .din1(mul_ln73_379_fu_922_p1),
    .dout(mul_ln73_379_fu_922_p2)
);

myproject_mul_6s_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6s_6ns_12_1_1_U1088(
    .din0(w_376_fu_963_p4),
    .din1(mul_ln73_381_fu_977_p1),
    .dout(mul_ln73_381_fu_977_p2)
);

myproject_mul_6s_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6s_6ns_12_1_1_U1089(
    .din0(w_378_fu_1018_p4),
    .din1(mul_ln73_383_fu_1032_p1),
    .dout(mul_ln73_383_fu_1032_p2)
);

myproject_mul_6s_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6s_6ns_12_1_1_U1090(
    .din0(w_380_fu_1073_p4),
    .din1(mul_ln73_385_fu_1087_p1),
    .dout(mul_ln73_385_fu_1087_p2)
);

myproject_mul_6s_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mul_6s_6ns_12_1_1_U1091(
    .din0(w_381_fu_1114_p4),
    .din1(mul_ln73_386_fu_1128_p1),
    .dout(mul_ln73_386_fu_1128_p2)
);

myproject_mac_muladd_6s_6ns_12s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 13 ))
mac_muladd_6s_6ns_12s_13_1_1_U1092(
    .din0(w_fu_593_p1),
    .din1(grp_fu_1233_p1),
    .din2(mul_ln73_369_fu_647_p2),
    .dout(grp_fu_1233_p3)
);

myproject_mac_muladd_6s_6ns_12s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 13 ))
mac_muladd_6s_6ns_12s_13_1_1_U1093(
    .din0(w_365_fu_674_p4),
    .din1(grp_fu_1242_p1),
    .din2(mul_ln73_371_fu_702_p2),
    .dout(grp_fu_1242_p3)
);

myproject_mac_muladd_6s_6ns_12s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 13 ))
mac_muladd_6s_6ns_12s_13_1_1_U1094(
    .din0(w_367_fu_729_p4),
    .din1(grp_fu_1251_p1),
    .din2(mul_ln73_373_fu_757_p2),
    .dout(grp_fu_1251_p3)
);

myproject_mac_muladd_6s_6ns_12s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 13 ))
mac_muladd_6s_6ns_12s_13_1_1_U1095(
    .din0(w_369_fu_784_p4),
    .din1(grp_fu_1260_p1),
    .din2(mul_ln73_375_fu_812_p2),
    .dout(grp_fu_1260_p3)
);

myproject_mac_muladd_6s_6ns_12s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 13 ))
mac_muladd_6s_6ns_12s_13_1_1_U1096(
    .din0(w_371_fu_839_p4),
    .din1(grp_fu_1269_p1),
    .din2(mul_ln73_377_fu_867_p2),
    .dout(grp_fu_1269_p3)
);

myproject_mac_muladd_6s_6ns_12s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 13 ))
mac_muladd_6s_6ns_12s_13_1_1_U1097(
    .din0(w_373_fu_894_p4),
    .din1(grp_fu_1278_p1),
    .din2(mul_ln73_379_fu_922_p2),
    .dout(grp_fu_1278_p3)
);

myproject_mac_muladd_6s_6ns_12s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 13 ))
mac_muladd_6s_6ns_12s_13_1_1_U1098(
    .din0(w_375_fu_949_p4),
    .din1(grp_fu_1287_p1),
    .din2(mul_ln73_381_fu_977_p2),
    .dout(grp_fu_1287_p3)
);

myproject_mac_muladd_6s_6ns_12s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 13 ))
mac_muladd_6s_6ns_12s_13_1_1_U1099(
    .din0(w_377_fu_1004_p4),
    .din1(grp_fu_1296_p1),
    .din2(mul_ln73_383_fu_1032_p2),
    .dout(grp_fu_1296_p3)
);

myproject_mac_muladd_6s_6ns_12s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 13 ))
mac_muladd_6s_6ns_12s_13_1_1_U1100(
    .din0(w_379_fu_1059_p4),
    .din1(grp_fu_1305_p1),
    .din2(mul_ln73_385_fu_1087_p2),
    .dout(grp_fu_1305_p3)
);

myproject_mac_muladd_6ns_5s_12s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 13 ))
mac_muladd_6ns_5s_12s_13_1_1_U1101(
    .din0(grp_fu_1314_p0),
    .din1(tmp_fu_1138_p4),
    .din2(mul_ln73_386_fu_1128_p2),
    .dout(grp_fu_1314_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
            ap_return_0_preg <= add_ln58_369_cast25_fu_666_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
            ap_return_1_preg <= add_ln58_371_cast27_fu_721_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
            ap_return_2_preg <= add_ln58_373_cast29_fu_776_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
            ap_return_3_preg <= add_ln58_375_cast31_fu_831_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
            ap_return_4_preg <= add_ln58_377_cast33_fu_886_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
            ap_return_5_preg <= add_ln58_379_cast35_fu_941_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
            ap_return_6_preg <= add_ln58_381_cast37_fu_996_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
            ap_return_7_preg <= add_ln58_383_cast39_fu_1051_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
            ap_return_8_preg <= add_ln58_385_cast41_fu_1106_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
            ap_return_9_preg <= sext_ln46_24_fu_1161_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_193_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_0_val95_phi_reg_444 <= data_0_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_0_val95_phi_reg_444 <= ap_phi_reg_pp0_iter0_data_0_val95_phi_reg_444;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_193_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_1_val96_phi_reg_456 <= data_1_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_1_val96_phi_reg_456 <= ap_phi_reg_pp0_iter0_data_1_val96_phi_reg_456;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_193_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_2_val97_phi_reg_468 <= data_2_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_2_val97_phi_reg_468 <= ap_phi_reg_pp0_iter0_data_2_val97_phi_reg_468;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_193_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_3_val98_phi_reg_480 <= data_3_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_3_val98_phi_reg_480 <= ap_phi_reg_pp0_iter0_data_3_val98_phi_reg_480;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_193_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_4_val99_phi_reg_492 <= data_4_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_4_val99_phi_reg_492 <= ap_phi_reg_pp0_iter0_data_4_val99_phi_reg_492;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_193_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_5_val100_phi_reg_504 <= data_5_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_5_val100_phi_reg_504 <= ap_phi_reg_pp0_iter0_data_5_val100_phi_reg_504;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        do_init_reg_189 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_189 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        res_0_022_reg_304 <= empty_fu_670_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_0_022_reg_304 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        res_1_020_reg_318 <= empty_96_fu_725_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_1_020_reg_318 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        res_2_018_reg_332 <= empty_97_fu_780_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_2_018_reg_332 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        res_3_016_reg_346 <= empty_98_fu_835_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_3_016_reg_346 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        res_4_014_reg_360 <= empty_99_fu_890_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_4_014_reg_360 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        res_5_012_reg_374 <= empty_100_fu_945_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_5_012_reg_374 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        res_6_010_reg_388 <= empty_101_fu_1000_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_6_010_reg_388 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        res_7_08_reg_402 <= empty_102_fu_1055_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_7_08_reg_402 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        res_8_06_reg_416 <= empty_103_fu_1110_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_8_06_reg_416 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        res_9_04_reg_430 <= trunc_ln46_fu_1165_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_9_04_reg_430 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        w_index3_reg_205 <= w_index_reg_1358;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index3_reg_205 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd0))) begin
        data_0_val95_rewind_reg_220 <= ap_phi_mux_data_0_val95_phi_phi_fu_448_p4;
        data_1_val96_rewind_reg_234 <= ap_phi_mux_data_1_val96_phi_phi_fu_460_p4;
        data_2_val97_rewind_reg_248 <= ap_phi_mux_data_2_val97_phi_phi_fu_472_p4;
        data_3_val98_rewind_reg_262 <= ap_phi_mux_data_3_val98_phi_phi_fu_484_p4;
        data_4_val99_rewind_reg_276 <= ap_phi_mux_data_4_val99_phi_phi_fu_496_p4;
        data_5_val100_rewind_reg_290 <= ap_phi_mux_data_5_val100_phi_phi_fu_508_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln46_reg_1363 <= icmp_ln46_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_1358 <= w_index_fu_521_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((do_init_reg_189 == 1'd0)) begin
        ap_phi_mux_data_0_val95_phi_phi_fu_448_p4 = data_0_val95_rewind_reg_220;
    end else begin
        ap_phi_mux_data_0_val95_phi_phi_fu_448_p4 = ap_phi_reg_pp0_iter1_data_0_val95_phi_reg_444;
    end
end

always @ (*) begin
    if ((do_init_reg_189 == 1'd0)) begin
        ap_phi_mux_data_1_val96_phi_phi_fu_460_p4 = data_1_val96_rewind_reg_234;
    end else begin
        ap_phi_mux_data_1_val96_phi_phi_fu_460_p4 = ap_phi_reg_pp0_iter1_data_1_val96_phi_reg_456;
    end
end

always @ (*) begin
    if ((do_init_reg_189 == 1'd0)) begin
        ap_phi_mux_data_2_val97_phi_phi_fu_472_p4 = data_2_val97_rewind_reg_248;
    end else begin
        ap_phi_mux_data_2_val97_phi_phi_fu_472_p4 = ap_phi_reg_pp0_iter1_data_2_val97_phi_reg_468;
    end
end

always @ (*) begin
    if ((do_init_reg_189 == 1'd0)) begin
        ap_phi_mux_data_3_val98_phi_phi_fu_484_p4 = data_3_val98_rewind_reg_262;
    end else begin
        ap_phi_mux_data_3_val98_phi_phi_fu_484_p4 = ap_phi_reg_pp0_iter1_data_3_val98_phi_reg_480;
    end
end

always @ (*) begin
    if ((do_init_reg_189 == 1'd0)) begin
        ap_phi_mux_data_4_val99_phi_phi_fu_496_p4 = data_4_val99_rewind_reg_276;
    end else begin
        ap_phi_mux_data_4_val99_phi_phi_fu_496_p4 = ap_phi_reg_pp0_iter1_data_4_val99_phi_reg_492;
    end
end

always @ (*) begin
    if ((do_init_reg_189 == 1'd0)) begin
        ap_phi_mux_data_5_val100_phi_phi_fu_508_p4 = data_5_val100_rewind_reg_290;
    end else begin
        ap_phi_mux_data_5_val100_phi_phi_fu_508_p4 = ap_phi_reg_pp0_iter1_data_5_val100_phi_reg_504;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_168)) begin
        if ((icmp_ln46_reg_1363 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_193_p6 = 1'd1;
        end else if ((icmp_ln46_reg_1363 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_193_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_193_p6 = do_init_reg_189;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_193_p6 = do_init_reg_189;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_168)) begin
        if ((icmp_ln46_reg_1363 == 1'd1)) begin
            ap_phi_mux_w_index3_phi_fu_209_p6 = 2'd0;
        end else if ((icmp_ln46_reg_1363 == 1'd0)) begin
            ap_phi_mux_w_index3_phi_fu_209_p6 = w_index_reg_1358;
        end else begin
            ap_phi_mux_w_index3_phi_fu_209_p6 = w_index3_reg_205;
        end
    end else begin
        ap_phi_mux_w_index3_phi_fu_209_p6 = w_index3_reg_205;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln46_fu_527_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
        ap_return_0 = add_ln58_369_cast25_fu_666_p1;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
        ap_return_1 = add_ln58_371_cast27_fu_721_p1;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
        ap_return_2 = add_ln58_373_cast29_fu_776_p1;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
        ap_return_3 = add_ln58_375_cast31_fu_831_p1;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
        ap_return_4 = add_ln58_377_cast33_fu_886_p1;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
        ap_return_5 = add_ln58_379_cast35_fu_941_p1;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
        ap_return_6 = add_ln58_381_cast37_fu_996_p1;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
        ap_return_7 = add_ln58_383_cast39_fu_1051_p1;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
        ap_return_8 = add_ln58_385_cast41_fu_1106_p1;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_1363 == 1'd1))) begin
        ap_return_9 = sext_ln46_24_fu_1161_p1;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w18_ce0_local = 1'b1;
    end else begin
        w18_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_69_fu_605_p7 = 'bx;

assign a_fu_573_p7 = 'bx;

assign add_ln58_369_cast25_fu_666_p1 = add_ln58_369_fu_660_p2;

assign add_ln58_369_fu_660_p2 = ($signed(sext_ln46_23_fu_569_p1) + $signed(sext_ln58_368_fu_657_p1));

assign add_ln58_371_cast27_fu_721_p1 = add_ln58_371_fu_715_p2;

assign add_ln58_371_fu_715_p2 = ($signed(sext_ln46_22_fu_565_p1) + $signed(sext_ln58_370_fu_712_p1));

assign add_ln58_373_cast29_fu_776_p1 = add_ln58_373_fu_770_p2;

assign add_ln58_373_fu_770_p2 = ($signed(sext_ln46_21_fu_561_p1) + $signed(sext_ln58_372_fu_767_p1));

assign add_ln58_375_cast31_fu_831_p1 = add_ln58_375_fu_825_p2;

assign add_ln58_375_fu_825_p2 = ($signed(sext_ln46_20_fu_557_p1) + $signed(sext_ln58_374_fu_822_p1));

assign add_ln58_377_cast33_fu_886_p1 = add_ln58_377_fu_880_p2;

assign add_ln58_377_fu_880_p2 = ($signed(sext_ln46_19_fu_553_p1) + $signed(sext_ln58_376_fu_877_p1));

assign add_ln58_379_cast35_fu_941_p1 = add_ln58_379_fu_935_p2;

assign add_ln58_379_fu_935_p2 = ($signed(sext_ln46_18_fu_549_p1) + $signed(sext_ln58_378_fu_932_p1));

assign add_ln58_381_cast37_fu_996_p1 = add_ln58_381_fu_990_p2;

assign add_ln58_381_fu_990_p2 = ($signed(sext_ln46_17_fu_545_p1) + $signed(sext_ln58_380_fu_987_p1));

assign add_ln58_383_cast39_fu_1051_p1 = add_ln58_383_fu_1045_p2;

assign add_ln58_383_fu_1045_p2 = ($signed(sext_ln46_16_fu_541_p1) + $signed(sext_ln58_382_fu_1042_p1));

assign add_ln58_385_cast41_fu_1106_p1 = add_ln58_385_fu_1100_p2;

assign add_ln58_385_fu_1100_p2 = ($signed(sext_ln46_15_fu_537_p1) + $signed(sext_ln58_384_fu_1097_p1));

assign add_ln58_387_fu_1155_p2 = ($signed(sext_ln46_fu_533_p1) + $signed(sext_ln58_386_fu_1152_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_168 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_37 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_data_0_val95_phi_reg_444 = 'bx;

assign ap_phi_reg_pp0_iter0_data_1_val96_phi_reg_456 = 'bx;

assign ap_phi_reg_pp0_iter0_data_2_val97_phi_reg_468 = 'bx;

assign ap_phi_reg_pp0_iter0_data_3_val98_phi_reg_480 = 'bx;

assign ap_phi_reg_pp0_iter0_data_4_val99_phi_reg_492 = 'bx;

assign ap_phi_reg_pp0_iter0_data_5_val100_phi_reg_504 = 'bx;

assign empty_100_fu_945_p1 = add_ln58_379_fu_935_p2[13:0];

assign empty_101_fu_1000_p1 = add_ln58_381_fu_990_p2[13:0];

assign empty_102_fu_1055_p1 = add_ln58_383_fu_1045_p2[13:0];

assign empty_103_fu_1110_p1 = add_ln58_385_fu_1100_p2[13:0];

assign empty_96_fu_725_p1 = add_ln58_371_fu_715_p2[13:0];

assign empty_97_fu_780_p1 = add_ln58_373_fu_770_p2[13:0];

assign empty_98_fu_835_p1 = add_ln58_375_fu_825_p2[13:0];

assign empty_99_fu_890_p1 = add_ln58_377_fu_880_p2[13:0];

assign empty_fu_670_p1 = add_ln58_369_fu_660_p2[13:0];

assign grp_fu_1233_p1 = zext_ln73_fu_597_p1;

assign grp_fu_1242_p1 = zext_ln73_fu_597_p1;

assign grp_fu_1251_p1 = zext_ln73_fu_597_p1;

assign grp_fu_1260_p1 = zext_ln73_fu_597_p1;

assign grp_fu_1269_p1 = zext_ln73_fu_597_p1;

assign grp_fu_1278_p1 = zext_ln73_fu_597_p1;

assign grp_fu_1287_p1 = zext_ln73_fu_597_p1;

assign grp_fu_1296_p1 = zext_ln73_fu_597_p1;

assign grp_fu_1305_p1 = zext_ln73_fu_597_p1;

assign grp_fu_1314_p0 = grp_fu_1314_p00;

assign grp_fu_1314_p00 = a_69_fu_605_p9;

assign icmp_ln46_fu_527_p2 = ((ap_phi_mux_w_index3_phi_fu_209_p6 == 2'd2) ? 1'b1 : 1'b0);

assign mul_ln73_369_fu_647_p1 = zext_ln73_69_fu_635_p1;

assign mul_ln73_371_fu_702_p1 = zext_ln73_69_fu_635_p1;

assign mul_ln73_373_fu_757_p1 = zext_ln73_69_fu_635_p1;

assign mul_ln73_375_fu_812_p1 = zext_ln73_69_fu_635_p1;

assign mul_ln73_377_fu_867_p1 = zext_ln73_69_fu_635_p1;

assign mul_ln73_379_fu_922_p1 = zext_ln73_69_fu_635_p1;

assign mul_ln73_381_fu_977_p1 = zext_ln73_69_fu_635_p1;

assign mul_ln73_383_fu_1032_p1 = zext_ln73_69_fu_635_p1;

assign mul_ln73_385_fu_1087_p1 = zext_ln73_69_fu_635_p1;

assign mul_ln73_386_fu_1128_p1 = zext_ln73_fu_597_p1;

assign sext_ln46_15_fu_537_p1 = $signed(res_8_06_reg_416);

assign sext_ln46_16_fu_541_p1 = $signed(res_7_08_reg_402);

assign sext_ln46_17_fu_545_p1 = $signed(res_6_010_reg_388);

assign sext_ln46_18_fu_549_p1 = $signed(res_5_012_reg_374);

assign sext_ln46_19_fu_553_p1 = $signed(res_4_014_reg_360);

assign sext_ln46_20_fu_557_p1 = $signed(res_3_016_reg_346);

assign sext_ln46_21_fu_561_p1 = $signed(res_2_018_reg_332);

assign sext_ln46_22_fu_565_p1 = $signed(res_1_020_reg_318);

assign sext_ln46_23_fu_569_p1 = $signed(res_0_022_reg_304);

assign sext_ln46_24_fu_1161_p1 = add_ln58_387_fu_1155_p2;

assign sext_ln46_fu_533_p1 = $signed(res_9_04_reg_430);

assign sext_ln58_368_fu_657_p1 = grp_fu_1233_p3;

assign sext_ln58_370_fu_712_p1 = grp_fu_1242_p3;

assign sext_ln58_372_fu_767_p1 = grp_fu_1251_p3;

assign sext_ln58_374_fu_822_p1 = grp_fu_1260_p3;

assign sext_ln58_376_fu_877_p1 = grp_fu_1269_p3;

assign sext_ln58_378_fu_932_p1 = grp_fu_1278_p3;

assign sext_ln58_380_fu_987_p1 = grp_fu_1287_p3;

assign sext_ln58_382_fu_1042_p1 = grp_fu_1296_p3;

assign sext_ln58_384_fu_1097_p1 = grp_fu_1305_p3;

assign sext_ln58_386_fu_1152_p1 = grp_fu_1314_p3;

assign tmp_fu_1138_p4 = {{w18_q0[118:114]}};

assign trunc_ln46_fu_1165_p1 = add_ln58_387_fu_1155_p2[13:0];

assign w18_address0 = zext_ln46_fu_516_p1;

assign w_364_fu_625_p4 = {{w18_q0[11:6]}};

assign w_365_fu_674_p4 = {{w18_q0[17:12]}};

assign w_366_fu_688_p4 = {{w18_q0[23:18]}};

assign w_367_fu_729_p4 = {{w18_q0[29:24]}};

assign w_368_fu_743_p4 = {{w18_q0[35:30]}};

assign w_369_fu_784_p4 = {{w18_q0[41:36]}};

assign w_370_fu_798_p4 = {{w18_q0[47:42]}};

assign w_371_fu_839_p4 = {{w18_q0[53:48]}};

assign w_372_fu_853_p4 = {{w18_q0[59:54]}};

assign w_373_fu_894_p4 = {{w18_q0[65:60]}};

assign w_374_fu_908_p4 = {{w18_q0[71:66]}};

assign w_375_fu_949_p4 = {{w18_q0[77:72]}};

assign w_376_fu_963_p4 = {{w18_q0[83:78]}};

assign w_377_fu_1004_p4 = {{w18_q0[89:84]}};

assign w_378_fu_1018_p4 = {{w18_q0[95:90]}};

assign w_379_fu_1059_p4 = {{w18_q0[101:96]}};

assign w_380_fu_1073_p4 = {{w18_q0[107:102]}};

assign w_381_fu_1114_p4 = {{w18_q0[113:108]}};

assign w_fu_593_p1 = w18_q0[5:0];

assign w_index_fu_521_p2 = (ap_phi_mux_w_index3_phi_fu_209_p6 + 2'd1);

assign zext_ln46_fu_516_p1 = ap_phi_mux_w_index3_phi_fu_209_p6;

assign zext_ln73_69_fu_635_p1 = a_69_fu_605_p9;

assign zext_ln73_fu_597_p1 = a_fu_573_p9;

endmodule //myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config18_s
