// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_31_17_5_3_0_config14_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        data_8_val,
        data_9_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [19:0] data_0_val;
input  [19:0] data_1_val;
input  [19:0] data_2_val;
input  [19:0] data_3_val;
input  [19:0] data_4_val;
input  [19:0] data_5_val;
input  [19:0] data_6_val;
input  [19:0] data_7_val;
input  [19:0] data_8_val;
input  [19:0] data_9_val;
output  [30:0] ap_return_0;
output  [30:0] ap_return_1;
output  [30:0] ap_return_2;
output  [30:0] ap_return_3;
output  [30:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[30:0] ap_return_0;
reg[30:0] ap_return_1;
reg[30:0] ap_return_2;
reg[30:0] ap_return_3;
reg[30:0] ap_return_4;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln135_fu_578_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] outidx_73_address0;
wire   [2:0] outidx_73_q0;
wire   [5:0] w14_address0;
wire  signed [4:0] w14_q0;
reg   [0:0] do_init_reg_192;
reg   [5:0] w_index19_reg_208;
reg   [19:0] data_0_val23_rewind_reg_222;
reg   [19:0] data_1_val24_rewind_reg_236;
reg   [19:0] data_2_val25_rewind_reg_250;
reg   [19:0] data_3_val26_rewind_reg_264;
reg   [19:0] data_4_val27_rewind_reg_278;
reg   [19:0] data_5_val28_rewind_reg_292;
reg   [19:0] data_6_val29_rewind_reg_306;
reg   [19:0] data_7_val30_rewind_reg_320;
reg   [19:0] data_8_val31_rewind_reg_334;
reg   [19:0] data_9_val32_rewind_reg_348;
reg   [31:0] in_index20_reg_362;
reg   [30:0] acc17_reg_376;
reg   [30:0] acc_715_reg_390;
reg   [30:0] acc_813_reg_404;
reg   [30:0] acc_911_reg_418;
reg   [30:0] acc_1010_reg_432;
wire   [5:0] w_index_fu_572_p2;
reg   [5:0] w_index_reg_916;
reg   [0:0] icmp_ln135_reg_921;
wire   [30:0] acc_9_fu_752_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [30:0] acc_8_fu_760_p3;
wire   [30:0] acc_7_fu_768_p3;
wire   [30:0] acc_6_fu_776_p3;
wire   [30:0] acc_fu_784_p3;
wire   [31:0] in_index_fu_804_p3;
wire    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_do_init_phi_fu_196_p6;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_w_index19_phi_fu_212_p6;
reg   [19:0] ap_phi_mux_data_0_val23_phi_phi_fu_450_p4;
reg   [19:0] ap_phi_mux_data_1_val24_phi_phi_fu_462_p4;
reg   [19:0] ap_phi_mux_data_2_val25_phi_phi_fu_474_p4;
reg   [19:0] ap_phi_mux_data_3_val26_phi_phi_fu_486_p4;
reg   [19:0] ap_phi_mux_data_4_val27_phi_phi_fu_498_p4;
reg   [19:0] ap_phi_mux_data_5_val28_phi_phi_fu_510_p4;
reg   [19:0] ap_phi_mux_data_6_val29_phi_phi_fu_522_p4;
reg   [19:0] ap_phi_mux_data_7_val30_phi_phi_fu_534_p4;
reg   [19:0] ap_phi_mux_data_8_val31_phi_phi_fu_546_p4;
reg   [19:0] ap_phi_mux_data_9_val32_phi_phi_fu_558_p4;
wire   [19:0] ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_446;
reg   [19:0] ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_446;
wire   [19:0] ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_458;
reg   [19:0] ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_458;
wire   [19:0] ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_470;
reg   [19:0] ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_470;
wire   [19:0] ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_482;
reg   [19:0] ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_482;
wire   [19:0] ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_494;
reg   [19:0] ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_494;
wire   [19:0] ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_506;
reg   [19:0] ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_506;
wire   [19:0] ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_518;
reg   [19:0] ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_518;
wire   [19:0] ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_530;
reg   [19:0] ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_530;
wire   [19:0] ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_542;
reg   [19:0] ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_542;
wire   [19:0] ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_554;
reg   [19:0] ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_554;
wire   [63:0] zext_ln135_fu_566_p1;
reg    outidx_73_ce0_local;
reg    w14_ce0_local;
wire   [19:0] a_fu_588_p21;
wire   [3:0] a_fu_588_p22;
wire  signed [19:0] a_fu_588_p23;
wire   [30:0] tmp_fu_644_p11;
wire  signed [30:0] tmp_fu_644_p13;
wire  signed [31:0] grp_fu_846_p3;
wire   [0:0] icmp_ln144_fu_676_p2;
wire   [0:0] icmp_ln144_4_fu_700_p2;
wire   [0:0] icmp_ln144_2_fu_688_p2;
wire   [0:0] icmp_ln144_3_fu_694_p2;
wire   [0:0] or_ln144_1_fu_711_p2;
wire   [0:0] icmp_ln144_1_fu_682_p2;
wire   [0:0] or_ln144_2_fu_717_p2;
wire   [0:0] or_ln144_fu_705_p2;
wire   [0:0] or_ln144_3_fu_723_p2;
wire   [0:0] or_ln144_4_fu_740_p2;
wire   [0:0] or_ln144_5_fu_746_p2;
wire   [30:0] acc_10_fu_729_p3;
wire   [30:0] acc_11_fu_737_p1;
wire   [31:0] in_index_2_fu_792_p2;
wire   [0:0] icmp_ln154_fu_798_p2;
reg   [30:0] ap_return_0_preg;
reg   [30:0] ap_return_1_preg;
reg   [30:0] ap_return_2_preg;
reg   [30:0] ap_return_3_preg;
reg   [30:0] ap_return_4_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_184;
reg    ap_condition_37;
wire   [3:0] a_fu_588_p1;
wire   [3:0] a_fu_588_p3;
wire   [3:0] a_fu_588_p5;
wire   [3:0] a_fu_588_p7;
wire   [3:0] a_fu_588_p9;
wire   [3:0] a_fu_588_p11;
wire   [3:0] a_fu_588_p13;
wire   [3:0] a_fu_588_p15;
wire  signed [3:0] a_fu_588_p17;
wire  signed [3:0] a_fu_588_p19;
wire   [2:0] tmp_fu_644_p1;
wire   [2:0] tmp_fu_644_p3;
wire   [2:0] tmp_fu_644_p5;
wire   [2:0] tmp_fu_644_p7;
wire  signed [2:0] tmp_fu_644_p9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_0_preg = 31'd0;
#0 ap_return_1_preg = 31'd0;
#0 ap_return_2_preg = 31'd0;
#0 ap_return_3_preg = 31'd0;
#0 ap_return_4_preg = 31'd0;
end

myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_31_17_5_3_0_config14_s_outidxIfE #(
    .DataWidth( 3 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
outidx_73_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(outidx_73_address0),
    .ce0(outidx_73_ce0_local),
    .q0(outidx_73_q0)
);

myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_31_17_5_3_0_config14_s_w14_ROJfO #(
    .DataWidth( 5 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
w14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w14_address0),
    .ce0(w14_ce0_local),
    .q0(w14_q0)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_21_4_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 20 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 20 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 20 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 20 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 20 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 20 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 20 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 20 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 20 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 20 ),
    .def_WIDTH( 20 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
sparsemux_21_4_20_1_1_U727(
    .din0(ap_phi_mux_data_0_val23_phi_phi_fu_450_p4),
    .din1(ap_phi_mux_data_1_val24_phi_phi_fu_462_p4),
    .din2(ap_phi_mux_data_2_val25_phi_phi_fu_474_p4),
    .din3(ap_phi_mux_data_3_val26_phi_phi_fu_486_p4),
    .din4(ap_phi_mux_data_4_val27_phi_phi_fu_498_p4),
    .din5(ap_phi_mux_data_5_val28_phi_phi_fu_510_p4),
    .din6(ap_phi_mux_data_6_val29_phi_phi_fu_522_p4),
    .din7(ap_phi_mux_data_7_val30_phi_phi_fu_534_p4),
    .din8(ap_phi_mux_data_8_val31_phi_phi_fu_546_p4),
    .din9(ap_phi_mux_data_9_val32_phi_phi_fu_558_p4),
    .def(a_fu_588_p21),
    .sel(a_fu_588_p22),
    .dout(a_fu_588_p23)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_11_3_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 31 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 31 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 31 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 31 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 31 ),
    .def_WIDTH( 31 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 31 ))
sparsemux_11_3_31_1_1_U728(
    .din0(acc17_reg_376),
    .din1(acc_715_reg_390),
    .din2(acc_813_reg_404),
    .din3(acc_911_reg_418),
    .din4(acc_1010_reg_432),
    .def(tmp_fu_644_p11),
    .sel(outidx_73_q0),
    .dout(tmp_fu_644_p13)
);

myproject_mac_muladd_20s_5s_31s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 32 ))
mac_muladd_20s_5s_31s_32_1_1_U729(
    .din0(a_fu_588_p23),
    .din1(w14_q0),
    .din2(tmp_fu_644_p13),
    .dout(grp_fu_846_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 31'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1))) begin
            ap_return_0_preg <= acc_fu_784_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 31'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1))) begin
            ap_return_1_preg <= acc_6_fu_776_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 31'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1))) begin
            ap_return_2_preg <= acc_7_fu_768_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 31'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1))) begin
            ap_return_3_preg <= acc_8_fu_760_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 31'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1))) begin
            ap_return_4_preg <= acc_9_fu_752_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd0))) begin
        acc17_reg_376 <= acc_fu_784_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc17_reg_376 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd0))) begin
        acc_1010_reg_432 <= acc_9_fu_752_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_1010_reg_432 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd0))) begin
        acc_715_reg_390 <= acc_6_fu_776_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_715_reg_390 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd0))) begin
        acc_813_reg_404 <= acc_7_fu_768_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_813_reg_404 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd0))) begin
        acc_911_reg_418 <= acc_8_fu_760_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_911_reg_418 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_196_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_446 <= data_0_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_446 <= ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_446;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_196_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_458 <= data_1_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_458 <= ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_458;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_196_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_470 <= data_2_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_470 <= ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_470;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_196_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_482 <= data_3_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_482 <= ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_482;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_196_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_494 <= data_4_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_494 <= ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_494;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_196_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_506 <= data_5_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_506 <= ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_506;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_196_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_518 <= data_6_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_518 <= ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_518;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_196_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_530 <= data_7_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_530 <= ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_530;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_196_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_542 <= data_8_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_542 <= ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_542;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_196_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_554 <= data_9_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_554 <= ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_554;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd0))) begin
        do_init_reg_192 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_192 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd0))) begin
        in_index20_reg_362 <= in_index_fu_804_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_index20_reg_362 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd0))) begin
        w_index19_reg_208 <= w_index_reg_916;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index19_reg_208 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd0))) begin
        data_0_val23_rewind_reg_222 <= ap_phi_mux_data_0_val23_phi_phi_fu_450_p4;
        data_1_val24_rewind_reg_236 <= ap_phi_mux_data_1_val24_phi_phi_fu_462_p4;
        data_2_val25_rewind_reg_250 <= ap_phi_mux_data_2_val25_phi_phi_fu_474_p4;
        data_3_val26_rewind_reg_264 <= ap_phi_mux_data_3_val26_phi_phi_fu_486_p4;
        data_4_val27_rewind_reg_278 <= ap_phi_mux_data_4_val27_phi_phi_fu_498_p4;
        data_5_val28_rewind_reg_292 <= ap_phi_mux_data_5_val28_phi_phi_fu_510_p4;
        data_6_val29_rewind_reg_306 <= ap_phi_mux_data_6_val29_phi_phi_fu_522_p4;
        data_7_val30_rewind_reg_320 <= ap_phi_mux_data_7_val30_phi_phi_fu_534_p4;
        data_8_val31_rewind_reg_334 <= ap_phi_mux_data_8_val31_phi_phi_fu_546_p4;
        data_9_val32_rewind_reg_348 <= ap_phi_mux_data_9_val32_phi_phi_fu_558_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln135_reg_921 <= icmp_ln135_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_916 <= w_index_fu_572_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((do_init_reg_192 == 1'd0)) begin
        ap_phi_mux_data_0_val23_phi_phi_fu_450_p4 = data_0_val23_rewind_reg_222;
    end else begin
        ap_phi_mux_data_0_val23_phi_phi_fu_450_p4 = ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_446;
    end
end

always @ (*) begin
    if ((do_init_reg_192 == 1'd0)) begin
        ap_phi_mux_data_1_val24_phi_phi_fu_462_p4 = data_1_val24_rewind_reg_236;
    end else begin
        ap_phi_mux_data_1_val24_phi_phi_fu_462_p4 = ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_458;
    end
end

always @ (*) begin
    if ((do_init_reg_192 == 1'd0)) begin
        ap_phi_mux_data_2_val25_phi_phi_fu_474_p4 = data_2_val25_rewind_reg_250;
    end else begin
        ap_phi_mux_data_2_val25_phi_phi_fu_474_p4 = ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_470;
    end
end

always @ (*) begin
    if ((do_init_reg_192 == 1'd0)) begin
        ap_phi_mux_data_3_val26_phi_phi_fu_486_p4 = data_3_val26_rewind_reg_264;
    end else begin
        ap_phi_mux_data_3_val26_phi_phi_fu_486_p4 = ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_482;
    end
end

always @ (*) begin
    if ((do_init_reg_192 == 1'd0)) begin
        ap_phi_mux_data_4_val27_phi_phi_fu_498_p4 = data_4_val27_rewind_reg_278;
    end else begin
        ap_phi_mux_data_4_val27_phi_phi_fu_498_p4 = ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_494;
    end
end

always @ (*) begin
    if ((do_init_reg_192 == 1'd0)) begin
        ap_phi_mux_data_5_val28_phi_phi_fu_510_p4 = data_5_val28_rewind_reg_292;
    end else begin
        ap_phi_mux_data_5_val28_phi_phi_fu_510_p4 = ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_506;
    end
end

always @ (*) begin
    if ((do_init_reg_192 == 1'd0)) begin
        ap_phi_mux_data_6_val29_phi_phi_fu_522_p4 = data_6_val29_rewind_reg_306;
    end else begin
        ap_phi_mux_data_6_val29_phi_phi_fu_522_p4 = ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_518;
    end
end

always @ (*) begin
    if ((do_init_reg_192 == 1'd0)) begin
        ap_phi_mux_data_7_val30_phi_phi_fu_534_p4 = data_7_val30_rewind_reg_320;
    end else begin
        ap_phi_mux_data_7_val30_phi_phi_fu_534_p4 = ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_530;
    end
end

always @ (*) begin
    if ((do_init_reg_192 == 1'd0)) begin
        ap_phi_mux_data_8_val31_phi_phi_fu_546_p4 = data_8_val31_rewind_reg_334;
    end else begin
        ap_phi_mux_data_8_val31_phi_phi_fu_546_p4 = ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_542;
    end
end

always @ (*) begin
    if ((do_init_reg_192 == 1'd0)) begin
        ap_phi_mux_data_9_val32_phi_phi_fu_558_p4 = data_9_val32_rewind_reg_348;
    end else begin
        ap_phi_mux_data_9_val32_phi_phi_fu_558_p4 = ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_554;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_184)) begin
        if ((icmp_ln135_reg_921 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_196_p6 = 1'd1;
        end else if ((icmp_ln135_reg_921 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_196_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_196_p6 = do_init_reg_192;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_196_p6 = do_init_reg_192;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_184)) begin
        if ((icmp_ln135_reg_921 == 1'd1)) begin
            ap_phi_mux_w_index19_phi_fu_212_p6 = 6'd0;
        end else if ((icmp_ln135_reg_921 == 1'd0)) begin
            ap_phi_mux_w_index19_phi_fu_212_p6 = w_index_reg_916;
        end else begin
            ap_phi_mux_w_index19_phi_fu_212_p6 = w_index19_reg_208;
        end
    end else begin
        ap_phi_mux_w_index19_phi_fu_212_p6 = w_index19_reg_208;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln135_fu_578_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1))) begin
        ap_return_0 = acc_fu_784_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1))) begin
        ap_return_1 = acc_6_fu_776_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1))) begin
        ap_return_2 = acc_7_fu_768_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1))) begin
        ap_return_3 = acc_8_fu_760_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_921 == 1'd1))) begin
        ap_return_4 = acc_9_fu_752_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outidx_73_ce0_local = 1'b1;
    end else begin
        outidx_73_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w14_ce0_local = 1'b1;
    end else begin
        w14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_588_p21 = 'bx;

assign a_fu_588_p22 = in_index20_reg_362[3:0];

assign acc_10_fu_729_p3 = ((or_ln144_3_fu_723_p2[0:0] == 1'b1) ? acc_1010_reg_432 : 31'd0);

assign acc_11_fu_737_p1 = grp_fu_846_p3[30:0];

assign acc_6_fu_776_p3 = ((icmp_ln144_1_fu_682_p2[0:0] == 1'b1) ? acc_11_fu_737_p1 : acc_715_reg_390);

assign acc_7_fu_768_p3 = ((icmp_ln144_2_fu_688_p2[0:0] == 1'b1) ? acc_11_fu_737_p1 : acc_813_reg_404);

assign acc_8_fu_760_p3 = ((icmp_ln144_3_fu_694_p2[0:0] == 1'b1) ? acc_11_fu_737_p1 : acc_911_reg_418);

assign acc_9_fu_752_p3 = ((or_ln144_5_fu_746_p2[0:0] == 1'b1) ? acc_10_fu_729_p3 : acc_11_fu_737_p1);

assign acc_fu_784_p3 = ((icmp_ln144_fu_676_p2[0:0] == 1'b1) ? acc_11_fu_737_p1 : acc17_reg_376);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_184 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_37 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_446 = 'bx;

assign ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_458 = 'bx;

assign ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_470 = 'bx;

assign ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_482 = 'bx;

assign ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_494 = 'bx;

assign ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_506 = 'bx;

assign ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_518 = 'bx;

assign ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_530 = 'bx;

assign ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_542 = 'bx;

assign ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_554 = 'bx;

assign icmp_ln135_fu_578_p2 = ((ap_phi_mux_w_index19_phi_fu_212_p6 == 6'd49) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_682_p2 = ((outidx_73_q0 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln144_2_fu_688_p2 = ((outidx_73_q0 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln144_3_fu_694_p2 = ((outidx_73_q0 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln144_4_fu_700_p2 = ((grp_fu_846_p3 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_676_p2 = ((outidx_73_q0 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_798_p2 = (($signed(in_index_2_fu_792_p2) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign in_index_2_fu_792_p2 = (in_index20_reg_362 + 32'd1);

assign in_index_fu_804_p3 = ((icmp_ln154_fu_798_p2[0:0] == 1'b1) ? 32'd0 : in_index_2_fu_792_p2);

assign or_ln144_1_fu_711_p2 = (icmp_ln144_3_fu_694_p2 | icmp_ln144_2_fu_688_p2);

assign or_ln144_2_fu_717_p2 = (or_ln144_1_fu_711_p2 | icmp_ln144_1_fu_682_p2);

assign or_ln144_3_fu_723_p2 = (or_ln144_fu_705_p2 | or_ln144_2_fu_717_p2);

assign or_ln144_4_fu_740_p2 = (icmp_ln144_fu_676_p2 | icmp_ln144_1_fu_682_p2);

assign or_ln144_5_fu_746_p2 = (or_ln144_4_fu_740_p2 | or_ln144_1_fu_711_p2);

assign or_ln144_fu_705_p2 = (icmp_ln144_fu_676_p2 | icmp_ln144_4_fu_700_p2);

assign outidx_73_address0 = zext_ln135_fu_566_p1;

assign tmp_fu_644_p11 = 'bx;

assign w14_address0 = zext_ln135_fu_566_p1;

assign w_index_fu_572_p2 = (ap_phi_mux_w_index19_phi_fu_212_p6 + 6'd1);

assign zext_ln135_fu_566_p1 = ap_phi_mux_w_index19_phi_fu_212_p6;

endmodule //myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_31_17_5_3_0_config14_s
