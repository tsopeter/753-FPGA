-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (5 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (5 downto 0);
    data_2_val : IN STD_LOGIC_VECTOR (5 downto 0);
    data_3_val : IN STD_LOGIC_VECTOR (5 downto 0);
    data_4_val : IN STD_LOGIC_VECTOR (5 downto 0);
    data_5_val : IN STD_LOGIC_VECTOR (5 downto 0);
    data_6_val : IN STD_LOGIC_VECTOR (5 downto 0);
    data_7_val : IN STD_LOGIC_VECTOR (5 downto 0);
    data_8_val : IN STD_LOGIC_VECTOR (5 downto 0);
    data_9_val : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln46_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal w17_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal w17_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal do_init_reg_153 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_index3_reg_169 : STD_LOGIC_VECTOR (3 downto 0);
    signal data_0_val4_rewind_reg_184 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_1_val5_rewind_reg_198 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_2_val6_rewind_reg_212 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_3_val7_rewind_reg_226 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_4_val8_rewind_reg_240 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_5_val9_rewind_reg_254 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_6_val10_rewind_reg_268 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_7_val11_rewind_reg_282 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_8_val12_rewind_reg_296 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_9_val13_rewind_reg_310 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_reg_324 : STD_LOGIC_VECTOR (13 downto 0);
    signal w_index_fu_463_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal w_index_reg_598 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln46_reg_603 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_534_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_do_init_phi_fu_157_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_w_index3_phi_fu_173_p6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_data_0_val4_phi_phi_fu_342_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_1_val5_phi_phi_fu_354_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_2_val6_phi_phi_fu_366_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_3_val7_phi_phi_fu_378_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_4_val8_phi_phi_fu_390_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_5_val9_phi_phi_fu_402_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_6_val10_phi_phi_fu_414_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_7_val11_phi_phi_fu_426_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_8_val12_phi_phi_fu_438_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_9_val13_phi_phi_fu_450_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_data_0_val4_phi_reg_338 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_338 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_data_1_val5_phi_reg_350 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_350 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_data_2_val6_phi_reg_362 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_362 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_data_3_val7_phi_reg_374 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_374 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_data_4_val8_phi_reg_386 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_386 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_data_5_val9_phi_reg_398 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_data_5_val9_phi_reg_398 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_data_6_val10_phi_reg_410 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_data_6_val10_phi_reg_410 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_data_7_val11_phi_reg_422 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_data_7_val11_phi_reg_422 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_data_8_val12_phi_reg_434 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_data_8_val12_phi_reg_434 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_data_9_val13_phi_reg_446 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_data_9_val13_phi_reg_446 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln46_fu_458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w17_ce0_local : STD_LOGIC;
    signal a_fu_475_p21 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_fu_475_p23 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_534_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_534_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_condition_150 : BOOLEAN;
    signal ap_condition_37 : BOOLEAN;
    signal a_fu_475_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_475_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_475_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_475_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_475_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_475_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_475_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_475_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_475_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_475_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_sparsemux_21_4_6_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        din3 : IN STD_LOGIC_VECTOR (5 downto 0);
        din4 : IN STD_LOGIC_VECTOR (5 downto 0);
        din5 : IN STD_LOGIC_VECTOR (5 downto 0);
        din6 : IN STD_LOGIC_VECTOR (5 downto 0);
        din7 : IN STD_LOGIC_VECTOR (5 downto 0);
        din8 : IN STD_LOGIC_VECTOR (5 downto 0);
        din9 : IN STD_LOGIC_VECTOR (5 downto 0);
        def : IN STD_LOGIC_VECTOR (5 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component myproject_mac_muladd_6ns_5s_14s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s_w17_ROM_NPThq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;



begin
    w17_U : component myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_17_7_5_3_0_config17_s_w17_ROM_NPThq
    generic map (
        DataWidth => 5,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w17_address0,
        ce0 => w17_ce0_local,
        q0 => w17_q0);

    sparsemux_21_4_6_1_1_U657 : component myproject_sparsemux_21_4_6_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 6,
        CASE1 => "0001",
        din1_WIDTH => 6,
        CASE2 => "0010",
        din2_WIDTH => 6,
        CASE3 => "0011",
        din3_WIDTH => 6,
        CASE4 => "0100",
        din4_WIDTH => 6,
        CASE5 => "0101",
        din5_WIDTH => 6,
        CASE6 => "0110",
        din6_WIDTH => 6,
        CASE7 => "0111",
        din7_WIDTH => 6,
        CASE8 => "1000",
        din8_WIDTH => 6,
        CASE9 => "1001",
        din9_WIDTH => 6,
        def_WIDTH => 6,
        sel_WIDTH => 4,
        dout_WIDTH => 6)
    port map (
        din0 => ap_phi_mux_data_0_val4_phi_phi_fu_342_p4,
        din1 => ap_phi_mux_data_1_val5_phi_phi_fu_354_p4,
        din2 => ap_phi_mux_data_2_val6_phi_phi_fu_366_p4,
        din3 => ap_phi_mux_data_3_val7_phi_phi_fu_378_p4,
        din4 => ap_phi_mux_data_4_val8_phi_phi_fu_390_p4,
        din5 => ap_phi_mux_data_5_val9_phi_phi_fu_402_p4,
        din6 => ap_phi_mux_data_6_val10_phi_phi_fu_414_p4,
        din7 => ap_phi_mux_data_7_val11_phi_phi_fu_426_p4,
        din8 => ap_phi_mux_data_8_val12_phi_phi_fu_438_p4,
        din9 => ap_phi_mux_data_9_val13_phi_phi_fu_450_p4,
        def => a_fu_475_p21,
        sel => w_index3_reg_169,
        dout => a_fu_475_p23);

    mac_muladd_6ns_5s_14s_14_1_1_U658 : component myproject_mac_muladd_6ns_5s_14s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 5,
        din2_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_534_p0,
        din1 => w17_q0,
        din2 => empty_reg_324,
        dout => grp_fu_534_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv14_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_603 = ap_const_lv1_1))) then 
                    ap_return_preg <= grp_fu_534_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_157_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_338 <= data_0_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_338 <= ap_phi_reg_pp0_iter0_data_0_val4_phi_reg_338;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_157_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_350 <= data_1_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_350 <= ap_phi_reg_pp0_iter0_data_1_val5_phi_reg_350;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_157_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_362 <= data_2_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_362 <= ap_phi_reg_pp0_iter0_data_2_val6_phi_reg_362;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_157_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_374 <= data_3_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_374 <= ap_phi_reg_pp0_iter0_data_3_val7_phi_reg_374;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_157_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_386 <= data_4_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_386 <= ap_phi_reg_pp0_iter0_data_4_val8_phi_reg_386;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_5_val9_phi_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_157_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_5_val9_phi_reg_398 <= data_5_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_5_val9_phi_reg_398 <= ap_phi_reg_pp0_iter0_data_5_val9_phi_reg_398;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_6_val10_phi_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_157_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_6_val10_phi_reg_410 <= data_6_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_6_val10_phi_reg_410 <= ap_phi_reg_pp0_iter0_data_6_val10_phi_reg_410;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_7_val11_phi_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_157_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_7_val11_phi_reg_422 <= data_7_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_7_val11_phi_reg_422 <= ap_phi_reg_pp0_iter0_data_7_val11_phi_reg_422;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_8_val12_phi_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_157_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_8_val12_phi_reg_434 <= data_8_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_8_val12_phi_reg_434 <= ap_phi_reg_pp0_iter0_data_8_val12_phi_reg_434;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_9_val13_phi_reg_446_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_157_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_9_val13_phi_reg_446 <= data_9_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_9_val13_phi_reg_446 <= ap_phi_reg_pp0_iter0_data_9_val13_phi_reg_446;
                end if;
            end if; 
        end if;
    end process;

    do_init_reg_153_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_603 = ap_const_lv1_0))) then 
                do_init_reg_153 <= ap_const_lv1_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_603 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_153 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    empty_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_603 = ap_const_lv1_0))) then 
                empty_reg_324 <= grp_fu_534_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_603 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                empty_reg_324 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    w_index3_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_603 = ap_const_lv1_0))) then 
                w_index3_reg_169 <= w_index_reg_598;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_603 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                w_index3_reg_169 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_603 = ap_const_lv1_0))) then
                data_0_val4_rewind_reg_184 <= ap_phi_mux_data_0_val4_phi_phi_fu_342_p4;
                data_1_val5_rewind_reg_198 <= ap_phi_mux_data_1_val5_phi_phi_fu_354_p4;
                data_2_val6_rewind_reg_212 <= ap_phi_mux_data_2_val6_phi_phi_fu_366_p4;
                data_3_val7_rewind_reg_226 <= ap_phi_mux_data_3_val7_phi_phi_fu_378_p4;
                data_4_val8_rewind_reg_240 <= ap_phi_mux_data_4_val8_phi_phi_fu_390_p4;
                data_5_val9_rewind_reg_254 <= ap_phi_mux_data_5_val9_phi_phi_fu_402_p4;
                data_6_val10_rewind_reg_268 <= ap_phi_mux_data_6_val10_phi_phi_fu_414_p4;
                data_7_val11_rewind_reg_282 <= ap_phi_mux_data_7_val11_phi_phi_fu_426_p4;
                data_8_val12_rewind_reg_296 <= ap_phi_mux_data_8_val12_phi_phi_fu_438_p4;
                data_9_val13_rewind_reg_310 <= ap_phi_mux_data_9_val13_phi_phi_fu_450_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln46_reg_603 <= icmp_ln46_fu_469_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                w_index_reg_598 <= w_index_fu_463_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    a_fu_475_p21 <= "XXXXXX";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_150_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_150 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_37_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_37 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln46_reg_603, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_603 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_data_0_val4_phi_phi_fu_342_p4_assign_proc : process(do_init_reg_153, data_0_val4_rewind_reg_184, ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_338)
    begin
        if ((do_init_reg_153 = ap_const_lv1_0)) then 
            ap_phi_mux_data_0_val4_phi_phi_fu_342_p4 <= data_0_val4_rewind_reg_184;
        else 
            ap_phi_mux_data_0_val4_phi_phi_fu_342_p4 <= ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_338;
        end if; 
    end process;


    ap_phi_mux_data_1_val5_phi_phi_fu_354_p4_assign_proc : process(do_init_reg_153, data_1_val5_rewind_reg_198, ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_350)
    begin
        if ((do_init_reg_153 = ap_const_lv1_0)) then 
            ap_phi_mux_data_1_val5_phi_phi_fu_354_p4 <= data_1_val5_rewind_reg_198;
        else 
            ap_phi_mux_data_1_val5_phi_phi_fu_354_p4 <= ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_350;
        end if; 
    end process;


    ap_phi_mux_data_2_val6_phi_phi_fu_366_p4_assign_proc : process(do_init_reg_153, data_2_val6_rewind_reg_212, ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_362)
    begin
        if ((do_init_reg_153 = ap_const_lv1_0)) then 
            ap_phi_mux_data_2_val6_phi_phi_fu_366_p4 <= data_2_val6_rewind_reg_212;
        else 
            ap_phi_mux_data_2_val6_phi_phi_fu_366_p4 <= ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_362;
        end if; 
    end process;


    ap_phi_mux_data_3_val7_phi_phi_fu_378_p4_assign_proc : process(do_init_reg_153, data_3_val7_rewind_reg_226, ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_374)
    begin
        if ((do_init_reg_153 = ap_const_lv1_0)) then 
            ap_phi_mux_data_3_val7_phi_phi_fu_378_p4 <= data_3_val7_rewind_reg_226;
        else 
            ap_phi_mux_data_3_val7_phi_phi_fu_378_p4 <= ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_374;
        end if; 
    end process;


    ap_phi_mux_data_4_val8_phi_phi_fu_390_p4_assign_proc : process(do_init_reg_153, data_4_val8_rewind_reg_240, ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_386)
    begin
        if ((do_init_reg_153 = ap_const_lv1_0)) then 
            ap_phi_mux_data_4_val8_phi_phi_fu_390_p4 <= data_4_val8_rewind_reg_240;
        else 
            ap_phi_mux_data_4_val8_phi_phi_fu_390_p4 <= ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_386;
        end if; 
    end process;


    ap_phi_mux_data_5_val9_phi_phi_fu_402_p4_assign_proc : process(do_init_reg_153, data_5_val9_rewind_reg_254, ap_phi_reg_pp0_iter1_data_5_val9_phi_reg_398)
    begin
        if ((do_init_reg_153 = ap_const_lv1_0)) then 
            ap_phi_mux_data_5_val9_phi_phi_fu_402_p4 <= data_5_val9_rewind_reg_254;
        else 
            ap_phi_mux_data_5_val9_phi_phi_fu_402_p4 <= ap_phi_reg_pp0_iter1_data_5_val9_phi_reg_398;
        end if; 
    end process;


    ap_phi_mux_data_6_val10_phi_phi_fu_414_p4_assign_proc : process(do_init_reg_153, data_6_val10_rewind_reg_268, ap_phi_reg_pp0_iter1_data_6_val10_phi_reg_410)
    begin
        if ((do_init_reg_153 = ap_const_lv1_0)) then 
            ap_phi_mux_data_6_val10_phi_phi_fu_414_p4 <= data_6_val10_rewind_reg_268;
        else 
            ap_phi_mux_data_6_val10_phi_phi_fu_414_p4 <= ap_phi_reg_pp0_iter1_data_6_val10_phi_reg_410;
        end if; 
    end process;


    ap_phi_mux_data_7_val11_phi_phi_fu_426_p4_assign_proc : process(do_init_reg_153, data_7_val11_rewind_reg_282, ap_phi_reg_pp0_iter1_data_7_val11_phi_reg_422)
    begin
        if ((do_init_reg_153 = ap_const_lv1_0)) then 
            ap_phi_mux_data_7_val11_phi_phi_fu_426_p4 <= data_7_val11_rewind_reg_282;
        else 
            ap_phi_mux_data_7_val11_phi_phi_fu_426_p4 <= ap_phi_reg_pp0_iter1_data_7_val11_phi_reg_422;
        end if; 
    end process;


    ap_phi_mux_data_8_val12_phi_phi_fu_438_p4_assign_proc : process(do_init_reg_153, data_8_val12_rewind_reg_296, ap_phi_reg_pp0_iter1_data_8_val12_phi_reg_434)
    begin
        if ((do_init_reg_153 = ap_const_lv1_0)) then 
            ap_phi_mux_data_8_val12_phi_phi_fu_438_p4 <= data_8_val12_rewind_reg_296;
        else 
            ap_phi_mux_data_8_val12_phi_phi_fu_438_p4 <= ap_phi_reg_pp0_iter1_data_8_val12_phi_reg_434;
        end if; 
    end process;


    ap_phi_mux_data_9_val13_phi_phi_fu_450_p4_assign_proc : process(do_init_reg_153, data_9_val13_rewind_reg_310, ap_phi_reg_pp0_iter1_data_9_val13_phi_reg_446)
    begin
        if ((do_init_reg_153 = ap_const_lv1_0)) then 
            ap_phi_mux_data_9_val13_phi_phi_fu_450_p4 <= data_9_val13_rewind_reg_310;
        else 
            ap_phi_mux_data_9_val13_phi_phi_fu_450_p4 <= ap_phi_reg_pp0_iter1_data_9_val13_phi_reg_446;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_157_p6_assign_proc : process(do_init_reg_153, icmp_ln46_reg_603, ap_condition_150)
    begin
        if ((ap_const_boolean_1 = ap_condition_150)) then
            if ((icmp_ln46_reg_603 = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_157_p6 <= ap_const_lv1_1;
            elsif ((icmp_ln46_reg_603 = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_157_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_157_p6 <= do_init_reg_153;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_157_p6 <= do_init_reg_153;
        end if; 
    end process;


    ap_phi_mux_w_index3_phi_fu_173_p6_assign_proc : process(w_index3_reg_169, w_index_reg_598, icmp_ln46_reg_603, ap_condition_150)
    begin
        if ((ap_const_boolean_1 = ap_condition_150)) then
            if ((icmp_ln46_reg_603 = ap_const_lv1_1)) then 
                ap_phi_mux_w_index3_phi_fu_173_p6 <= ap_const_lv4_0;
            elsif ((icmp_ln46_reg_603 = ap_const_lv1_0)) then 
                ap_phi_mux_w_index3_phi_fu_173_p6 <= w_index_reg_598;
            else 
                ap_phi_mux_w_index3_phi_fu_173_p6 <= w_index3_reg_169;
            end if;
        else 
            ap_phi_mux_w_index3_phi_fu_173_p6 <= w_index3_reg_169;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_data_0_val4_phi_reg_338 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_data_1_val5_phi_reg_350 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_data_2_val6_phi_reg_362 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_data_3_val7_phi_reg_374 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_data_4_val8_phi_reg_386 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_data_5_val9_phi_reg_398 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_data_6_val10_phi_reg_410 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_data_7_val11_phi_reg_422 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_data_8_val12_phi_reg_434 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_data_9_val13_phi_reg_446 <= "XXXXXX";

    ap_ready_assign_proc : process(icmp_ln46_fu_469_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln46_fu_469_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln46_reg_603, grp_fu_534_p3, ap_enable_reg_pp0_iter1, ap_return_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_603 = ap_const_lv1_1))) then 
            ap_return <= grp_fu_534_p3;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    grp_fu_534_p0 <= grp_fu_534_p00(6 - 1 downto 0);
    grp_fu_534_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_fu_475_p23),11));
    icmp_ln46_fu_469_p2 <= "1" when (ap_phi_mux_w_index3_phi_fu_173_p6 = ap_const_lv4_9) else "0";
    w17_address0 <= zext_ln46_fu_458_p1(4 - 1 downto 0);

    w17_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w17_ce0_local <= ap_const_logic_1;
        else 
            w17_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_463_p2 <= std_logic_vector(unsigned(ap_phi_mux_w_index3_phi_fu_173_p6) + unsigned(ap_const_lv4_1));
    zext_ln46_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index3_phi_fu_173_p6),64));
end behav;
