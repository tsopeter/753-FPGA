-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_27_13_5_3_0_config20_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (26 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (26 downto 0) );
end;


architecture behav of myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_27_13_5_3_0_config20_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln135_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal outidx_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal outidx_1_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal w20_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal w20_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal do_init_reg_194 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_index19_reg_210 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_0_val23_rewind_reg_224 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_1_val24_rewind_reg_238 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_2_val25_rewind_reg_252 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_3_val26_rewind_reg_266 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_4_val27_rewind_reg_280 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_5_val28_rewind_reg_294 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_6_val29_rewind_reg_308 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_7_val30_rewind_reg_322 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_8_val31_rewind_reg_336 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_9_val32_rewind_reg_350 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_index_520_reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc17_reg_378 : STD_LOGIC_VECTOR (26 downto 0);
    signal acc_3715_reg_392 : STD_LOGIC_VECTOR (26 downto 0);
    signal acc_3813_reg_406 : STD_LOGIC_VECTOR (26 downto 0);
    signal acc_3911_reg_420 : STD_LOGIC_VECTOR (26 downto 0);
    signal acc_4010_reg_434 : STD_LOGIC_VECTOR (26 downto 0);
    signal w_index_fu_574_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_index_reg_918 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln135_reg_923 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_29_fu_754_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal acc_28_fu_762_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal acc_27_fu_770_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal acc_26_fu_778_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal acc_fu_786_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal in_index_4_fu_806_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_do_init_phi_fu_198_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_w_index19_phi_fu_214_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_data_0_val23_phi_phi_fu_452_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_1_val24_phi_phi_fu_464_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_2_val25_phi_phi_fu_476_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_3_val26_phi_phi_fu_488_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_4_val27_phi_phi_fu_500_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_5_val28_phi_phi_fu_512_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_6_val29_phi_phi_fu_524_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_7_val30_phi_phi_fu_536_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_8_val31_phi_phi_fu_548_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_9_val32_phi_phi_fu_560_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_448 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_448 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_460 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_460 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_472 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_472 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_484 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_484 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_496 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_496 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_508 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_508 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_520 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_520 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_532 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_532 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_544 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_544 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_556 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_556 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln135_fu_568_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal outidx_1_ce0_local : STD_LOGIC;
    signal w20_ce0_local : STD_LOGIC;
    signal a_fu_590_p21 : STD_LOGIC_VECTOR (15 downto 0);
    signal a_fu_590_p22 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_590_p23 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_646_p11 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_fu_646_p13 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_848_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln144_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_6_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_4_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_5_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_1_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_3_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_2_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_3_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_4_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln144_5_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_30_fu_731_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal acc_31_fu_739_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal in_index_fu_794_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln154_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_184 : BOOLEAN;
    signal ap_condition_37 : BOOLEAN;
    signal a_fu_590_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_590_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_590_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_590_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_590_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_590_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_590_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_590_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_590_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_fu_590_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_646_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_646_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_646_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_646_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_646_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_sparsemux_21_4_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        din5 : IN STD_LOGIC_VECTOR (15 downto 0);
        din6 : IN STD_LOGIC_VECTOR (15 downto 0);
        din7 : IN STD_LOGIC_VECTOR (15 downto 0);
        din8 : IN STD_LOGIC_VECTOR (15 downto 0);
        din9 : IN STD_LOGIC_VECTOR (15 downto 0);
        def : IN STD_LOGIC_VECTOR (15 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_sparsemux_11_3_27_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (2 downto 0);
        din4_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (26 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        din2 : IN STD_LOGIC_VECTOR (26 downto 0);
        din3 : IN STD_LOGIC_VECTOR (26 downto 0);
        din4 : IN STD_LOGIC_VECTOR (26 downto 0);
        def : IN STD_LOGIC_VECTOR (26 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component myproject_mac_muladd_16s_5s_27s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (26 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_27_13_5_3_0_config20_s_outidx7jG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_27_13_5_3_0_config20_s_w20_RO8jQ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;



begin
    outidx_1_U : component myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_27_13_5_3_0_config20_s_outidx7jG
    generic map (
        DataWidth => 3,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outidx_1_address0,
        ce0 => outidx_1_ce0_local,
        q0 => outidx_1_q0);

    w20_U : component myproject_dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_27_13_5_3_0_config20_s_w20_RO8jQ
    generic map (
        DataWidth => 5,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w20_address0,
        ce0 => w20_ce0_local,
        q0 => w20_q0);

    sparsemux_21_4_16_1_1_U681 : component myproject_sparsemux_21_4_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 16,
        CASE1 => "0001",
        din1_WIDTH => 16,
        CASE2 => "0010",
        din2_WIDTH => 16,
        CASE3 => "0011",
        din3_WIDTH => 16,
        CASE4 => "0100",
        din4_WIDTH => 16,
        CASE5 => "0101",
        din5_WIDTH => 16,
        CASE6 => "0110",
        din6_WIDTH => 16,
        CASE7 => "0111",
        din7_WIDTH => 16,
        CASE8 => "1000",
        din8_WIDTH => 16,
        CASE9 => "1001",
        din9_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => ap_phi_mux_data_0_val23_phi_phi_fu_452_p4,
        din1 => ap_phi_mux_data_1_val24_phi_phi_fu_464_p4,
        din2 => ap_phi_mux_data_2_val25_phi_phi_fu_476_p4,
        din3 => ap_phi_mux_data_3_val26_phi_phi_fu_488_p4,
        din4 => ap_phi_mux_data_4_val27_phi_phi_fu_500_p4,
        din5 => ap_phi_mux_data_5_val28_phi_phi_fu_512_p4,
        din6 => ap_phi_mux_data_6_val29_phi_phi_fu_524_p4,
        din7 => ap_phi_mux_data_7_val30_phi_phi_fu_536_p4,
        din8 => ap_phi_mux_data_8_val31_phi_phi_fu_548_p4,
        din9 => ap_phi_mux_data_9_val32_phi_phi_fu_560_p4,
        def => a_fu_590_p21,
        sel => a_fu_590_p22,
        dout => a_fu_590_p23);

    sparsemux_11_3_27_1_1_U682 : component myproject_sparsemux_11_3_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 27,
        CASE1 => "001",
        din1_WIDTH => 27,
        CASE2 => "010",
        din2_WIDTH => 27,
        CASE3 => "011",
        din3_WIDTH => 27,
        CASE4 => "100",
        din4_WIDTH => 27,
        def_WIDTH => 27,
        sel_WIDTH => 3,
        dout_WIDTH => 27)
    port map (
        din0 => acc17_reg_378,
        din1 => acc_3715_reg_392,
        din2 => acc_3813_reg_406,
        din3 => acc_3911_reg_420,
        din4 => acc_4010_reg_434,
        def => tmp_fu_646_p11,
        sel => outidx_1_q0,
        dout => tmp_fu_646_p13);

    mac_muladd_16s_5s_27s_28_1_1_U683 : component myproject_mac_muladd_16s_5s_27s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 5,
        din2_WIDTH => 27,
        dout_WIDTH => 28)
    port map (
        din0 => a_fu_590_p23,
        din1 => w20_q0,
        din2 => tmp_fu_646_p13,
        dout => grp_fu_848_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv27_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1))) then 
                    ap_return_0_preg <= acc_fu_786_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv27_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1))) then 
                    ap_return_1_preg <= acc_26_fu_778_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv27_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1))) then 
                    ap_return_2_preg <= acc_27_fu_770_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv27_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1))) then 
                    ap_return_3_preg <= acc_28_fu_762_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg <= ap_const_lv27_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1))) then 
                    ap_return_4_preg <= acc_29_fu_754_p3;
                end if; 
            end if;
        end if;
    end process;


    acc17_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_0))) then 
                acc17_reg_378 <= acc_fu_786_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc17_reg_378 <= ap_const_lv27_0;
            end if; 
        end if;
    end process;

    acc_3715_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_0))) then 
                acc_3715_reg_392 <= acc_26_fu_778_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_3715_reg_392 <= ap_const_lv27_0;
            end if; 
        end if;
    end process;

    acc_3813_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_0))) then 
                acc_3813_reg_406 <= acc_27_fu_770_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_3813_reg_406 <= ap_const_lv27_0;
            end if; 
        end if;
    end process;

    acc_3911_reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_0))) then 
                acc_3911_reg_420 <= acc_28_fu_762_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_3911_reg_420 <= ap_const_lv27_0;
            end if; 
        end if;
    end process;

    acc_4010_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_0))) then 
                acc_4010_reg_434 <= acc_29_fu_754_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_4010_reg_434 <= ap_const_lv27_0;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_198_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_448 <= data_0_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_448 <= ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_448;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_198_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_460 <= data_1_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_460 <= ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_460;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_198_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_472 <= data_2_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_472 <= ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_472;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_198_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_484 <= data_3_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_484 <= ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_484;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_198_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_496 <= data_4_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_496 <= ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_496;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_198_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_508 <= data_5_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_508 <= ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_508;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_198_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_520 <= data_6_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_520 <= ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_520;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_198_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_532 <= data_7_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_532 <= ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_532;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_198_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_544 <= data_8_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_544 <= ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_544;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_556_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_37)) then
                if ((ap_phi_mux_do_init_phi_fu_198_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_556 <= data_9_val;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_556 <= ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_556;
                end if;
            end if; 
        end if;
    end process;

    do_init_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_0))) then 
                do_init_reg_194 <= ap_const_lv1_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_194 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    in_index_520_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_0))) then 
                in_index_520_reg_364 <= in_index_4_fu_806_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                in_index_520_reg_364 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    w_index19_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_0))) then 
                w_index19_reg_210 <= w_index_reg_918;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                w_index19_reg_210 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_0))) then
                data_0_val23_rewind_reg_224 <= ap_phi_mux_data_0_val23_phi_phi_fu_452_p4;
                data_1_val24_rewind_reg_238 <= ap_phi_mux_data_1_val24_phi_phi_fu_464_p4;
                data_2_val25_rewind_reg_252 <= ap_phi_mux_data_2_val25_phi_phi_fu_476_p4;
                data_3_val26_rewind_reg_266 <= ap_phi_mux_data_3_val26_phi_phi_fu_488_p4;
                data_4_val27_rewind_reg_280 <= ap_phi_mux_data_4_val27_phi_phi_fu_500_p4;
                data_5_val28_rewind_reg_294 <= ap_phi_mux_data_5_val28_phi_phi_fu_512_p4;
                data_6_val29_rewind_reg_308 <= ap_phi_mux_data_6_val29_phi_phi_fu_524_p4;
                data_7_val30_rewind_reg_322 <= ap_phi_mux_data_7_val30_phi_phi_fu_536_p4;
                data_8_val31_rewind_reg_336 <= ap_phi_mux_data_8_val31_phi_phi_fu_548_p4;
                data_9_val32_rewind_reg_350 <= ap_phi_mux_data_9_val32_phi_phi_fu_560_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln135_reg_923 <= icmp_ln135_fu_580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                w_index_reg_918 <= w_index_fu_574_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    a_fu_590_p21 <= "XXXXXXXXXXXXXXXX";
    a_fu_590_p22 <= in_index_520_reg_364(4 - 1 downto 0);
    acc_26_fu_778_p3 <= 
        acc_31_fu_739_p1 when (icmp_ln144_3_fu_684_p2(0) = '1') else 
        acc_3715_reg_392;
    acc_27_fu_770_p3 <= 
        acc_31_fu_739_p1 when (icmp_ln144_4_fu_690_p2(0) = '1') else 
        acc_3813_reg_406;
    acc_28_fu_762_p3 <= 
        acc_31_fu_739_p1 when (icmp_ln144_5_fu_696_p2(0) = '1') else 
        acc_3911_reg_420;
    acc_29_fu_754_p3 <= 
        acc_30_fu_731_p3 when (or_ln144_5_fu_748_p2(0) = '1') else 
        acc_31_fu_739_p1;
    acc_30_fu_731_p3 <= 
        acc_4010_reg_434 when (or_ln144_3_fu_725_p2(0) = '1') else 
        ap_const_lv27_0;
    acc_31_fu_739_p1 <= grp_fu_848_p3(27 - 1 downto 0);
    acc_fu_786_p3 <= 
        acc_31_fu_739_p1 when (icmp_ln144_fu_678_p2(0) = '1') else 
        acc17_reg_378;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_184_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_184 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_37_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_37 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_923, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_data_0_val23_phi_phi_fu_452_p4_assign_proc : process(do_init_reg_194, data_0_val23_rewind_reg_224, ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_448)
    begin
        if ((do_init_reg_194 = ap_const_lv1_0)) then 
            ap_phi_mux_data_0_val23_phi_phi_fu_452_p4 <= data_0_val23_rewind_reg_224;
        else 
            ap_phi_mux_data_0_val23_phi_phi_fu_452_p4 <= ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_448;
        end if; 
    end process;


    ap_phi_mux_data_1_val24_phi_phi_fu_464_p4_assign_proc : process(do_init_reg_194, data_1_val24_rewind_reg_238, ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_460)
    begin
        if ((do_init_reg_194 = ap_const_lv1_0)) then 
            ap_phi_mux_data_1_val24_phi_phi_fu_464_p4 <= data_1_val24_rewind_reg_238;
        else 
            ap_phi_mux_data_1_val24_phi_phi_fu_464_p4 <= ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_460;
        end if; 
    end process;


    ap_phi_mux_data_2_val25_phi_phi_fu_476_p4_assign_proc : process(do_init_reg_194, data_2_val25_rewind_reg_252, ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_472)
    begin
        if ((do_init_reg_194 = ap_const_lv1_0)) then 
            ap_phi_mux_data_2_val25_phi_phi_fu_476_p4 <= data_2_val25_rewind_reg_252;
        else 
            ap_phi_mux_data_2_val25_phi_phi_fu_476_p4 <= ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_472;
        end if; 
    end process;


    ap_phi_mux_data_3_val26_phi_phi_fu_488_p4_assign_proc : process(do_init_reg_194, data_3_val26_rewind_reg_266, ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_484)
    begin
        if ((do_init_reg_194 = ap_const_lv1_0)) then 
            ap_phi_mux_data_3_val26_phi_phi_fu_488_p4 <= data_3_val26_rewind_reg_266;
        else 
            ap_phi_mux_data_3_val26_phi_phi_fu_488_p4 <= ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_484;
        end if; 
    end process;


    ap_phi_mux_data_4_val27_phi_phi_fu_500_p4_assign_proc : process(do_init_reg_194, data_4_val27_rewind_reg_280, ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_496)
    begin
        if ((do_init_reg_194 = ap_const_lv1_0)) then 
            ap_phi_mux_data_4_val27_phi_phi_fu_500_p4 <= data_4_val27_rewind_reg_280;
        else 
            ap_phi_mux_data_4_val27_phi_phi_fu_500_p4 <= ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_496;
        end if; 
    end process;


    ap_phi_mux_data_5_val28_phi_phi_fu_512_p4_assign_proc : process(do_init_reg_194, data_5_val28_rewind_reg_294, ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_508)
    begin
        if ((do_init_reg_194 = ap_const_lv1_0)) then 
            ap_phi_mux_data_5_val28_phi_phi_fu_512_p4 <= data_5_val28_rewind_reg_294;
        else 
            ap_phi_mux_data_5_val28_phi_phi_fu_512_p4 <= ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_508;
        end if; 
    end process;


    ap_phi_mux_data_6_val29_phi_phi_fu_524_p4_assign_proc : process(do_init_reg_194, data_6_val29_rewind_reg_308, ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_520)
    begin
        if ((do_init_reg_194 = ap_const_lv1_0)) then 
            ap_phi_mux_data_6_val29_phi_phi_fu_524_p4 <= data_6_val29_rewind_reg_308;
        else 
            ap_phi_mux_data_6_val29_phi_phi_fu_524_p4 <= ap_phi_reg_pp0_iter1_data_6_val29_phi_reg_520;
        end if; 
    end process;


    ap_phi_mux_data_7_val30_phi_phi_fu_536_p4_assign_proc : process(do_init_reg_194, data_7_val30_rewind_reg_322, ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_532)
    begin
        if ((do_init_reg_194 = ap_const_lv1_0)) then 
            ap_phi_mux_data_7_val30_phi_phi_fu_536_p4 <= data_7_val30_rewind_reg_322;
        else 
            ap_phi_mux_data_7_val30_phi_phi_fu_536_p4 <= ap_phi_reg_pp0_iter1_data_7_val30_phi_reg_532;
        end if; 
    end process;


    ap_phi_mux_data_8_val31_phi_phi_fu_548_p4_assign_proc : process(do_init_reg_194, data_8_val31_rewind_reg_336, ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_544)
    begin
        if ((do_init_reg_194 = ap_const_lv1_0)) then 
            ap_phi_mux_data_8_val31_phi_phi_fu_548_p4 <= data_8_val31_rewind_reg_336;
        else 
            ap_phi_mux_data_8_val31_phi_phi_fu_548_p4 <= ap_phi_reg_pp0_iter1_data_8_val31_phi_reg_544;
        end if; 
    end process;


    ap_phi_mux_data_9_val32_phi_phi_fu_560_p4_assign_proc : process(do_init_reg_194, data_9_val32_rewind_reg_350, ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_556)
    begin
        if ((do_init_reg_194 = ap_const_lv1_0)) then 
            ap_phi_mux_data_9_val32_phi_phi_fu_560_p4 <= data_9_val32_rewind_reg_350;
        else 
            ap_phi_mux_data_9_val32_phi_phi_fu_560_p4 <= ap_phi_reg_pp0_iter1_data_9_val32_phi_reg_556;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_198_p6_assign_proc : process(do_init_reg_194, icmp_ln135_reg_923, ap_condition_184)
    begin
        if ((ap_const_boolean_1 = ap_condition_184)) then
            if ((icmp_ln135_reg_923 = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_198_p6 <= ap_const_lv1_1;
            elsif ((icmp_ln135_reg_923 = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_198_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_198_p6 <= do_init_reg_194;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_198_p6 <= do_init_reg_194;
        end if; 
    end process;


    ap_phi_mux_w_index19_phi_fu_214_p6_assign_proc : process(w_index19_reg_210, w_index_reg_918, icmp_ln135_reg_923, ap_condition_184)
    begin
        if ((ap_const_boolean_1 = ap_condition_184)) then
            if ((icmp_ln135_reg_923 = ap_const_lv1_1)) then 
                ap_phi_mux_w_index19_phi_fu_214_p6 <= ap_const_lv6_0;
            elsif ((icmp_ln135_reg_923 = ap_const_lv1_0)) then 
                ap_phi_mux_w_index19_phi_fu_214_p6 <= w_index_reg_918;
            else 
                ap_phi_mux_w_index19_phi_fu_214_p6 <= w_index19_reg_210;
            end if;
        else 
            ap_phi_mux_w_index19_phi_fu_214_p6 <= w_index19_reg_210;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_448 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_460 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_472 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_484 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_496 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_508 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_6_val29_phi_reg_520 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_7_val30_phi_reg_532 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_8_val31_phi_reg_544 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_data_9_val32_phi_reg_556 <= "XXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(icmp_ln135_fu_580_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln135_fu_580_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_923, ap_enable_reg_pp0_iter1, acc_fu_786_p3, ap_return_0_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1))) then 
            ap_return_0 <= acc_fu_786_p3;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_923, ap_enable_reg_pp0_iter1, acc_26_fu_778_p3, ap_return_1_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1))) then 
            ap_return_1 <= acc_26_fu_778_p3;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_923, ap_enable_reg_pp0_iter1, acc_27_fu_770_p3, ap_return_2_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1))) then 
            ap_return_2 <= acc_27_fu_770_p3;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_923, ap_enable_reg_pp0_iter1, acc_28_fu_762_p3, ap_return_3_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1))) then 
            ap_return_3 <= acc_28_fu_762_p3;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln135_reg_923, acc_29_fu_754_p3, ap_enable_reg_pp0_iter1, ap_return_4_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln135_reg_923 = ap_const_lv1_1))) then 
            ap_return_4 <= acc_29_fu_754_p3;
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;

    icmp_ln135_fu_580_p2 <= "1" when (ap_phi_mux_w_index19_phi_fu_214_p6 = ap_const_lv6_31) else "0";
    icmp_ln144_3_fu_684_p2 <= "1" when (outidx_1_q0 = ap_const_lv3_1) else "0";
    icmp_ln144_4_fu_690_p2 <= "1" when (outidx_1_q0 = ap_const_lv3_2) else "0";
    icmp_ln144_5_fu_696_p2 <= "1" when (outidx_1_q0 = ap_const_lv3_3) else "0";
    icmp_ln144_6_fu_702_p2 <= "0" when (grp_fu_848_p3 = ap_const_lv28_0) else "1";
    icmp_ln144_fu_678_p2 <= "1" when (outidx_1_q0 = ap_const_lv3_0) else "0";
    icmp_ln154_fu_800_p2 <= "1" when (signed(in_index_fu_794_p2) > signed(ap_const_lv32_9)) else "0";
    in_index_4_fu_806_p3 <= 
        ap_const_lv32_0 when (icmp_ln154_fu_800_p2(0) = '1') else 
        in_index_fu_794_p2;
    in_index_fu_794_p2 <= std_logic_vector(unsigned(in_index_520_reg_364) + unsigned(ap_const_lv32_1));
    or_ln144_1_fu_713_p2 <= (icmp_ln144_5_fu_696_p2 or icmp_ln144_4_fu_690_p2);
    or_ln144_2_fu_719_p2 <= (or_ln144_1_fu_713_p2 or icmp_ln144_3_fu_684_p2);
    or_ln144_3_fu_725_p2 <= (or_ln144_fu_707_p2 or or_ln144_2_fu_719_p2);
    or_ln144_4_fu_742_p2 <= (icmp_ln144_fu_678_p2 or icmp_ln144_3_fu_684_p2);
    or_ln144_5_fu_748_p2 <= (or_ln144_4_fu_742_p2 or or_ln144_1_fu_713_p2);
    or_ln144_fu_707_p2 <= (icmp_ln144_fu_678_p2 or icmp_ln144_6_fu_702_p2);
    outidx_1_address0 <= zext_ln135_fu_568_p1(6 - 1 downto 0);

    outidx_1_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            outidx_1_ce0_local <= ap_const_logic_1;
        else 
            outidx_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_646_p11 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
    w20_address0 <= zext_ln135_fu_568_p1(6 - 1 downto 0);

    w20_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w20_ce0_local <= ap_const_logic_1;
        else 
            w20_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_574_p2 <= std_logic_vector(unsigned(ap_phi_mux_w_index19_phi_fu_214_p6) + unsigned(ap_const_lv6_1));
    zext_ln135_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index19_phi_fu_214_p6),64));
end behav;
