// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_16_6_5_3_0_config18_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] data_0_val;
input  [5:0] data_1_val;
input  [5:0] data_2_val;
input  [5:0] data_3_val;
input  [5:0] data_4_val;
input  [5:0] data_5_val;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln135_fu_426_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] outidx_92_address0;
wire   [2:0] outidx_92_q0;
wire   [4:0] w18_address0;
wire  signed [5:0] w18_q0;
reg   [0:0] do_init_reg_144;
reg   [4:0] w_index19_reg_160;
reg   [5:0] data_0_val23_rewind_reg_174;
reg   [5:0] data_1_val24_rewind_reg_188;
reg   [5:0] data_2_val25_rewind_reg_202;
reg   [5:0] data_3_val26_rewind_reg_216;
reg   [5:0] data_4_val27_rewind_reg_230;
reg   [5:0] data_5_val28_rewind_reg_244;
reg   [31:0] in_index20_reg_258;
reg   [15:0] acc17_reg_272;
reg   [15:0] acc_715_reg_286;
reg   [15:0] acc_813_reg_300;
reg   [15:0] acc_911_reg_314;
reg   [15:0] acc_1010_reg_328;
wire   [4:0] w_index_fu_420_p2;
reg   [4:0] w_index_reg_728;
reg   [0:0] icmp_ln135_reg_733;
wire   [15:0] acc_9_fu_584_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [15:0] acc_8_fu_592_p3;
wire   [15:0] acc_7_fu_600_p3;
wire   [15:0] acc_6_fu_608_p3;
wire   [15:0] acc_fu_616_p3;
wire   [31:0] in_index_fu_636_p3;
wire    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_do_init_phi_fu_148_p6;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_w_index19_phi_fu_164_p6;
reg   [5:0] ap_phi_mux_data_0_val23_phi_phi_fu_346_p4;
reg   [5:0] ap_phi_mux_data_1_val24_phi_phi_fu_358_p4;
reg   [5:0] ap_phi_mux_data_2_val25_phi_phi_fu_370_p4;
reg   [5:0] ap_phi_mux_data_3_val26_phi_phi_fu_382_p4;
reg   [5:0] ap_phi_mux_data_4_val27_phi_phi_fu_394_p4;
reg   [5:0] ap_phi_mux_data_5_val28_phi_phi_fu_406_p4;
wire   [5:0] ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_342;
reg   [5:0] ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_342;
wire   [5:0] ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_354;
reg   [5:0] ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_354;
wire   [5:0] ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_366;
reg   [5:0] ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_366;
wire   [5:0] ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_378;
reg   [5:0] ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_378;
wire   [5:0] ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_390;
reg   [5:0] ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_390;
wire   [5:0] ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_402;
reg   [5:0] ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_402;
wire   [63:0] zext_ln135_fu_414_p1;
reg    outidx_92_ce0_local;
reg    w18_ce0_local;
wire   [5:0] a_fu_436_p13;
wire   [2:0] a_fu_436_p14;
wire   [5:0] a_fu_436_p15;
wire   [15:0] tmp_fu_476_p11;
wire  signed [15:0] tmp_fu_476_p13;
wire  signed [16:0] grp_fu_678_p3;
wire   [0:0] icmp_ln144_fu_508_p2;
wire   [0:0] icmp_ln144_4_fu_532_p2;
wire   [0:0] icmp_ln144_2_fu_520_p2;
wire   [0:0] icmp_ln144_3_fu_526_p2;
wire   [0:0] or_ln144_1_fu_543_p2;
wire   [0:0] icmp_ln144_1_fu_514_p2;
wire   [0:0] or_ln144_2_fu_549_p2;
wire   [0:0] or_ln144_fu_537_p2;
wire   [0:0] or_ln144_3_fu_555_p2;
wire   [0:0] or_ln144_4_fu_572_p2;
wire   [0:0] or_ln144_5_fu_578_p2;
wire   [15:0] acc_10_fu_561_p3;
wire   [15:0] acc_11_fu_569_p1;
wire   [31:0] in_index_2_fu_624_p2;
wire   [0:0] icmp_ln154_fu_630_p2;
wire   [5:0] grp_fu_678_p1;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [15:0] ap_return_3_preg;
reg   [15:0] ap_return_4_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [11:0] grp_fu_678_p10;
reg    ap_condition_156;
reg    ap_condition_37;
wire   [2:0] a_fu_436_p1;
wire   [2:0] a_fu_436_p3;
wire   [2:0] a_fu_436_p5;
wire   [2:0] a_fu_436_p7;
wire  signed [2:0] a_fu_436_p9;
wire  signed [2:0] a_fu_436_p11;
wire   [2:0] tmp_fu_476_p1;
wire   [2:0] tmp_fu_476_p3;
wire   [2:0] tmp_fu_476_p5;
wire   [2:0] tmp_fu_476_p7;
wire  signed [2:0] tmp_fu_476_p9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
#0 ap_return_2_preg = 16'd0;
#0 ap_return_3_preg = 16'd0;
#0 ap_return_4_preg = 16'd0;
end

myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_16_6_5_3_0_config18_s_outidx5jm #(
    .DataWidth( 3 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
outidx_92_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(outidx_92_address0),
    .ce0(outidx_92_ce0_local),
    .q0(outidx_92_q0)
);

myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_16_6_5_3_0_config18_s_w18_RO6jw #(
    .DataWidth( 6 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
w18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w18_address0),
    .ce0(w18_ce0_local),
    .q0(w18_q0)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_13_3_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 6 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 6 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 6 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 6 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 6 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 6 ),
    .def_WIDTH( 6 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
sparsemux_13_3_6_1_1_U665(
    .din0(ap_phi_mux_data_0_val23_phi_phi_fu_346_p4),
    .din1(ap_phi_mux_data_1_val24_phi_phi_fu_358_p4),
    .din2(ap_phi_mux_data_2_val25_phi_phi_fu_370_p4),
    .din3(ap_phi_mux_data_3_val26_phi_phi_fu_382_p4),
    .din4(ap_phi_mux_data_4_val27_phi_phi_fu_394_p4),
    .din5(ap_phi_mux_data_5_val28_phi_phi_fu_406_p4),
    .def(a_fu_436_p13),
    .sel(a_fu_436_p14),
    .dout(a_fu_436_p15)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_11_3_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 16 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 16 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 16 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
sparsemux_11_3_16_1_1_U666(
    .din0(acc17_reg_272),
    .din1(acc_715_reg_286),
    .din2(acc_813_reg_300),
    .din3(acc_911_reg_314),
    .din4(acc_1010_reg_328),
    .def(tmp_fu_476_p11),
    .sel(outidx_92_q0),
    .dout(tmp_fu_476_p13)
);

myproject_mac_muladd_6s_6ns_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_6s_6ns_16s_17_1_1_U667(
    .din0(w18_q0),
    .din1(grp_fu_678_p1),
    .din2(tmp_fu_476_p13),
    .dout(grp_fu_678_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1))) begin
            ap_return_0_preg <= acc_fu_616_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1))) begin
            ap_return_1_preg <= acc_6_fu_608_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1))) begin
            ap_return_2_preg <= acc_7_fu_600_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1))) begin
            ap_return_3_preg <= acc_8_fu_592_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1))) begin
            ap_return_4_preg <= acc_9_fu_584_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd0))) begin
        acc17_reg_272 <= acc_fu_616_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc17_reg_272 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd0))) begin
        acc_1010_reg_328 <= acc_9_fu_584_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_1010_reg_328 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd0))) begin
        acc_715_reg_286 <= acc_6_fu_608_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_715_reg_286 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd0))) begin
        acc_813_reg_300 <= acc_7_fu_600_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_813_reg_300 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd0))) begin
        acc_911_reg_314 <= acc_8_fu_592_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_911_reg_314 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_148_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_342 <= data_0_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_342 <= ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_342;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_148_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_354 <= data_1_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_354 <= ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_354;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_148_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_366 <= data_2_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_366 <= ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_148_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_378 <= data_3_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_378 <= ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_378;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_148_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_390 <= data_4_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_390 <= ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_390;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_148_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_402 <= data_5_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_402 <= ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_402;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd0))) begin
        do_init_reg_144 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_144 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd0))) begin
        in_index20_reg_258 <= in_index_fu_636_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_index20_reg_258 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd0))) begin
        w_index19_reg_160 <= w_index_reg_728;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index19_reg_160 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd0))) begin
        data_0_val23_rewind_reg_174 <= ap_phi_mux_data_0_val23_phi_phi_fu_346_p4;
        data_1_val24_rewind_reg_188 <= ap_phi_mux_data_1_val24_phi_phi_fu_358_p4;
        data_2_val25_rewind_reg_202 <= ap_phi_mux_data_2_val25_phi_phi_fu_370_p4;
        data_3_val26_rewind_reg_216 <= ap_phi_mux_data_3_val26_phi_phi_fu_382_p4;
        data_4_val27_rewind_reg_230 <= ap_phi_mux_data_4_val27_phi_phi_fu_394_p4;
        data_5_val28_rewind_reg_244 <= ap_phi_mux_data_5_val28_phi_phi_fu_406_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln135_reg_733 <= icmp_ln135_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_728 <= w_index_fu_420_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((do_init_reg_144 == 1'd0)) begin
        ap_phi_mux_data_0_val23_phi_phi_fu_346_p4 = data_0_val23_rewind_reg_174;
    end else begin
        ap_phi_mux_data_0_val23_phi_phi_fu_346_p4 = ap_phi_reg_pp0_iter1_data_0_val23_phi_reg_342;
    end
end

always @ (*) begin
    if ((do_init_reg_144 == 1'd0)) begin
        ap_phi_mux_data_1_val24_phi_phi_fu_358_p4 = data_1_val24_rewind_reg_188;
    end else begin
        ap_phi_mux_data_1_val24_phi_phi_fu_358_p4 = ap_phi_reg_pp0_iter1_data_1_val24_phi_reg_354;
    end
end

always @ (*) begin
    if ((do_init_reg_144 == 1'd0)) begin
        ap_phi_mux_data_2_val25_phi_phi_fu_370_p4 = data_2_val25_rewind_reg_202;
    end else begin
        ap_phi_mux_data_2_val25_phi_phi_fu_370_p4 = ap_phi_reg_pp0_iter1_data_2_val25_phi_reg_366;
    end
end

always @ (*) begin
    if ((do_init_reg_144 == 1'd0)) begin
        ap_phi_mux_data_3_val26_phi_phi_fu_382_p4 = data_3_val26_rewind_reg_216;
    end else begin
        ap_phi_mux_data_3_val26_phi_phi_fu_382_p4 = ap_phi_reg_pp0_iter1_data_3_val26_phi_reg_378;
    end
end

always @ (*) begin
    if ((do_init_reg_144 == 1'd0)) begin
        ap_phi_mux_data_4_val27_phi_phi_fu_394_p4 = data_4_val27_rewind_reg_230;
    end else begin
        ap_phi_mux_data_4_val27_phi_phi_fu_394_p4 = ap_phi_reg_pp0_iter1_data_4_val27_phi_reg_390;
    end
end

always @ (*) begin
    if ((do_init_reg_144 == 1'd0)) begin
        ap_phi_mux_data_5_val28_phi_phi_fu_406_p4 = data_5_val28_rewind_reg_244;
    end else begin
        ap_phi_mux_data_5_val28_phi_phi_fu_406_p4 = ap_phi_reg_pp0_iter1_data_5_val28_phi_reg_402;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_156)) begin
        if ((icmp_ln135_reg_733 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_148_p6 = 1'd1;
        end else if ((icmp_ln135_reg_733 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_148_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_148_p6 = do_init_reg_144;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_148_p6 = do_init_reg_144;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_156)) begin
        if ((icmp_ln135_reg_733 == 1'd1)) begin
            ap_phi_mux_w_index19_phi_fu_164_p6 = 5'd0;
        end else if ((icmp_ln135_reg_733 == 1'd0)) begin
            ap_phi_mux_w_index19_phi_fu_164_p6 = w_index_reg_728;
        end else begin
            ap_phi_mux_w_index19_phi_fu_164_p6 = w_index19_reg_160;
        end
    end else begin
        ap_phi_mux_w_index19_phi_fu_164_p6 = w_index19_reg_160;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln135_fu_426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1))) begin
        ap_return_0 = acc_fu_616_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1))) begin
        ap_return_1 = acc_6_fu_608_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1))) begin
        ap_return_2 = acc_7_fu_600_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1))) begin
        ap_return_3 = acc_8_fu_592_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln135_reg_733 == 1'd1))) begin
        ap_return_4 = acc_9_fu_584_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outidx_92_ce0_local = 1'b1;
    end else begin
        outidx_92_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w18_ce0_local = 1'b1;
    end else begin
        w18_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_436_p13 = 'bx;

assign a_fu_436_p14 = in_index20_reg_258[2:0];

assign acc_10_fu_561_p3 = ((or_ln144_3_fu_555_p2[0:0] == 1'b1) ? acc_1010_reg_328 : 16'd0);

assign acc_11_fu_569_p1 = grp_fu_678_p3[15:0];

assign acc_6_fu_608_p3 = ((icmp_ln144_1_fu_514_p2[0:0] == 1'b1) ? acc_11_fu_569_p1 : acc_715_reg_286);

assign acc_7_fu_600_p3 = ((icmp_ln144_2_fu_520_p2[0:0] == 1'b1) ? acc_11_fu_569_p1 : acc_813_reg_300);

assign acc_8_fu_592_p3 = ((icmp_ln144_3_fu_526_p2[0:0] == 1'b1) ? acc_11_fu_569_p1 : acc_911_reg_314);

assign acc_9_fu_584_p3 = ((or_ln144_5_fu_578_p2[0:0] == 1'b1) ? acc_10_fu_561_p3 : acc_11_fu_569_p1);

assign acc_fu_616_p3 = ((icmp_ln144_fu_508_p2[0:0] == 1'b1) ? acc_11_fu_569_p1 : acc17_reg_272);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_156 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_37 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_data_0_val23_phi_reg_342 = 'bx;

assign ap_phi_reg_pp0_iter0_data_1_val24_phi_reg_354 = 'bx;

assign ap_phi_reg_pp0_iter0_data_2_val25_phi_reg_366 = 'bx;

assign ap_phi_reg_pp0_iter0_data_3_val26_phi_reg_378 = 'bx;

assign ap_phi_reg_pp0_iter0_data_4_val27_phi_reg_390 = 'bx;

assign ap_phi_reg_pp0_iter0_data_5_val28_phi_reg_402 = 'bx;

assign grp_fu_678_p1 = grp_fu_678_p10;

assign grp_fu_678_p10 = a_fu_436_p15;

assign icmp_ln135_fu_426_p2 = ((ap_phi_mux_w_index19_phi_fu_164_p6 == 5'd29) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_514_p2 = ((outidx_92_q0 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln144_2_fu_520_p2 = ((outidx_92_q0 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln144_3_fu_526_p2 = ((outidx_92_q0 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln144_4_fu_532_p2 = ((grp_fu_678_p3 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_508_p2 = ((outidx_92_q0 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_630_p2 = (($signed(in_index_2_fu_624_p2) > $signed(32'd5)) ? 1'b1 : 1'b0);

assign in_index_2_fu_624_p2 = (in_index20_reg_258 + 32'd1);

assign in_index_fu_636_p3 = ((icmp_ln154_fu_630_p2[0:0] == 1'b1) ? 32'd0 : in_index_2_fu_624_p2);

assign or_ln144_1_fu_543_p2 = (icmp_ln144_3_fu_526_p2 | icmp_ln144_2_fu_520_p2);

assign or_ln144_2_fu_549_p2 = (or_ln144_1_fu_543_p2 | icmp_ln144_1_fu_514_p2);

assign or_ln144_3_fu_555_p2 = (or_ln144_fu_537_p2 | or_ln144_2_fu_549_p2);

assign or_ln144_4_fu_572_p2 = (icmp_ln144_fu_508_p2 | icmp_ln144_1_fu_514_p2);

assign or_ln144_5_fu_578_p2 = (or_ln144_4_fu_572_p2 | or_ln144_1_fu_543_p2);

assign or_ln144_fu_537_p2 = (icmp_ln144_fu_508_p2 | icmp_ln144_4_fu_532_p2);

assign outidx_92_address0 = zext_ln135_fu_414_p1;

assign tmp_fu_476_p11 = 'bx;

assign w18_address0 = zext_ln135_fu_414_p1;

assign w_index_fu_420_p2 = (ap_phi_mux_w_index19_phi_fu_164_p6 + 5'd1);

assign zext_ln135_fu_414_p1 = ap_phi_mux_w_index19_phi_fu_164_p6;

endmodule //myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_16_6_5_3_0_config18_s
