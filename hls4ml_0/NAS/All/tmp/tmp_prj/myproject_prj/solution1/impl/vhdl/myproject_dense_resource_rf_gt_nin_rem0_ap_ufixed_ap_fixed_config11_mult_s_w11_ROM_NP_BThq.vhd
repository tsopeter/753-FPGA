-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_config11_mult_s_w11_ROM_NP_BThq is 
    generic(
             DataWidth     : integer := 10; 
             AddressWidth     : integer := 8; 
             AddressRange    : integer := 135
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of myproject_dense_resource_rf_gt_nin_rem0_ap_ufixed_ap_fixed_config11_mult_s_w11_ROM_NP_BThq is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "0110111110", 1 => "0101111111", 2 => "1111111110", 3 => "1100111010", 
    4 => "0101111111", 5 => "1110000101", 6 => "1100111110", 7 => "0010000101", 
    8 => "1010000100", 9 => "0101111101", 10 => "0110111100", 11 => "1101000011", 
    12 => "1000000010", 13 => "1100000001", 14 => "0100000111", 15 => "0100111111", 
    16 => "1111111011", 17 => "1110000101", 18 => "0101000010", 19 => "0011111111", 
    20 => "0110111111", 21 => "1010111011", 22 => "0010000111", 23 => "1110000011", 
    24 => "0000000010", 25 => "1111000101", 26 => "1111000000", 27 => "0001111111", 
    28 => "0000111101", 29 => "0011000001", 30 => "0001000000", 31 => "0010000011", 
    32 => "1100000010", 33 => "0010111100", 34 => "1110000011", 35 => "0011000000", 
    36 => "1110000110", 37 => "0011000111", 38 => "0110111100", 39 => "0100000100", 
    40 => "0000000000", 41 => "1111000001", 42 => "1110111110", 43 => "0010000111", 
    44 => "0001000001", 45 => "0111000000", 46 => "1110000011", 47 => "0011111001", 
    48 => "1101000001", 49 => "1100000001", 50 => "1010000000", 51 => "0011000010", 
    52 => "1110000100", 53 => "0001111101", 54 => "0000111100", 55 => "1110111110", 
    56 => "1110000100", 57 => "1110111100", 58 => "0010000001", 59 => "0111111101", 
    60 => "0110000110", 61 => "1101000110", 62 => "0010000001", 63 => "1101111110", 
    64 => "0000111110", 65 => "0100111111", 66 => "1101111110", 67 => "0000000011", 
    68 => "0010000100", 69 => "0010111111", 70 => "1101000001", 71 => "0000000100", 
    72 => "0011000001", 73 => "0110111011", 74 => "0000111111", 75 => "0011111101", 
    76 => "0001000010", 77 => "0000000000", 78 => "0111000010", 79 => "1111000111", 
    80 => "1001111010", 81 => "0100111011", 82 => "0010111111", 83 => "1110111011", 
    84 => "0000111110", 85 => "0000000000", 86 => "0001000011", 87 => "0111000101", 
    88 => "0001000001", 89 => "0101000101", 90 => "1101000010", 91 => "0010111010", 
    92 => "0011111001", 93 => "1111111100", 94 => "1100111100", 95 => "0100000100", 
    96 => "1101000000", 97 => "0010111110", 98 => "1110000001", 99 => "0100111001", 
    100 => "1111000000", 101 => "0010000001", 102 => "0010000011", 103 => "0010000001", 
    104 => "0001000011", 105 => "0011000100", 106 => "1100000100", 107 => "1011111101", 
    108 => "0011000100", 109 => "1100000000", 110 => "0100000100", 111 => "0001111110", 
    112 => "1110111111", 113 => "1111111110", 114 => "0011000001", 115 => "1111111010", 
    116 => "0001000000", 117 => "1101111100", 118 => "1111000000", 119 => "0000111101", 
    120 => "0011000101", 121 => "0000111011", 122 => "0001111110", 123 => "0110000100", 
    124 => "0011111111", 125 => "0001000111", 126 => "0010111011", 127 => "1100000110", 
    128 => "0100111110", 129 => "0001111100", 130 => "0011111110", 131 => "0000111011", 
    132 => "0001111101", 133 => "0100000001", 134 => "1101000101");



attribute syn_rom_style : string;

attribute syn_rom_style of mem0 : signal is "block_rom"; 
attribute ROM_STYLE : string;

attribute ROM_STYLE of mem0 : signal is "block";

begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

