-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_relu_array_ap_fixed_6u_array_ap_ufixed_6_0_4_0_0_6u_relu_config16_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    layer14_out_dout : IN STD_LOGIC_VECTOR (113 downto 0);
    layer14_out_empty_n : IN STD_LOGIC;
    layer14_out_read : OUT STD_LOGIC;
    layer14_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer14_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer16_out_din : OUT STD_LOGIC_VECTOR (35 downto 0);
    layer16_out_full_n : IN STD_LOGIC;
    layer16_out_write : OUT STD_LOGIC;
    layer16_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer16_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of myproject_relu_array_ap_fixed_6u_array_ap_ufixed_6_0_4_0_0_6u_relu_config16_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal layer14_out_blk_n : STD_LOGIC;
    signal layer16_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal layer14_out_read_reg_1176 : STD_LOGIC_VECTOR (113 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln44_fu_139_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln44_reg_1204 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln44_6_reg_1209 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln44_7_reg_1214 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln44_8_reg_1219 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln44_9_reg_1224 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln44_s_reg_1229 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_reg_1234 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_fu_205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_1241 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1246 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_reg_1251 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_2_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_2_reg_1258 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1263 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_reg_1268 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_4_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_4_reg_1275 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_1280 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_reg_1285 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_6_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_6_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1297 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_26_reg_1302 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_8_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_8_reg_1309 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1314 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_33_reg_1319 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_10_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_10_reg_1326 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_1331 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln51_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_1336 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln52_fu_441_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln52_reg_1341 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_1347 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_1_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_1_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln52_1_fu_528_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln52_1_reg_1358 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_44_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_44_reg_1364 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_2_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_2_reg_1370 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln52_2_fu_615_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln52_2_reg_1375 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_45_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_45_reg_1381 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_3_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_3_reg_1387 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln52_3_fu_702_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln52_3_reg_1392 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_46_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_46_reg_1398 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_4_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_4_reg_1404 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln52_4_fu_789_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln52_4_reg_1409 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_47_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_47_reg_1415 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_5_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_5_reg_1421 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln52_5_fu_876_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln52_5_reg_1426 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_48_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_48_reg_1432 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_data_0_0_0_0_0_load_fu_948_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_0_0_0_0_0_load_reg_1438 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal out_data_0_1_0_0_0_load_fu_990_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_0_1_0_0_0_load_reg_1443 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_0_2_0_0_0_load_fu_1032_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_0_2_0_0_0_load_reg_1448 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_0_3_0_0_0_load_fu_1074_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_0_3_0_0_0_load_reg_1453 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_0_4_0_0_0_load_fu_1116_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_0_4_0_0_0_load_reg_1458 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_0_5_0_0_0_load_fu_1158_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_0_5_0_0_0_load_reg_1463 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln52_fu_201_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_229_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_fu_263_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_fu_297_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_28_fu_331_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_35_fu_365_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_419_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_405_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1_fu_396_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln52_fu_437_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_37_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_1_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_14_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_506_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_3_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_492_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_1_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln52_6_fu_483_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln52_1_fu_524_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_499_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_539_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_44_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_3_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_16_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_593_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_6_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_579_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_2_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln52_7_fu_570_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln52_2_fu_611_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_fu_586_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_626_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_51_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_5_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_18_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_680_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_9_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_666_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_3_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln52_8_fu_657_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln52_3_fu_698_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_22_fu_673_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_713_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_58_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_7_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_20_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_767_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_12_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_753_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_4_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln52_9_fu_744_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln52_4_fu_785_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_fu_760_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_800_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_9_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_22_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_854_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_15_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_840_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_5_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln52_s_fu_831_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln52_5_fu_872_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_36_fu_847_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_887_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_72_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_11_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_23_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_1_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_fu_927_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln52_2_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_1_fu_933_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln52_2_fu_941_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln52_1_fu_959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_4_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_3_fu_969_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln52_5_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_4_fu_975_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln52_5_fu_983_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln52_2_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_7_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_6_fu_1011_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln52_8_fu_1006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_7_fu_1017_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln52_8_fu_1025_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln52_3_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_10_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_9_fu_1053_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln52_11_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_10_fu_1059_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln52_11_fu_1067_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln52_4_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_13_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_12_fu_1095_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln52_14_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_13_fu_1101_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln52_14_fu_1109_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln52_5_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln52_16_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_15_fu_1137_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln52_17_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_16_fu_1143_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln52_17_fu_1151_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((layer16_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln52_1_reg_1358 <= add_ln52_1_fu_528_p2;
                add_ln52_2_reg_1375 <= add_ln52_2_fu_615_p2;
                add_ln52_3_reg_1392 <= add_ln52_3_fu_702_p2;
                add_ln52_4_reg_1409 <= add_ln52_4_fu_789_p2;
                add_ln52_5_reg_1426 <= add_ln52_5_fu_876_p2;
                add_ln52_reg_1341 <= add_ln52_fu_441_p2;
                empty_44_reg_1364 <= empty_44_fu_559_p2;
                empty_45_reg_1381 <= empty_45_fu_646_p2;
                empty_46_reg_1398 <= empty_46_fu_733_p2;
                empty_47_reg_1415 <= empty_47_fu_820_p2;
                empty_48_reg_1432 <= empty_48_fu_907_p2;
                empty_reg_1347 <= empty_fu_472_p2;
                icmp_ln51_1_reg_1353 <= icmp_ln51_1_fu_478_p2;
                icmp_ln51_2_reg_1370 <= icmp_ln51_2_fu_565_p2;
                icmp_ln51_3_reg_1387 <= icmp_ln51_3_fu_652_p2;
                icmp_ln51_4_reg_1404 <= icmp_ln51_4_fu_739_p2;
                icmp_ln51_5_reg_1421 <= icmp_ln51_5_fu_826_p2;
                icmp_ln51_reg_1336 <= icmp_ln51_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln52_10_reg_1326 <= icmp_ln52_10_fu_375_p2;
                icmp_ln52_2_reg_1258 <= icmp_ln52_2_fu_239_p2;
                icmp_ln52_4_reg_1275 <= icmp_ln52_4_fu_273_p2;
                icmp_ln52_6_reg_1292 <= icmp_ln52_6_fu_307_p2;
                icmp_ln52_8_reg_1309 <= icmp_ln52_8_fu_341_p2;
                icmp_ln52_reg_1241 <= icmp_ln52_fu_205_p2;
                layer14_out_read_reg_1176 <= layer14_out_dout;
                tmp_12_reg_1268 <= layer14_out_dout(56 downto 56);
                tmp_17_reg_1280 <= layer14_out_dout(56 downto 48);
                tmp_19_reg_1285 <= layer14_out_dout(75 downto 75);
                tmp_24_reg_1297 <= layer14_out_dout(75 downto 67);
                tmp_26_reg_1302 <= layer14_out_dout(94 downto 94);
                tmp_31_reg_1314 <= layer14_out_dout(94 downto 86);
                tmp_33_reg_1319 <= layer14_out_dout(113 downto 113);
                tmp_38_reg_1331 <= layer14_out_dout(113 downto 105);
                tmp_5_reg_1246 <= layer14_out_dout(18 downto 10);
                tmp_6_reg_1251 <= layer14_out_dout(37 downto 37);
                tmp_reg_1234 <= layer14_out_dout(18 downto 18);
                tmp_s_reg_1263 <= layer14_out_dout(37 downto 29);
                trunc_ln44_6_reg_1209 <= layer14_out_dout(37 downto 19);
                trunc_ln44_7_reg_1214 <= layer14_out_dout(56 downto 38);
                trunc_ln44_8_reg_1219 <= layer14_out_dout(75 downto 57);
                trunc_ln44_9_reg_1224 <= layer14_out_dout(94 downto 76);
                trunc_ln44_reg_1204 <= trunc_ln44_fu_139_p1;
                trunc_ln44_s_reg_1229 <= layer14_out_dout(113 downto 95);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                out_data_0_0_0_0_0_load_reg_1438 <= out_data_0_0_0_0_0_load_fu_948_p3;
                out_data_0_1_0_0_0_load_reg_1443 <= out_data_0_1_0_0_0_load_fu_990_p3;
                out_data_0_2_0_0_0_load_reg_1448 <= out_data_0_2_0_0_0_load_fu_1032_p3;
                out_data_0_3_0_0_0_load_reg_1453 <= out_data_0_3_0_0_0_load_fu_1074_p3;
                out_data_0_4_0_0_0_load_reg_1458 <= out_data_0_4_0_0_0_load_fu_1116_p3;
                out_data_0_5_0_0_0_load_reg_1463 <= out_data_0_5_0_0_0_load_fu_1158_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, layer16_out_full_n, ap_CS_fsm_state4, ap_block_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((layer16_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln52_1_fu_528_p2 <= std_logic_vector(unsigned(trunc_ln52_6_fu_483_p4) + unsigned(zext_ln52_1_fu_524_p1));
    add_ln52_2_fu_615_p2 <= std_logic_vector(unsigned(trunc_ln52_7_fu_570_p4) + unsigned(zext_ln52_2_fu_611_p1));
    add_ln52_3_fu_702_p2 <= std_logic_vector(unsigned(trunc_ln52_8_fu_657_p4) + unsigned(zext_ln52_3_fu_698_p1));
    add_ln52_4_fu_789_p2 <= std_logic_vector(unsigned(trunc_ln52_9_fu_744_p4) + unsigned(zext_ln52_4_fu_785_p1));
    add_ln52_5_fu_876_p2 <= std_logic_vector(unsigned(trunc_ln52_s_fu_831_p4) + unsigned(zext_ln52_5_fu_872_p1));
    add_ln52_fu_441_p2 <= std_logic_vector(unsigned(trunc_ln1_fu_396_p4) + unsigned(zext_ln52_fu_437_p1));
    and_ln52_14_fu_466_p2 <= (tmp_4_fu_452_p3 or not_tmp_37_fu_460_p2);
    and_ln52_16_fu_553_p2 <= (tmp_11_fu_539_p3 or not_tmp_44_fu_547_p2);
    and_ln52_18_fu_640_p2 <= (tmp_18_fu_626_p3 or not_tmp_51_fu_634_p2);
    and_ln52_1_fu_518_p2 <= (tmp_7_fu_492_p3 and or_ln52_3_fu_513_p2);
    and_ln52_20_fu_727_p2 <= (tmp_25_fu_713_p3 or not_tmp_58_fu_721_p2);
    and_ln52_22_fu_814_p2 <= (tmp_32_fu_800_p3 or not_tmp_65_fu_808_p2);
    and_ln52_23_fu_901_p2 <= (tmp_39_fu_887_p3 or not_tmp_72_fu_895_p2);
    and_ln52_2_fu_605_p2 <= (tmp_13_fu_579_p3 and or_ln52_6_fu_600_p2);
    and_ln52_3_fu_692_p2 <= (tmp_20_fu_666_p3 and or_ln52_9_fu_687_p2);
    and_ln52_4_fu_779_p2 <= (tmp_27_fu_753_p3 and or_ln52_12_fu_774_p2);
    and_ln52_5_fu_866_p2 <= (tmp_34_fu_840_p3 and or_ln52_15_fu_861_p2);
    and_ln52_fu_431_p2 <= (tmp_1_fu_405_p3 and or_ln52_fu_426_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(layer16_out_full_n)
    begin
        if ((layer16_out_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, layer14_out_empty_n)
    begin
                ap_block_state1 <= ((layer14_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, layer16_out_full_n, ap_CS_fsm_state4)
    begin
        if (((layer16_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    empty_44_fu_559_p2 <= (icmp_ln52_3_fu_534_p2 and and_ln52_16_fu_553_p2);
    empty_45_fu_646_p2 <= (icmp_ln52_5_fu_621_p2 and and_ln52_18_fu_640_p2);
    empty_46_fu_733_p2 <= (icmp_ln52_7_fu_708_p2 and and_ln52_20_fu_727_p2);
    empty_47_fu_820_p2 <= (icmp_ln52_9_fu_795_p2 and and_ln52_22_fu_814_p2);
    empty_48_fu_907_p2 <= (icmp_ln52_11_fu_882_p2 and and_ln52_23_fu_901_p2);
    empty_fu_472_p2 <= (icmp_ln52_1_fu_447_p2 and and_ln52_14_fu_466_p2);
    icmp_ln51_1_fu_478_p2 <= "1" when (signed(trunc_ln44_6_reg_1209) > signed(ap_const_lv19_0)) else "0";
    icmp_ln51_2_fu_565_p2 <= "1" when (signed(trunc_ln44_7_reg_1214) > signed(ap_const_lv19_0)) else "0";
    icmp_ln51_3_fu_652_p2 <= "1" when (signed(trunc_ln44_8_reg_1219) > signed(ap_const_lv19_0)) else "0";
    icmp_ln51_4_fu_739_p2 <= "1" when (signed(trunc_ln44_9_reg_1224) > signed(ap_const_lv19_0)) else "0";
    icmp_ln51_5_fu_826_p2 <= "1" when (signed(trunc_ln44_s_reg_1229) > signed(ap_const_lv19_0)) else "0";
    icmp_ln51_fu_391_p2 <= "1" when (signed(trunc_ln44_reg_1204) > signed(ap_const_lv19_0)) else "0";
    icmp_ln52_10_fu_375_p2 <= "0" when (tmp_35_fu_365_p4 = ap_const_lv3_0) else "1";
    icmp_ln52_11_fu_882_p2 <= "1" when (tmp_38_reg_1331 = ap_const_lv9_0) else "0";
    icmp_ln52_1_fu_447_p2 <= "1" when (tmp_5_reg_1246 = ap_const_lv9_0) else "0";
    icmp_ln52_2_fu_239_p2 <= "0" when (tmp_9_fu_229_p4 = ap_const_lv3_0) else "1";
    icmp_ln52_3_fu_534_p2 <= "1" when (tmp_s_reg_1263 = ap_const_lv9_0) else "0";
    icmp_ln52_4_fu_273_p2 <= "0" when (tmp_14_fu_263_p4 = ap_const_lv3_0) else "1";
    icmp_ln52_5_fu_621_p2 <= "1" when (tmp_17_reg_1280 = ap_const_lv9_0) else "0";
    icmp_ln52_6_fu_307_p2 <= "0" when (tmp_21_fu_297_p4 = ap_const_lv3_0) else "1";
    icmp_ln52_7_fu_708_p2 <= "1" when (tmp_24_reg_1297 = ap_const_lv9_0) else "0";
    icmp_ln52_8_fu_341_p2 <= "0" when (tmp_28_fu_331_p4 = ap_const_lv3_0) else "1";
    icmp_ln52_9_fu_795_p2 <= "1" when (tmp_31_reg_1314 = ap_const_lv9_0) else "0";
    icmp_ln52_fu_205_p2 <= "0" when (trunc_ln52_fu_201_p1 = ap_const_lv3_0) else "1";

    internal_ap_ready_assign_proc : process(layer16_out_full_n, ap_CS_fsm_state4)
    begin
        if (((layer16_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    layer14_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer14_out_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer14_out_blk_n <= layer14_out_empty_n;
        else 
            layer14_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer14_out_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer14_out_read <= ap_const_logic_1;
        else 
            layer14_out_read <= ap_const_logic_0;
        end if; 
    end process;


    layer16_out_blk_n_assign_proc : process(layer16_out_full_n, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            layer16_out_blk_n <= layer16_out_full_n;
        else 
            layer16_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer16_out_din <= (((((out_data_0_5_0_0_0_load_reg_1463 & out_data_0_4_0_0_0_load_reg_1458) & out_data_0_3_0_0_0_load_reg_1453) & out_data_0_2_0_0_0_load_reg_1448) & out_data_0_1_0_0_0_load_reg_1443) & out_data_0_0_0_0_0_load_reg_1438);

    layer16_out_write_assign_proc : process(layer16_out_full_n, ap_CS_fsm_state4)
    begin
        if (((layer16_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            layer16_out_write <= ap_const_logic_1;
        else 
            layer16_out_write <= ap_const_logic_0;
        end if; 
    end process;

    not_tmp_37_fu_460_p2 <= (tmp_2_fu_412_p3 xor ap_const_lv1_1);
    not_tmp_44_fu_547_p2 <= (tmp_8_fu_499_p3 xor ap_const_lv1_1);
    not_tmp_51_fu_634_p2 <= (tmp_15_fu_586_p3 xor ap_const_lv1_1);
    not_tmp_58_fu_721_p2 <= (tmp_22_fu_673_p3 xor ap_const_lv1_1);
    not_tmp_65_fu_808_p2 <= (tmp_29_fu_760_p3 xor ap_const_lv1_1);
    not_tmp_72_fu_895_p2 <= (tmp_36_fu_847_p3 xor ap_const_lv1_1);
    or_ln52_10_fu_1039_p2 <= (tmp_19_reg_1285 or empty_46_reg_1398);
    or_ln52_11_fu_1048_p2 <= (xor_ln52_3_fu_1043_p2 or tmp_19_reg_1285);
    or_ln52_12_fu_774_p2 <= (tmp_30_fu_767_p3 or icmp_ln52_8_reg_1309);
    or_ln52_13_fu_1081_p2 <= (tmp_26_reg_1302 or empty_47_reg_1415);
    or_ln52_14_fu_1090_p2 <= (xor_ln52_4_fu_1085_p2 or tmp_26_reg_1302);
    or_ln52_15_fu_861_p2 <= (tmp_37_fu_854_p3 or icmp_ln52_10_reg_1326);
    or_ln52_16_fu_1123_p2 <= (tmp_33_reg_1319 or empty_48_reg_1432);
    or_ln52_17_fu_1132_p2 <= (xor_ln52_5_fu_1127_p2 or tmp_33_reg_1319);
    or_ln52_1_fu_913_p2 <= (tmp_reg_1234 or empty_reg_1347);
    or_ln52_2_fu_922_p2 <= (xor_ln52_fu_917_p2 or tmp_reg_1234);
    or_ln52_3_fu_513_p2 <= (tmp_10_fu_506_p3 or icmp_ln52_2_reg_1258);
    or_ln52_4_fu_955_p2 <= (tmp_6_reg_1251 or empty_44_reg_1364);
    or_ln52_5_fu_964_p2 <= (xor_ln52_1_fu_959_p2 or tmp_6_reg_1251);
    or_ln52_6_fu_600_p2 <= (tmp_16_fu_593_p3 or icmp_ln52_4_reg_1275);
    or_ln52_7_fu_997_p2 <= (tmp_12_reg_1268 or empty_45_reg_1381);
    or_ln52_8_fu_1006_p2 <= (xor_ln52_2_fu_1001_p2 or tmp_12_reg_1268);
    or_ln52_9_fu_687_p2 <= (tmp_23_fu_680_p3 or icmp_ln52_6_reg_1292);
    or_ln52_fu_426_p2 <= (tmp_3_fu_419_p3 or icmp_ln52_reg_1241);
    out_data_0_0_0_0_0_load_fu_948_p3 <= 
        select_ln52_2_fu_941_p3 when (icmp_ln51_reg_1336(0) = '1') else 
        ap_const_lv6_0;
    out_data_0_1_0_0_0_load_fu_990_p3 <= 
        select_ln52_5_fu_983_p3 when (icmp_ln51_1_reg_1353(0) = '1') else 
        ap_const_lv6_0;
    out_data_0_2_0_0_0_load_fu_1032_p3 <= 
        select_ln52_8_fu_1025_p3 when (icmp_ln51_2_reg_1370(0) = '1') else 
        ap_const_lv6_0;
    out_data_0_3_0_0_0_load_fu_1074_p3 <= 
        select_ln52_11_fu_1067_p3 when (icmp_ln51_3_reg_1387(0) = '1') else 
        ap_const_lv6_0;
    out_data_0_4_0_0_0_load_fu_1116_p3 <= 
        select_ln52_14_fu_1109_p3 when (icmp_ln51_4_reg_1404(0) = '1') else 
        ap_const_lv6_0;
    out_data_0_5_0_0_0_load_fu_1158_p3 <= 
        select_ln52_17_fu_1151_p3 when (icmp_ln51_5_reg_1421(0) = '1') else 
        ap_const_lv6_0;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln52_10_fu_1059_p3 <= 
        select_ln52_9_fu_1053_p3 when (or_ln52_10_fu_1039_p2(0) = '1') else 
        ap_const_lv6_3F;
    select_ln52_11_fu_1067_p3 <= 
        select_ln52_10_fu_1059_p3 when (or_ln52_11_fu_1048_p2(0) = '1') else 
        add_ln52_3_reg_1392;
    select_ln52_12_fu_1095_p3 <= 
        ap_const_lv6_0 when (tmp_26_reg_1302(0) = '1') else 
        add_ln52_4_reg_1409;
    select_ln52_13_fu_1101_p3 <= 
        select_ln52_12_fu_1095_p3 when (or_ln52_13_fu_1081_p2(0) = '1') else 
        ap_const_lv6_3F;
    select_ln52_14_fu_1109_p3 <= 
        select_ln52_13_fu_1101_p3 when (or_ln52_14_fu_1090_p2(0) = '1') else 
        add_ln52_4_reg_1409;
    select_ln52_15_fu_1137_p3 <= 
        ap_const_lv6_0 when (tmp_33_reg_1319(0) = '1') else 
        add_ln52_5_reg_1426;
    select_ln52_16_fu_1143_p3 <= 
        select_ln52_15_fu_1137_p3 when (or_ln52_16_fu_1123_p2(0) = '1') else 
        ap_const_lv6_3F;
    select_ln52_17_fu_1151_p3 <= 
        select_ln52_16_fu_1143_p3 when (or_ln52_17_fu_1132_p2(0) = '1') else 
        add_ln52_5_reg_1426;
    select_ln52_1_fu_933_p3 <= 
        select_ln52_fu_927_p3 when (or_ln52_1_fu_913_p2(0) = '1') else 
        ap_const_lv6_3F;
    select_ln52_2_fu_941_p3 <= 
        select_ln52_1_fu_933_p3 when (or_ln52_2_fu_922_p2(0) = '1') else 
        add_ln52_reg_1341;
    select_ln52_3_fu_969_p3 <= 
        ap_const_lv6_0 when (tmp_6_reg_1251(0) = '1') else 
        add_ln52_1_reg_1358;
    select_ln52_4_fu_975_p3 <= 
        select_ln52_3_fu_969_p3 when (or_ln52_4_fu_955_p2(0) = '1') else 
        ap_const_lv6_3F;
    select_ln52_5_fu_983_p3 <= 
        select_ln52_4_fu_975_p3 when (or_ln52_5_fu_964_p2(0) = '1') else 
        add_ln52_1_reg_1358;
    select_ln52_6_fu_1011_p3 <= 
        ap_const_lv6_0 when (tmp_12_reg_1268(0) = '1') else 
        add_ln52_2_reg_1375;
    select_ln52_7_fu_1017_p3 <= 
        select_ln52_6_fu_1011_p3 when (or_ln52_7_fu_997_p2(0) = '1') else 
        ap_const_lv6_3F;
    select_ln52_8_fu_1025_p3 <= 
        select_ln52_7_fu_1017_p3 when (or_ln52_8_fu_1006_p2(0) = '1') else 
        add_ln52_2_reg_1375;
    select_ln52_9_fu_1053_p3 <= 
        ap_const_lv6_0 when (tmp_19_reg_1285(0) = '1') else 
        add_ln52_3_reg_1392;
    select_ln52_fu_927_p3 <= 
        ap_const_lv6_0 when (tmp_reg_1234(0) = '1') else 
        add_ln52_reg_1341;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_506_p3 <= layer14_out_read_reg_1176(23 downto 23);
    tmp_11_fu_539_p3 <= add_ln52_1_fu_528_p2(5 downto 5);
    tmp_13_fu_579_p3 <= layer14_out_read_reg_1176(41 downto 41);
    tmp_14_fu_263_p4 <= layer14_out_dout(40 downto 38);
    tmp_15_fu_586_p3 <= layer14_out_read_reg_1176(47 downto 47);
    tmp_16_fu_593_p3 <= layer14_out_read_reg_1176(42 downto 42);
    tmp_18_fu_626_p3 <= add_ln52_2_fu_615_p2(5 downto 5);
    tmp_1_fu_405_p3 <= layer14_out_read_reg_1176(3 downto 3);
    tmp_20_fu_666_p3 <= layer14_out_read_reg_1176(60 downto 60);
    tmp_21_fu_297_p4 <= layer14_out_dout(59 downto 57);
    tmp_22_fu_673_p3 <= layer14_out_read_reg_1176(66 downto 66);
    tmp_23_fu_680_p3 <= layer14_out_read_reg_1176(61 downto 61);
    tmp_25_fu_713_p3 <= add_ln52_3_fu_702_p2(5 downto 5);
    tmp_27_fu_753_p3 <= layer14_out_read_reg_1176(79 downto 79);
    tmp_28_fu_331_p4 <= layer14_out_dout(78 downto 76);
    tmp_29_fu_760_p3 <= layer14_out_read_reg_1176(85 downto 85);
    tmp_2_fu_412_p3 <= layer14_out_read_reg_1176(9 downto 9);
    tmp_30_fu_767_p3 <= layer14_out_read_reg_1176(80 downto 80);
    tmp_32_fu_800_p3 <= add_ln52_4_fu_789_p2(5 downto 5);
    tmp_34_fu_840_p3 <= layer14_out_read_reg_1176(98 downto 98);
    tmp_35_fu_365_p4 <= layer14_out_dout(97 downto 95);
    tmp_36_fu_847_p3 <= layer14_out_read_reg_1176(104 downto 104);
    tmp_37_fu_854_p3 <= layer14_out_read_reg_1176(99 downto 99);
    tmp_39_fu_887_p3 <= add_ln52_5_fu_876_p2(5 downto 5);
    tmp_3_fu_419_p3 <= layer14_out_read_reg_1176(4 downto 4);
    tmp_4_fu_452_p3 <= add_ln52_fu_441_p2(5 downto 5);
    tmp_7_fu_492_p3 <= layer14_out_read_reg_1176(22 downto 22);
    tmp_8_fu_499_p3 <= layer14_out_read_reg_1176(28 downto 28);
    tmp_9_fu_229_p4 <= layer14_out_dout(21 downto 19);
    trunc_ln1_fu_396_p4 <= layer14_out_read_reg_1176(9 downto 4);
    trunc_ln44_fu_139_p1 <= layer14_out_dout(19 - 1 downto 0);
    trunc_ln52_6_fu_483_p4 <= layer14_out_read_reg_1176(28 downto 23);
    trunc_ln52_7_fu_570_p4 <= layer14_out_read_reg_1176(47 downto 42);
    trunc_ln52_8_fu_657_p4 <= layer14_out_read_reg_1176(66 downto 61);
    trunc_ln52_9_fu_744_p4 <= layer14_out_read_reg_1176(85 downto 80);
    trunc_ln52_fu_201_p1 <= layer14_out_dout(3 - 1 downto 0);
    trunc_ln52_s_fu_831_p4 <= layer14_out_read_reg_1176(104 downto 99);
    xor_ln52_1_fu_959_p2 <= (empty_44_reg_1364 xor ap_const_lv1_1);
    xor_ln52_2_fu_1001_p2 <= (empty_45_reg_1381 xor ap_const_lv1_1);
    xor_ln52_3_fu_1043_p2 <= (empty_46_reg_1398 xor ap_const_lv1_1);
    xor_ln52_4_fu_1085_p2 <= (empty_47_reg_1415 xor ap_const_lv1_1);
    xor_ln52_5_fu_1127_p2 <= (empty_48_reg_1432 xor ap_const_lv1_1);
    xor_ln52_fu_917_p2 <= (empty_reg_1347 xor ap_const_lv1_1);
    zext_ln52_1_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln52_1_fu_518_p2),6));
    zext_ln52_2_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln52_2_fu_605_p2),6));
    zext_ln52_3_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln52_3_fu_692_p2),6));
    zext_ln52_4_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln52_4_fu_779_p2),6));
    zext_ln52_5_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln52_5_fu_866_p2),6));
    zext_ln52_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln52_fu_431_p2),6));
end behav;
