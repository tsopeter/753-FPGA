// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config22_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [26:0] data_0_val;
input  [26:0] data_1_val;
input  [26:0] data_2_val;
input  [26:0] data_3_val;
input  [26:0] data_4_val;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln46_fu_295_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] w22_address0;
wire  signed [5:0] w22_q0;
reg   [0:0] do_init_reg_109;
reg   [2:0] w_index3_reg_125;
reg   [26:0] data_0_val4_rewind_reg_140;
reg   [26:0] data_1_val5_rewind_reg_154;
reg   [26:0] data_2_val6_rewind_reg_168;
reg   [26:0] data_3_val7_rewind_reg_182;
reg   [26:0] data_4_val8_rewind_reg_196;
reg   [33:0] empty_reg_210;
wire   [2:0] w_index_fu_289_p2;
reg   [2:0] w_index_reg_397;
reg   [0:0] icmp_ln46_reg_402;
wire   [33:0] x_fu_347_p2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_do_init_phi_fu_113_p6;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_w_index3_phi_fu_129_p6;
reg   [26:0] ap_phi_mux_data_0_val4_phi_phi_fu_228_p4;
reg   [26:0] ap_phi_mux_data_1_val5_phi_phi_fu_240_p4;
reg   [26:0] ap_phi_mux_data_2_val6_phi_phi_fu_252_p4;
reg   [26:0] ap_phi_mux_data_3_val7_phi_phi_fu_264_p4;
reg   [26:0] ap_phi_mux_data_4_val8_phi_phi_fu_276_p4;
wire   [26:0] ap_phi_reg_pp0_iter0_data_0_val4_phi_reg_224;
reg   [26:0] ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_224;
wire   [26:0] ap_phi_reg_pp0_iter0_data_1_val5_phi_reg_236;
reg   [26:0] ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_236;
wire   [26:0] ap_phi_reg_pp0_iter0_data_2_val6_phi_reg_248;
reg   [26:0] ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_248;
wire   [26:0] ap_phi_reg_pp0_iter0_data_3_val7_phi_reg_260;
reg   [26:0] ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_260;
wire   [26:0] ap_phi_reg_pp0_iter0_data_4_val8_phi_reg_272;
reg   [26:0] ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_272;
wire   [63:0] zext_ln46_fu_284_p1;
reg    w22_ce0_local;
wire   [26:0] a_fu_301_p11;
wire  signed [26:0] a_fu_301_p13;
wire   [32:0] mul_ln73_fu_337_p2;
wire  signed [33:0] sext_ln58_fu_343_p1;
reg   [15:0] ap_return_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_115;
reg    ap_condition_37;
wire   [2:0] a_fu_301_p1;
wire   [2:0] a_fu_301_p3;
wire   [2:0] a_fu_301_p5;
wire   [2:0] a_fu_301_p7;
wire  signed [2:0] a_fu_301_p9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 16'd0;
end

myproject_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config22_s_w22_ROM_NP_9j0 #(
    .DataWidth( 6 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
w22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w22_address0),
    .ce0(w22_ce0_local),
    .q0(w22_q0)
);

(* dissolve_hierarchy = "yes" *) myproject_sparsemux_11_3_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 27 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 27 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 27 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 27 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 27 ),
    .def_WIDTH( 27 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 27 ))
sparsemux_11_3_27_1_1_U700(
    .din0(ap_phi_mux_data_0_val4_phi_phi_fu_228_p4),
    .din1(ap_phi_mux_data_1_val5_phi_phi_fu_240_p4),
    .din2(ap_phi_mux_data_2_val6_phi_phi_fu_252_p4),
    .din3(ap_phi_mux_data_3_val7_phi_phi_fu_264_p4),
    .din4(ap_phi_mux_data_4_val8_phi_phi_fu_276_p4),
    .def(a_fu_301_p11),
    .sel(w_index3_reg_125),
    .dout(a_fu_301_p13)
);

myproject_mul_27s_6s_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 33 ))
mul_27s_6s_33_1_1_U701(
    .din0(a_fu_301_p13),
    .din1(w22_q0),
    .dout(mul_ln73_fu_337_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_402 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_preg <= {{x_fu_347_p2[23:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_113_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_224 <= data_0_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_224 <= ap_phi_reg_pp0_iter0_data_0_val4_phi_reg_224;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_113_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_236 <= data_1_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_236 <= ap_phi_reg_pp0_iter0_data_1_val5_phi_reg_236;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_113_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_248 <= data_2_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_248 <= ap_phi_reg_pp0_iter0_data_2_val6_phi_reg_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_113_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_260 <= data_3_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_260 <= ap_phi_reg_pp0_iter0_data_3_val7_phi_reg_260;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_37)) begin
        if ((ap_phi_mux_do_init_phi_fu_113_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_272 <= data_4_val;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_272 <= ap_phi_reg_pp0_iter0_data_4_val8_phi_reg_272;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_402 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        do_init_reg_109 <= 1'd0;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_402 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_109 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_402 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_210 <= x_fu_347_p2;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_402 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        empty_reg_210 <= 34'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_402 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index3_reg_125 <= w_index_reg_397;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_402 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index3_reg_125 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_402 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_0_val4_rewind_reg_140 <= ap_phi_mux_data_0_val4_phi_phi_fu_228_p4;
        data_1_val5_rewind_reg_154 <= ap_phi_mux_data_1_val5_phi_phi_fu_240_p4;
        data_2_val6_rewind_reg_168 <= ap_phi_mux_data_2_val6_phi_phi_fu_252_p4;
        data_3_val7_rewind_reg_182 <= ap_phi_mux_data_3_val7_phi_phi_fu_264_p4;
        data_4_val8_rewind_reg_196 <= ap_phi_mux_data_4_val8_phi_phi_fu_276_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln46_reg_402 <= icmp_ln46_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_397 <= w_index_fu_289_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_402 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((do_init_reg_109 == 1'd0)) begin
        ap_phi_mux_data_0_val4_phi_phi_fu_228_p4 = data_0_val4_rewind_reg_140;
    end else begin
        ap_phi_mux_data_0_val4_phi_phi_fu_228_p4 = ap_phi_reg_pp0_iter1_data_0_val4_phi_reg_224;
    end
end

always @ (*) begin
    if ((do_init_reg_109 == 1'd0)) begin
        ap_phi_mux_data_1_val5_phi_phi_fu_240_p4 = data_1_val5_rewind_reg_154;
    end else begin
        ap_phi_mux_data_1_val5_phi_phi_fu_240_p4 = ap_phi_reg_pp0_iter1_data_1_val5_phi_reg_236;
    end
end

always @ (*) begin
    if ((do_init_reg_109 == 1'd0)) begin
        ap_phi_mux_data_2_val6_phi_phi_fu_252_p4 = data_2_val6_rewind_reg_168;
    end else begin
        ap_phi_mux_data_2_val6_phi_phi_fu_252_p4 = ap_phi_reg_pp0_iter1_data_2_val6_phi_reg_248;
    end
end

always @ (*) begin
    if ((do_init_reg_109 == 1'd0)) begin
        ap_phi_mux_data_3_val7_phi_phi_fu_264_p4 = data_3_val7_rewind_reg_182;
    end else begin
        ap_phi_mux_data_3_val7_phi_phi_fu_264_p4 = ap_phi_reg_pp0_iter1_data_3_val7_phi_reg_260;
    end
end

always @ (*) begin
    if ((do_init_reg_109 == 1'd0)) begin
        ap_phi_mux_data_4_val8_phi_phi_fu_276_p4 = data_4_val8_rewind_reg_196;
    end else begin
        ap_phi_mux_data_4_val8_phi_phi_fu_276_p4 = ap_phi_reg_pp0_iter1_data_4_val8_phi_reg_272;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_115)) begin
        if ((icmp_ln46_reg_402 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_113_p6 = 1'd1;
        end else if ((icmp_ln46_reg_402 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_113_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_113_p6 = do_init_reg_109;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_113_p6 = do_init_reg_109;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_115)) begin
        if ((icmp_ln46_reg_402 == 1'd1)) begin
            ap_phi_mux_w_index3_phi_fu_129_p6 = 3'd0;
        end else if ((icmp_ln46_reg_402 == 1'd0)) begin
            ap_phi_mux_w_index3_phi_fu_129_p6 = w_index_reg_397;
        end else begin
            ap_phi_mux_w_index3_phi_fu_129_p6 = w_index3_reg_125;
        end
    end else begin
        ap_phi_mux_w_index3_phi_fu_129_p6 = w_index3_reg_125;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln46_fu_295_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_402 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return = {{x_fu_347_p2[23:8]}};
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w22_ce0_local = 1'b1;
    end else begin
        w22_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_301_p11 = 'bx;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_115 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_37 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_data_0_val4_phi_reg_224 = 'bx;

assign ap_phi_reg_pp0_iter0_data_1_val5_phi_reg_236 = 'bx;

assign ap_phi_reg_pp0_iter0_data_2_val6_phi_reg_248 = 'bx;

assign ap_phi_reg_pp0_iter0_data_3_val7_phi_reg_260 = 'bx;

assign ap_phi_reg_pp0_iter0_data_4_val8_phi_reg_272 = 'bx;

assign icmp_ln46_fu_295_p2 = ((ap_phi_mux_w_index3_phi_fu_129_p6 == 3'd4) ? 1'b1 : 1'b0);

assign sext_ln58_fu_343_p1 = $signed(mul_ln73_fu_337_p2);

assign w22_address0 = zext_ln46_fu_284_p1;

assign w_index_fu_289_p2 = (ap_phi_mux_w_index3_phi_fu_129_p6 + 3'd1);

assign x_fu_347_p2 = ($signed(sext_ln58_fu_343_p1) + $signed(empty_reg_210));

assign zext_ln46_fu_284_p1 = ap_phi_mux_w_index3_phi_fu_129_p6;

endmodule //myproject_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config22_s
