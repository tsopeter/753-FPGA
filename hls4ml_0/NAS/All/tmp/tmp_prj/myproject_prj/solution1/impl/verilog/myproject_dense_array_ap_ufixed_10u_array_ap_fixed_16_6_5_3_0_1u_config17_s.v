// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_array_ap_ufixed_10u_array_ap_fixed_16_6_5_3_0_1u_config17_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer16_out_dout,
        layer16_out_empty_n,
        layer16_out_read,
        layer16_out_num_data_valid,
        layer16_out_fifo_cap,
        layer17_out_din,
        layer17_out_full_n,
        layer17_out_write,
        layer17_out_num_data_valid,
        layer17_out_fifo_cap
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [59:0] layer16_out_dout;
input   layer16_out_empty_n;
output   layer16_out_read;
input  [1:0] layer16_out_num_data_valid;
input  [1:0] layer16_out_fifo_cap;
output  [15:0] layer17_out_din;
input   layer17_out_full_n;
output   layer17_out_write;
input  [1:0] layer17_out_num_data_valid;
input  [1:0] layer17_out_fifo_cap;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer16_out_read;
reg layer17_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer16_out_blk_n;
reg    layer17_out_blk_n;
wire    ap_CS_fsm_state2;
wire   [5:0] data_fu_89_p1;
reg   [5:0] data_reg_198;
reg    ap_block_state1;
reg   [5:0] data_9_reg_203;
reg   [5:0] data_1_reg_208;
reg   [5:0] data_2_reg_213;
reg   [5:0] data_3_reg_218;
reg   [5:0] data_4_reg_223;
reg   [5:0] data_5_reg_228;
reg   [5:0] data_6_reg_233;
reg   [5:0] data_7_reg_238;
reg   [5:0] data_8_reg_243;
wire    grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_start;
wire    grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_done;
wire    grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_idle;
wire    grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_ready;
wire   [13:0] grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_return;
reg    grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_start_reg;
reg    ap_block_state1_ignore_call13;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_start_reg = 1'b0;
end

myproject_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_start),
    .ap_done(grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_done),
    .ap_idle(grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_idle),
    .ap_ready(grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_ready),
    .data_0_val(data_reg_198),
    .data_1_val(data_9_reg_203),
    .data_2_val(data_1_reg_208),
    .data_3_val(data_2_reg_213),
    .data_4_val(data_3_reg_218),
    .data_5_val(data_4_reg_223),
    .data_6_val(data_5_reg_228),
    .data_7_val(data_6_reg_233),
    .data_8_val(data_7_reg_238),
    .data_9_val(data_8_reg_243),
    .ap_return(grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_done == 1'b0) | (layer17_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state1_ignore_call13) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_start_reg <= 1'b1;
        end else if ((grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_ready == 1'b1)) begin
            grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_1_reg_208 <= {{layer16_out_dout[17:12]}};
        data_2_reg_213 <= {{layer16_out_dout[23:18]}};
        data_3_reg_218 <= {{layer16_out_dout[29:24]}};
        data_4_reg_223 <= {{layer16_out_dout[35:30]}};
        data_5_reg_228 <= {{layer16_out_dout[41:36]}};
        data_6_reg_233 <= {{layer16_out_dout[47:42]}};
        data_7_reg_238 <= {{layer16_out_dout[53:48]}};
        data_8_reg_243 <= {{layer16_out_dout[59:54]}};
        data_9_reg_203 <= {{layer16_out_dout[11:6]}};
        data_reg_198 <= data_fu_89_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_done == 1'b0) | (layer17_out_full_n == 1'b0))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_done == 1'b0) | (layer17_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_done == 1'b0) | (layer17_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer16_out_blk_n = layer16_out_empty_n;
    end else begin
        layer16_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        layer16_out_read = 1'b1;
    end else begin
        layer16_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer17_out_blk_n = layer17_out_full_n;
    end else begin
        layer17_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_done == 1'b0) | (layer17_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        layer17_out_write = 1'b1;
    end else begin
        layer17_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_done == 1'b0) | (layer17_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer16_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call13 = ((real_start == 1'b0) | (layer16_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign data_fu_89_p1 = layer16_out_dout[5:0];

assign grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_start = grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_start_reg;

assign layer17_out_din = $signed(grp_dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_16_6_5_3_0_config17_s_fu_73_ap_return);

assign start_out = real_start;

endmodule //myproject_dense_array_ap_ufixed_10u_array_ap_fixed_16_6_5_3_0_1u_config17_s
