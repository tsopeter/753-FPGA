// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        weights_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        weights_V_TDATA,
        weights_V_TREADY
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter3_fsm_state4 = 2'd2;
parameter    ap_ST_iter4_fsm_state5 = 2'd2;
parameter    ap_ST_iter5_fsm_state6 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;
parameter    ap_ST_iter3_fsm_state0 = 2'd1;
parameter    ap_ST_iter4_fsm_state0 = 2'd1;
parameter    ap_ST_iter5_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   weights_V_TVALID;
input   out_V_TREADY;
input  [7:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;
input  [7:0] weights_V_TDATA;
output   weights_V_TREADY;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;
reg weights_V_TREADY;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
reg   [1:0] ap_CS_iter3_fsm;
wire    ap_CS_iter3_fsm_state0;
reg   [1:0] ap_CS_iter4_fsm;
wire    ap_CS_iter4_fsm_state0;
reg   [1:0] ap_CS_iter5_fsm;
wire    ap_CS_iter5_fsm_state0;
wire   [0:0] icmp_ln249_fu_547_p2;
wire   [0:0] icmp_ln253_fu_563_p2;
reg    ap_predicate_op84_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_CS_iter1_fsm_state2;
wire    ap_CS_iter4_fsm_state5;
wire    ap_CS_iter3_fsm_state4;
wire    ap_CS_iter2_fsm_state3;
reg   [0:0] icmp_ln249_reg_1620;
reg   [0:0] icmp_ln249_reg_1620_pp0_iter4_reg;
reg   [0:0] icmp_ln290_reg_1676;
reg   [0:0] icmp_ln290_reg_1676_pp0_iter4_reg;
reg    ap_predicate_op301_write_state6;
reg    ap_block_state6_pp0_stage0_iter5;
wire    ap_CS_iter5_fsm_state6;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] p_ZL7threshs_0_address0;
wire   [7:0] p_ZL7threshs_0_q0;
wire   [3:0] p_ZL7threshs_1_address0;
wire   [7:0] p_ZL7threshs_1_q0;
wire   [3:0] p_ZL7threshs_2_address0;
wire   [9:0] p_ZL7threshs_2_q0;
wire   [3:0] p_ZL7threshs_3_address0;
wire   [6:0] p_ZL7threshs_3_q0;
wire   [3:0] p_ZL7threshs_4_address0;
wire   [10:0] p_ZL7threshs_4_q0;
wire   [3:0] p_ZL7threshs_5_address0;
wire   [10:0] p_ZL7threshs_5_q0;
wire   [3:0] p_ZL7threshs_6_address0;
wire   [8:0] p_ZL7threshs_6_q0;
wire   [3:0] p_ZL7threshs_7_address0;
wire   [11:0] p_ZL7threshs_7_q0;
wire   [3:0] p_ZL7threshs_8_address0;
wire   [11:0] p_ZL7threshs_8_q0;
wire   [3:0] p_ZL7threshs_9_address0;
wire   [11:0] p_ZL7threshs_9_q0;
wire   [3:0] p_ZL7threshs_10_address0;
wire   [11:0] p_ZL7threshs_10_q0;
wire   [3:0] p_ZL7threshs_11_address0;
wire   [10:0] p_ZL7threshs_11_q0;
wire   [3:0] p_ZL7threshs_12_address0;
wire   [10:0] p_ZL7threshs_12_q0;
wire   [3:0] p_ZL7threshs_13_address0;
wire   [9:0] p_ZL7threshs_13_q0;
wire   [3:0] p_ZL7threshs_14_address0;
wire   [6:0] p_ZL7threshs_14_q0;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
reg    weights_V_TDATA_blk_n;
reg   [31:0] nf_2_reg_1615;
reg   [31:0] nf_2_reg_1615_pp0_iter1_reg;
reg   [31:0] nf_2_reg_1615_pp0_iter2_reg;
reg   [0:0] icmp_ln249_reg_1620_pp0_iter1_reg;
reg   [0:0] icmp_ln249_reg_1620_pp0_iter2_reg;
reg   [0:0] icmp_ln249_reg_1620_pp0_iter3_reg;
wire   [4:0] trunc_ln249_fu_559_p1;
wire   [7:0] tmp_fu_644_p53;
wire   [3:0] W_packed_fu_877_p1;
reg  signed [3:0] W_packed_reg_1666;
wire   [0:0] icmp_ln272_fu_881_p2;
reg   [0:0] icmp_ln272_reg_1671;
reg   [0:0] icmp_ln272_reg_1671_pp0_iter1_reg;
reg   [0:0] icmp_ln272_reg_1671_pp0_iter2_reg;
wire   [0:0] icmp_ln290_fu_893_p2;
reg   [0:0] icmp_ln290_reg_1676_pp0_iter1_reg;
reg   [0:0] icmp_ln290_reg_1676_pp0_iter2_reg;
reg   [0:0] icmp_ln290_reg_1676_pp0_iter3_reg;
wire   [0:0] icmp_ln108_3_fu_1043_p2;
reg   [0:0] icmp_ln108_3_reg_1770;
wire   [0:0] icmp_ln108_4_fu_1052_p2;
reg   [0:0] icmp_ln108_4_reg_1775;
wire   [0:0] icmp_ln108_5_fu_1061_p2;
reg   [0:0] icmp_ln108_5_reg_1780;
wire   [0:0] icmp_ln108_6_fu_1074_p2;
reg   [0:0] icmp_ln108_6_reg_1785;
wire   [1:0] add_ln218_1_fu_1253_p2;
reg   [1:0] add_ln218_1_reg_1790;
wire   [2:0] add_ln218_8_fu_1279_p2;
reg   [2:0] add_ln218_8_reg_1795;
wire   [2:0] add_ln218_11_fu_1305_p2;
reg   [2:0] add_ln218_11_reg_1800;
wire   [7:0] ap_phi_reg_pp0_iter0_inElem_reg_466;
reg   [7:0] ap_phi_reg_pp0_iter1_inElem_reg_466;
wire   [63:0] idxprom2_i_fu_956_p1;
reg   [31:0] sf_fu_136;
wire   [31:0] sf_2_fu_887_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_sf_1;
reg   [18:0] i_fu_140;
wire   [18:0] i_2_fu_553_p2;
reg   [18:0] ap_sig_allocacmp_i_1;
reg   [14:0] p_0_0_07437_fu_144;
wire  signed [14:0] grp_fu_1413_p3;
reg   [14:0] ap_sig_allocacmp_p_0_0_07437_load;
reg   [7:0] inputBuf_fu_148;
reg   [7:0] inputBuf_1_fu_152;
reg   [7:0] inputBuf_2_fu_156;
reg   [7:0] inputBuf_3_fu_160;
reg   [7:0] inputBuf_4_fu_164;
reg   [7:0] inputBuf_5_fu_168;
reg   [7:0] inputBuf_6_fu_172;
reg   [7:0] inputBuf_7_fu_176;
reg   [7:0] inputBuf_8_fu_180;
reg   [7:0] inputBuf_9_fu_184;
reg   [7:0] inputBuf_10_fu_188;
reg   [7:0] inputBuf_11_fu_192;
reg   [7:0] inputBuf_12_fu_196;
reg   [7:0] inputBuf_13_fu_200;
reg   [7:0] inputBuf_14_fu_204;
reg   [7:0] inputBuf_15_fu_208;
reg   [7:0] inputBuf_16_fu_212;
reg   [7:0] inputBuf_17_fu_216;
reg   [7:0] inputBuf_18_fu_220;
reg   [7:0] inputBuf_19_fu_224;
reg   [7:0] inputBuf_20_fu_228;
reg   [7:0] inputBuf_21_fu_232;
reg   [7:0] inputBuf_22_fu_236;
reg   [7:0] inputBuf_23_fu_240;
reg   [7:0] inputBuf_24_fu_244;
reg   [31:0] nf_1_fu_248;
wire   [31:0] nf_3_fu_916_p3;
reg   [31:0] ap_sig_allocacmp_nf_2;
reg    p_ZL7threshs_0_ce0_local;
reg    p_ZL7threshs_1_ce0_local;
reg    p_ZL7threshs_2_ce0_local;
reg    p_ZL7threshs_3_ce0_local;
reg    p_ZL7threshs_4_ce0_local;
reg    p_ZL7threshs_5_ce0_local;
reg    p_ZL7threshs_6_ce0_local;
reg    p_ZL7threshs_7_ce0_local;
reg    p_ZL7threshs_8_ce0_local;
reg    p_ZL7threshs_9_ce0_local;
reg    p_ZL7threshs_10_ce0_local;
reg    p_ZL7threshs_11_ce0_local;
reg    p_ZL7threshs_12_ce0_local;
reg    p_ZL7threshs_13_ce0_local;
reg    p_ZL7threshs_14_ce0_local;
wire   [7:0] tmp_fu_644_p51;
wire   [4:0] tmp_fu_644_p52;
wire   [31:0] nf_fu_904_p2;
wire   [0:0] icmp_ln302_fu_910_p2;
wire   [14:0] zext_ln108_fu_974_p1;
wire   [0:0] icmp_ln108_fu_978_p2;
wire   [0:0] result_fu_983_p2;
wire  signed [8:0] sext_ln108_fu_993_p1;
wire   [14:0] zext_ln108_1_fu_997_p1;
wire   [0:0] icmp_ln108_1_fu_1001_p2;
wire   [0:0] xor_ln108_fu_1006_p2;
wire   [14:0] zext_ln108_2_fu_1016_p1;
wire   [0:0] icmp_ln108_2_fu_1020_p2;
wire   [0:0] xor_ln108_1_fu_1025_p2;
wire  signed [9:0] sext_ln108_1_fu_1035_p1;
wire   [14:0] zext_ln108_3_fu_1039_p1;
wire   [14:0] zext_ln108_4_fu_1048_p1;
wire   [14:0] zext_ln108_5_fu_1057_p1;
wire  signed [10:0] sext_ln108_2_fu_1066_p1;
wire   [14:0] zext_ln108_6_fu_1070_p1;
wire   [14:0] zext_ln108_7_fu_1079_p1;
wire   [0:0] icmp_ln108_7_fu_1083_p2;
wire   [0:0] xor_ln108_6_fu_1088_p2;
wire   [14:0] zext_ln108_8_fu_1098_p1;
wire   [0:0] icmp_ln108_8_fu_1102_p2;
wire   [0:0] xor_ln108_7_fu_1107_p2;
wire   [14:0] zext_ln108_9_fu_1117_p1;
wire   [0:0] icmp_ln108_9_fu_1121_p2;
wire   [0:0] xor_ln108_8_fu_1126_p2;
wire   [14:0] zext_ln108_10_fu_1136_p1;
wire   [0:0] icmp_ln108_10_fu_1140_p2;
wire   [0:0] xor_ln108_9_fu_1145_p2;
wire  signed [11:0] sext_ln108_3_fu_1155_p1;
wire   [14:0] zext_ln108_11_fu_1159_p1;
wire   [0:0] icmp_ln108_11_fu_1163_p2;
wire   [0:0] xor_ln108_10_fu_1168_p2;
wire  signed [11:0] sext_ln108_4_fu_1178_p1;
wire   [14:0] zext_ln108_12_fu_1182_p1;
wire   [0:0] icmp_ln108_12_fu_1186_p2;
wire   [0:0] xor_ln108_11_fu_1191_p2;
wire  signed [11:0] sext_ln108_5_fu_1201_p1;
wire   [14:0] zext_ln108_13_fu_1205_p1;
wire   [0:0] icmp_ln108_13_fu_1209_p2;
wire   [0:0] xor_ln108_12_fu_1214_p2;
wire  signed [11:0] sext_ln108_6_fu_1224_p1;
wire   [14:0] zext_ln108_14_fu_1228_p1;
wire   [0:0] icmp_ln108_14_fu_1232_p2;
wire   [0:0] xor_ln108_13_fu_1237_p2;
wire   [1:0] zext_ln215_fu_989_p1;
wire   [1:0] zext_ln218_1_fu_1031_p1;
wire   [1:0] add_ln218_fu_1247_p2;
wire   [1:0] zext_ln218_fu_1012_p1;
wire   [1:0] zext_ln218_6_fu_1094_p1;
wire   [1:0] zext_ln218_7_fu_1113_p1;
wire   [1:0] add_ln218_6_fu_1259_p2;
wire   [1:0] zext_ln218_8_fu_1132_p1;
wire   [1:0] zext_ln218_9_fu_1151_p1;
wire   [1:0] add_ln218_7_fu_1269_p2;
wire   [2:0] zext_ln218_19_fu_1275_p1;
wire   [2:0] zext_ln218_18_fu_1265_p1;
wire   [1:0] zext_ln218_10_fu_1174_p1;
wire   [1:0] zext_ln218_11_fu_1197_p1;
wire   [1:0] add_ln218_9_fu_1285_p2;
wire   [1:0] zext_ln218_12_fu_1220_p1;
wire   [1:0] zext_ln218_13_fu_1243_p1;
wire   [1:0] add_ln218_10_fu_1295_p2;
wire   [2:0] zext_ln218_22_fu_1301_p1;
wire   [2:0] zext_ln218_21_fu_1291_p1;
wire   [0:0] xor_ln108_2_fu_1315_p2;
wire   [0:0] xor_ln108_3_fu_1324_p2;
wire   [0:0] xor_ln108_4_fu_1333_p2;
wire   [0:0] xor_ln108_5_fu_1342_p2;
wire   [1:0] zext_ln218_2_fu_1320_p1;
wire   [1:0] zext_ln218_3_fu_1329_p1;
wire   [1:0] add_ln218_2_fu_1354_p2;
wire   [1:0] zext_ln218_4_fu_1338_p1;
wire   [1:0] zext_ln218_5_fu_1347_p1;
wire   [1:0] add_ln218_3_fu_1364_p2;
wire   [2:0] zext_ln218_16_fu_1370_p1;
wire   [2:0] zext_ln218_15_fu_1360_p1;
wire   [2:0] add_ln218_4_fu_1374_p2;
wire   [2:0] zext_ln218_14_fu_1351_p1;
wire   [2:0] add_ln218_5_fu_1380_p2;
wire   [3:0] zext_ln218_23_fu_1393_p1;
wire   [3:0] zext_ln218_20_fu_1390_p1;
wire   [3:0] add_ln218_12_fu_1396_p2;
wire   [3:0] zext_ln218_17_fu_1386_p1;
wire   [3:0] result_2_fu_1402_p2;
wire   [7:0] grp_fu_1413_p0;
wire  signed [14:0] grp_fu_1413_p2;
reg    grp_fu_1413_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg   [1:0] ap_NS_iter3_fsm;
reg   [1:0] ap_NS_iter4_fsm;
reg   [1:0] ap_NS_iter5_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter1_fsm_state2_blk;
wire    ap_ST_iter2_fsm_state3_blk;
wire    ap_ST_iter3_fsm_state4_blk;
wire    ap_ST_iter4_fsm_state5_blk;
reg    ap_ST_iter5_fsm_state6_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [11:0] grp_fu_1413_p00;
reg    ap_condition_128;
wire   [4:0] tmp_fu_644_p1;
wire   [4:0] tmp_fu_644_p3;
wire   [4:0] tmp_fu_644_p5;
wire   [4:0] tmp_fu_644_p7;
wire   [4:0] tmp_fu_644_p9;
wire   [4:0] tmp_fu_644_p11;
wire   [4:0] tmp_fu_644_p13;
wire   [4:0] tmp_fu_644_p15;
wire   [4:0] tmp_fu_644_p17;
wire   [4:0] tmp_fu_644_p19;
wire   [4:0] tmp_fu_644_p21;
wire   [4:0] tmp_fu_644_p23;
wire   [4:0] tmp_fu_644_p25;
wire   [4:0] tmp_fu_644_p27;
wire   [4:0] tmp_fu_644_p29;
wire   [4:0] tmp_fu_644_p31;
wire  signed [4:0] tmp_fu_644_p33;
wire  signed [4:0] tmp_fu_644_p35;
wire  signed [4:0] tmp_fu_644_p37;
wire  signed [4:0] tmp_fu_644_p39;
wire  signed [4:0] tmp_fu_644_p41;
wire  signed [4:0] tmp_fu_644_p43;
wire  signed [4:0] tmp_fu_644_p45;
wire  signed [4:0] tmp_fu_644_p47;
wire  signed [4:0] tmp_fu_644_p49;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_CS_iter3_fsm = 2'd1;
#0 ap_CS_iter4_fsm = 2'd1;
#0 ap_CS_iter5_fsm = 2'd1;
#0 sf_fu_136 = 32'd0;
#0 i_fu_140 = 19'd0;
#0 p_0_0_07437_fu_144 = 15'd0;
#0 inputBuf_fu_148 = 8'd0;
#0 inputBuf_1_fu_152 = 8'd0;
#0 inputBuf_2_fu_156 = 8'd0;
#0 inputBuf_3_fu_160 = 8'd0;
#0 inputBuf_4_fu_164 = 8'd0;
#0 inputBuf_5_fu_168 = 8'd0;
#0 inputBuf_6_fu_172 = 8'd0;
#0 inputBuf_7_fu_176 = 8'd0;
#0 inputBuf_8_fu_180 = 8'd0;
#0 inputBuf_9_fu_184 = 8'd0;
#0 inputBuf_10_fu_188 = 8'd0;
#0 inputBuf_11_fu_192 = 8'd0;
#0 inputBuf_12_fu_196 = 8'd0;
#0 inputBuf_13_fu_200 = 8'd0;
#0 inputBuf_14_fu_204 = 8'd0;
#0 inputBuf_15_fu_208 = 8'd0;
#0 inputBuf_16_fu_212 = 8'd0;
#0 inputBuf_17_fu_216 = 8'd0;
#0 inputBuf_18_fu_220 = 8'd0;
#0 inputBuf_19_fu_224 = 8'd0;
#0 inputBuf_20_fu_228 = 8'd0;
#0 inputBuf_21_fu_232 = 8'd0;
#0 inputBuf_22_fu_236 = 8'd0;
#0 inputBuf_23_fu_240 = 8'd0;
#0 inputBuf_24_fu_244 = 8'd0;
#0 nf_1_fu_248 = 32'd0;
#0 ap_done_reg = 1'b0;
end

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_0_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_0_address0),
    .ce0(p_ZL7threshs_0_ce0_local),
    .q0(p_ZL7threshs_0_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_1_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_1_address0),
    .ce0(p_ZL7threshs_1_ce0_local),
    .q0(p_ZL7threshs_1_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_2_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_2_address0),
    .ce0(p_ZL7threshs_2_ce0_local),
    .q0(p_ZL7threshs_2_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_3_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_3_address0),
    .ce0(p_ZL7threshs_3_ce0_local),
    .q0(p_ZL7threshs_3_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_4_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_4_address0),
    .ce0(p_ZL7threshs_4_ce0_local),
    .q0(p_ZL7threshs_4_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_5_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_5_address0),
    .ce0(p_ZL7threshs_5_ce0_local),
    .q0(p_ZL7threshs_5_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_6_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_6_address0),
    .ce0(p_ZL7threshs_6_ce0_local),
    .q0(p_ZL7threshs_6_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_7_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_7_address0),
    .ce0(p_ZL7threshs_7_ce0_local),
    .q0(p_ZL7threshs_7_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_8_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_8_address0),
    .ce0(p_ZL7threshs_8_ce0_local),
    .q0(p_ZL7threshs_8_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_9_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_9_address0),
    .ce0(p_ZL7threshs_9_ce0_local),
    .q0(p_ZL7threshs_9_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_10_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_10_address0),
    .ce0(p_ZL7threshs_10_ce0_local),
    .q0(p_ZL7threshs_10_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_11_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_11_address0),
    .ce0(p_ZL7threshs_11_ce0_local),
    .q0(p_ZL7threshs_11_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_12_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_12_address0),
    .ce0(p_ZL7threshs_12_ce0_local),
    .q0(p_ZL7threshs_12_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_13_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_13_address0),
    .ce0(p_ZL7threshs_13_ce0_local),
    .q0(p_ZL7threshs_13_q0)
);

MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch_p_ZL7threshs_14_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
p_ZL7threshs_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_14_address0),
    .ce0(p_ZL7threshs_14_ce0_local),
    .q0(p_ZL7threshs_14_q0)
);

(* dissolve_hierarchy = "yes" *) MVAU_hls_0_sparsemux_51_5_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 5'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 5'h2 ),
    .din2_WIDTH( 8 ),
    .CASE3( 5'h3 ),
    .din3_WIDTH( 8 ),
    .CASE4( 5'h4 ),
    .din4_WIDTH( 8 ),
    .CASE5( 5'h5 ),
    .din5_WIDTH( 8 ),
    .CASE6( 5'h6 ),
    .din6_WIDTH( 8 ),
    .CASE7( 5'h7 ),
    .din7_WIDTH( 8 ),
    .CASE8( 5'h8 ),
    .din8_WIDTH( 8 ),
    .CASE9( 5'h9 ),
    .din9_WIDTH( 8 ),
    .CASE10( 5'hA ),
    .din10_WIDTH( 8 ),
    .CASE11( 5'hB ),
    .din11_WIDTH( 8 ),
    .CASE12( 5'hC ),
    .din12_WIDTH( 8 ),
    .CASE13( 5'hD ),
    .din13_WIDTH( 8 ),
    .CASE14( 5'hE ),
    .din14_WIDTH( 8 ),
    .CASE15( 5'hF ),
    .din15_WIDTH( 8 ),
    .CASE16( 5'h10 ),
    .din16_WIDTH( 8 ),
    .CASE17( 5'h11 ),
    .din17_WIDTH( 8 ),
    .CASE18( 5'h12 ),
    .din18_WIDTH( 8 ),
    .CASE19( 5'h13 ),
    .din19_WIDTH( 8 ),
    .CASE20( 5'h14 ),
    .din20_WIDTH( 8 ),
    .CASE21( 5'h15 ),
    .din21_WIDTH( 8 ),
    .CASE22( 5'h16 ),
    .din22_WIDTH( 8 ),
    .CASE23( 5'h17 ),
    .din23_WIDTH( 8 ),
    .CASE24( 5'h18 ),
    .din24_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
sparsemux_51_5_8_1_1_U1(
    .din0(inputBuf_fu_148),
    .din1(inputBuf_1_fu_152),
    .din2(inputBuf_2_fu_156),
    .din3(inputBuf_3_fu_160),
    .din4(inputBuf_4_fu_164),
    .din5(inputBuf_5_fu_168),
    .din6(inputBuf_6_fu_172),
    .din7(inputBuf_7_fu_176),
    .din8(inputBuf_8_fu_180),
    .din9(inputBuf_9_fu_184),
    .din10(inputBuf_10_fu_188),
    .din11(inputBuf_11_fu_192),
    .din12(inputBuf_12_fu_196),
    .din13(inputBuf_13_fu_200),
    .din14(inputBuf_14_fu_204),
    .din15(inputBuf_15_fu_208),
    .din16(inputBuf_16_fu_212),
    .din17(inputBuf_17_fu_216),
    .din18(inputBuf_18_fu_220),
    .din19(inputBuf_19_fu_224),
    .din20(inputBuf_20_fu_228),
    .din21(inputBuf_21_fu_232),
    .din22(inputBuf_22_fu_236),
    .din23(inputBuf_23_fu_240),
    .din24(inputBuf_24_fu_244),
    .def(tmp_fu_644_p51),
    .sel(tmp_fu_644_p52),
    .dout(tmp_fu_644_p53)
);

MVAU_hls_0_mac_muladd_8ns_4s_15s_15_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 15 ))
mac_muladd_8ns_4s_15s_15_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1413_p0),
    .din1(W_packed_reg_1666),
    .din2(grp_fu_1413_p2),
    .ce(grp_fu_1413_ce),
    .dout(grp_fu_1413_p3)
);

MVAU_hls_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter3_fsm <= ap_ST_iter3_fsm_state0;
    end else begin
        ap_CS_iter3_fsm <= ap_NS_iter3_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter4_fsm <= ap_ST_iter4_fsm_state0;
    end else begin
        ap_CS_iter4_fsm <= ap_NS_iter4_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter5_fsm <= ap_ST_iter5_fsm_state0;
    end else begin
        ap_CS_iter5_fsm <= ap_NS_iter5_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_iter5_fsm_state6) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_state6_pp0_stage0_iter5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_iter5_fsm_state6) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (1'b0 == ap_block_state6_pp0_stage0_iter5))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0))) begin
        ap_phi_reg_pp0_iter1_inElem_reg_466 <= tmp_fu_644_p53;
    end else if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd23)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd0)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 
    1'd0) & (trunc_ln249_fu_559_p1 == 5'd2)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd3)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd4)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd5)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) 
    & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd6)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd7)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd8)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd9)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 
    1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd10)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd11)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd12)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd13)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) 
    & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd14)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd15)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd16)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd17)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) 
    & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd18)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd19)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd20)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd21)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) 
    | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd22)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (1'b1 == ap_CS_iter0_fsm_state1) & (((((((((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd30)) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd31))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd29))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd28))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd27))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd26))) | ((icmp_ln253_fu_563_p2 
    == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd25))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd24)))))) begin
        ap_phi_reg_pp0_iter1_inElem_reg_466 <= in0_V_TDATA;
    end else if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_phi_reg_pp0_iter1_inElem_reg_466 <= ap_phi_reg_pp0_iter0_inElem_reg_466;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_128)) begin
        if ((icmp_ln249_fu_547_p2 == 1'd0)) begin
            i_fu_140 <= i_2_fu_553_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_140 <= 19'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_128)) begin
        if (((icmp_ln249_fu_547_p2 == 1'd0) & (icmp_ln290_fu_893_p2 == 1'd1))) begin
            nf_1_fu_248 <= nf_3_fu_916_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            nf_1_fu_248 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_128)) begin
        if (((icmp_ln249_fu_547_p2 == 1'd0) & (icmp_ln290_fu_893_p2 == 1'd1))) begin
            sf_fu_136 <= 32'd0;
        end else if (((icmp_ln249_fu_547_p2 == 1'd0) & (icmp_ln290_fu_893_p2 == 1'd0))) begin
            sf_fu_136 <= sf_2_fu_887_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            sf_fu_136 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        W_packed_reg_1666 <= W_packed_fu_877_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln249_reg_1620 <= icmp_ln249_fu_547_p2;
        icmp_ln272_reg_1671 <= icmp_ln272_fu_881_p2;
        icmp_ln290_reg_1676 <= icmp_ln290_fu_893_p2;
        nf_2_reg_1615 <= ap_sig_allocacmp_nf_2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        add_ln218_11_reg_1800 <= add_ln218_11_fu_1305_p2;
        add_ln218_1_reg_1790 <= add_ln218_1_fu_1253_p2;
        add_ln218_8_reg_1795 <= add_ln218_8_fu_1279_p2;
        icmp_ln108_3_reg_1770 <= icmp_ln108_3_fu_1043_p2;
        icmp_ln108_4_reg_1775 <= icmp_ln108_4_fu_1052_p2;
        icmp_ln108_5_reg_1780 <= icmp_ln108_5_fu_1061_p2;
        icmp_ln108_6_reg_1785 <= icmp_ln108_6_fu_1074_p2;
        icmp_ln249_reg_1620_pp0_iter4_reg <= icmp_ln249_reg_1620_pp0_iter3_reg;
        icmp_ln290_reg_1676_pp0_iter4_reg <= icmp_ln290_reg_1676_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln249_reg_1620_pp0_iter1_reg <= icmp_ln249_reg_1620;
        icmp_ln272_reg_1671_pp0_iter1_reg <= icmp_ln272_reg_1671;
        icmp_ln290_reg_1676_pp0_iter1_reg <= icmp_ln290_reg_1676;
        nf_2_reg_1615_pp0_iter1_reg <= nf_2_reg_1615;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln249_reg_1620_pp0_iter2_reg <= icmp_ln249_reg_1620_pp0_iter1_reg;
        icmp_ln272_reg_1671_pp0_iter2_reg <= icmp_ln272_reg_1671_pp0_iter1_reg;
        icmp_ln290_reg_1676_pp0_iter2_reg <= icmp_ln290_reg_1676_pp0_iter1_reg;
        nf_2_reg_1615_pp0_iter2_reg <= nf_2_reg_1615_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        icmp_ln249_reg_1620_pp0_iter3_reg <= icmp_ln249_reg_1620_pp0_iter2_reg;
        icmp_ln290_reg_1676_pp0_iter3_reg <= icmp_ln290_reg_1676_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd10))) begin
        inputBuf_10_fu_188 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd11))) begin
        inputBuf_11_fu_192 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd12))) begin
        inputBuf_12_fu_196 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd13))) begin
        inputBuf_13_fu_200 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd14))) begin
        inputBuf_14_fu_204 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd15))) begin
        inputBuf_15_fu_208 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd16))) begin
        inputBuf_16_fu_212 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd17))) begin
        inputBuf_17_fu_216 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd18))) begin
        inputBuf_18_fu_220 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd19))) begin
        inputBuf_19_fu_224 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd1))) begin
        inputBuf_1_fu_152 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd20))) begin
        inputBuf_20_fu_228 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd21))) begin
        inputBuf_21_fu_232 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd22))) begin
        inputBuf_22_fu_236 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd23))) begin
        inputBuf_23_fu_240 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (1'b1 == ap_CS_iter0_fsm_state1) & (((((((((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd30)) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd31))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd29))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd28))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd27))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd26))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd25))) | ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd24))))) begin
        inputBuf_24_fu_244 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd2))) begin
        inputBuf_2_fu_156 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd3))) begin
        inputBuf_3_fu_160 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd4))) begin
        inputBuf_4_fu_164 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd5))) begin
        inputBuf_5_fu_168 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd6))) begin
        inputBuf_6_fu_172 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd7))) begin
        inputBuf_7_fu_176 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd8))) begin
        inputBuf_8_fu_180 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd9))) begin
        inputBuf_9_fu_184 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (icmp_ln253_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (trunc_ln249_fu_559_p1 == 5'd0))) begin
        inputBuf_fu_148 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter4_fsm_state5) & (icmp_ln249_reg_1620_pp0_iter3_reg == 1'd0))) begin
        p_0_0_07437_fu_144 <= grp_fu_1413_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter1_fsm_state2_blk = 1'b0;

assign ap_ST_iter2_fsm_state3_blk = 1'b0;

assign ap_ST_iter3_fsm_state4_blk = 1'b0;

assign ap_ST_iter4_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state6_pp0_stage0_iter5)) begin
        ap_ST_iter5_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_iter5_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter5_fsm_state6) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_state6_pp0_stage0_iter5))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter5_fsm_state0) & (1'b1 == ap_CS_iter4_fsm_state0) & (1'b1 == ap_CS_iter3_fsm_state0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 19'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_140;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_nf_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_nf_2 = nf_1_fu_248;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter4_fsm_state5) & (icmp_ln249_reg_1620_pp0_iter3_reg == 1'd0))) begin
        ap_sig_allocacmp_p_0_0_07437_load = grp_fu_1413_p3;
    end else begin
        ap_sig_allocacmp_p_0_0_07437_load = p_0_0_07437_fu_144;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_sf_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_sf_1 = sf_fu_136;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4)) | (~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter4_fsm_state5)) | (~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter1_fsm_state2)) | (~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter2_fsm_state3)))) begin
        grp_fu_1413_ce = 1'b1;
    end else begin
        grp_fu_1413_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op84_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b1))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (ap_predicate_op84_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter5_fsm_state6) & (ap_predicate_op301_write_state6 == 1'b1))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter5_fsm_state6) & (1'b0 == ap_block_state6_pp0_stage0_iter5) & (ap_predicate_op301_write_state6 == 1'b1))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_0_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_10_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_11_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_12_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_13_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_14_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_1_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_2_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_3_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_4_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_5_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_6_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_7_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_8_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        p_ZL7threshs_9_ce0_local = 1'b1;
    end else begin
        p_ZL7threshs_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
        weights_V_TDATA_blk_n = weights_V_TVALID;
    end else begin
        weights_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln249_fu_547_p2 == 1'd0))) begin
        weights_V_TREADY = 1'b1;
    end else begin
        weights_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter0_fsm_state1) & (1'b0 == ap_block_state1_pp0_stage0_iter0))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & (1'b1 == ap_block_state1_pp0_stage0_iter0))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b0 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter3_fsm)
        ap_ST_iter3_fsm_state4 : begin
            if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b0 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end
        end
        ap_ST_iter3_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter3_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter4_fsm)
        ap_ST_iter4_fsm_state5 : begin
            if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end else if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b0 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end
        end
        ap_ST_iter4_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter4_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter5_fsm)
        ap_ST_iter5_fsm_state6 : begin
            if (((1'b0 == ap_CS_iter4_fsm_state5) & (1'b0 == ap_block_state6_pp0_stage0_iter5))) begin
                ap_NS_iter5_fsm = ap_ST_iter5_fsm_state0;
            end else if ((((1'b1 == ap_CS_iter4_fsm_state5) & (1'b0 == ap_block_state6_pp0_stage0_iter5)) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b0 == ap_block_state6_pp0_stage0_iter5) & (icmp_ln249_reg_1620_pp0_iter4_reg == 1'd1)))) begin
                ap_NS_iter5_fsm = ap_ST_iter5_fsm_state6;
            end else begin
                ap_NS_iter5_fsm = ap_ST_iter5_fsm_state6;
            end
        end
        ap_ST_iter5_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
                ap_NS_iter5_fsm = ap_ST_iter5_fsm_state6;
            end else begin
                ap_NS_iter5_fsm = ap_ST_iter5_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter5_fsm = 'bx;
        end
    endcase
end

assign W_packed_fu_877_p1 = weights_V_TDATA[3:0];

assign add_ln218_10_fu_1295_p2 = (zext_ln218_12_fu_1220_p1 + zext_ln218_13_fu_1243_p1);

assign add_ln218_11_fu_1305_p2 = (zext_ln218_22_fu_1301_p1 + zext_ln218_21_fu_1291_p1);

assign add_ln218_12_fu_1396_p2 = (zext_ln218_23_fu_1393_p1 + zext_ln218_20_fu_1390_p1);

assign add_ln218_1_fu_1253_p2 = (add_ln218_fu_1247_p2 + zext_ln218_fu_1012_p1);

assign add_ln218_2_fu_1354_p2 = (zext_ln218_2_fu_1320_p1 + zext_ln218_3_fu_1329_p1);

assign add_ln218_3_fu_1364_p2 = (zext_ln218_4_fu_1338_p1 + zext_ln218_5_fu_1347_p1);

assign add_ln218_4_fu_1374_p2 = (zext_ln218_16_fu_1370_p1 + zext_ln218_15_fu_1360_p1);

assign add_ln218_5_fu_1380_p2 = (add_ln218_4_fu_1374_p2 + zext_ln218_14_fu_1351_p1);

assign add_ln218_6_fu_1259_p2 = (zext_ln218_6_fu_1094_p1 + zext_ln218_7_fu_1113_p1);

assign add_ln218_7_fu_1269_p2 = (zext_ln218_8_fu_1132_p1 + zext_ln218_9_fu_1151_p1);

assign add_ln218_8_fu_1279_p2 = (zext_ln218_19_fu_1275_p1 + zext_ln218_18_fu_1265_p1);

assign add_ln218_9_fu_1285_p2 = (zext_ln218_10_fu_1174_p1 + zext_ln218_11_fu_1197_p1);

assign add_ln218_fu_1247_p2 = (zext_ln215_fu_989_p1 + zext_ln218_1_fu_1031_p1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

assign ap_CS_iter3_fsm_state0 = ap_CS_iter3_fsm[32'd0];

assign ap_CS_iter3_fsm_state4 = ap_CS_iter3_fsm[32'd1];

assign ap_CS_iter4_fsm_state0 = ap_CS_iter4_fsm[32'd0];

assign ap_CS_iter4_fsm_state5 = ap_CS_iter4_fsm[32'd1];

assign ap_CS_iter5_fsm_state0 = ap_CS_iter5_fsm[32'd0];

assign ap_CS_iter5_fsm_state6 = ap_CS_iter5_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((weights_V_TVALID == 1'b0) & (icmp_ln249_fu_547_p2 == 1'd0)) | ((ap_predicate_op84_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((ap_predicate_op301_write_state6 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_128 = (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter5_fsm_state6) & (1'b1 == ap_block_state6_pp0_stage0_iter5))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_inElem_reg_466 = 'bx;

always @ (*) begin
    ap_predicate_op301_write_state6 = ((icmp_ln290_reg_1676_pp0_iter4_reg == 1'd1) & (icmp_ln249_reg_1620_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op84_read_state1 = ((icmp_ln253_fu_563_p2 == 1'd1) & (icmp_ln249_fu_547_p2 == 1'd0));
end

assign ap_ready = ap_ready_sig;

assign grp_fu_1413_p0 = grp_fu_1413_p00;

assign grp_fu_1413_p00 = ap_phi_reg_pp0_iter1_inElem_reg_466;

assign grp_fu_1413_p2 = ((icmp_ln272_reg_1671_pp0_iter2_reg[0:0] == 1'b1) ? 15'd0 : ap_sig_allocacmp_p_0_0_07437_load);

assign i_2_fu_553_p2 = (ap_sig_allocacmp_i_1 + 19'd1);

assign icmp_ln108_10_fu_1140_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_10_fu_1136_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_11_fu_1163_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_11_fu_1159_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_12_fu_1186_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_12_fu_1182_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_13_fu_1209_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_13_fu_1205_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_14_fu_1232_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_14_fu_1228_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_1_fu_1001_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_1_fu_997_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_2_fu_1020_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_2_fu_1016_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_3_fu_1043_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_3_fu_1039_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_4_fu_1052_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_4_fu_1048_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_5_fu_1061_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_5_fu_1057_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_6_fu_1074_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_6_fu_1070_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_7_fu_1083_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_7_fu_1079_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_8_fu_1102_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_8_fu_1098_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_9_fu_1121_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_9_fu_1117_p1)) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_978_p2 = (($signed(grp_fu_1413_p3) < $signed(zext_ln108_fu_974_p1)) ? 1'b1 : 1'b0);

assign icmp_ln249_fu_547_p2 = ((ap_sig_allocacmp_i_1 == 19'd270000) ? 1'b1 : 1'b0);

assign icmp_ln253_fu_563_p2 = ((ap_sig_allocacmp_nf_2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_881_p2 = ((ap_sig_allocacmp_sf_1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln290_fu_893_p2 = ((sf_2_fu_887_p2 == 32'd25) ? 1'b1 : 1'b0);

assign icmp_ln302_fu_910_p2 = ((nf_fu_904_p2 == 32'd12) ? 1'b1 : 1'b0);

assign idxprom2_i_fu_956_p1 = nf_2_reg_1615_pp0_iter2_reg;

assign nf_3_fu_916_p3 = ((icmp_ln302_fu_910_p2[0:0] == 1'b1) ? 32'd0 : nf_fu_904_p2);

assign nf_fu_904_p2 = (ap_sig_allocacmp_nf_2 + 32'd1);

assign out_V_TDATA = result_2_fu_1402_p2;

assign p_ZL7threshs_0_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_10_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_11_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_12_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_13_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_14_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_1_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_2_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_3_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_4_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_5_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_6_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_7_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_8_address0 = idxprom2_i_fu_956_p1;

assign p_ZL7threshs_9_address0 = idxprom2_i_fu_956_p1;

assign result_2_fu_1402_p2 = (add_ln218_12_fu_1396_p2 + zext_ln218_17_fu_1386_p1);

assign result_fu_983_p2 = (icmp_ln108_fu_978_p2 ^ 1'd1);

assign sext_ln108_1_fu_1035_p1 = $signed(p_ZL7threshs_3_q0);

assign sext_ln108_2_fu_1066_p1 = $signed(p_ZL7threshs_6_q0);

assign sext_ln108_3_fu_1155_p1 = $signed(p_ZL7threshs_11_q0);

assign sext_ln108_4_fu_1178_p1 = $signed(p_ZL7threshs_12_q0);

assign sext_ln108_5_fu_1201_p1 = $signed(p_ZL7threshs_13_q0);

assign sext_ln108_6_fu_1224_p1 = $signed(p_ZL7threshs_14_q0);

assign sext_ln108_fu_993_p1 = $signed(p_ZL7threshs_1_q0);

assign sf_2_fu_887_p2 = (ap_sig_allocacmp_sf_1 + 32'd1);

assign tmp_fu_644_p51 = 'bx;

assign tmp_fu_644_p52 = ap_sig_allocacmp_sf_1[4:0];

assign trunc_ln249_fu_559_p1 = ap_sig_allocacmp_sf_1[4:0];

assign xor_ln108_10_fu_1168_p2 = (icmp_ln108_11_fu_1163_p2 ^ 1'd1);

assign xor_ln108_11_fu_1191_p2 = (icmp_ln108_12_fu_1186_p2 ^ 1'd1);

assign xor_ln108_12_fu_1214_p2 = (icmp_ln108_13_fu_1209_p2 ^ 1'd1);

assign xor_ln108_13_fu_1237_p2 = (icmp_ln108_14_fu_1232_p2 ^ 1'd1);

assign xor_ln108_1_fu_1025_p2 = (icmp_ln108_2_fu_1020_p2 ^ 1'd1);

assign xor_ln108_2_fu_1315_p2 = (icmp_ln108_3_reg_1770 ^ 1'd1);

assign xor_ln108_3_fu_1324_p2 = (icmp_ln108_4_reg_1775 ^ 1'd1);

assign xor_ln108_4_fu_1333_p2 = (icmp_ln108_5_reg_1780 ^ 1'd1);

assign xor_ln108_5_fu_1342_p2 = (icmp_ln108_6_reg_1785 ^ 1'd1);

assign xor_ln108_6_fu_1088_p2 = (icmp_ln108_7_fu_1083_p2 ^ 1'd1);

assign xor_ln108_7_fu_1107_p2 = (icmp_ln108_8_fu_1102_p2 ^ 1'd1);

assign xor_ln108_8_fu_1126_p2 = (icmp_ln108_9_fu_1121_p2 ^ 1'd1);

assign xor_ln108_9_fu_1145_p2 = (icmp_ln108_10_fu_1140_p2 ^ 1'd1);

assign xor_ln108_fu_1006_p2 = (icmp_ln108_1_fu_1001_p2 ^ 1'd1);

assign zext_ln108_10_fu_1136_p1 = p_ZL7threshs_10_q0;

assign zext_ln108_11_fu_1159_p1 = $unsigned(sext_ln108_3_fu_1155_p1);

assign zext_ln108_12_fu_1182_p1 = $unsigned(sext_ln108_4_fu_1178_p1);

assign zext_ln108_13_fu_1205_p1 = $unsigned(sext_ln108_5_fu_1201_p1);

assign zext_ln108_14_fu_1228_p1 = $unsigned(sext_ln108_6_fu_1224_p1);

assign zext_ln108_1_fu_997_p1 = $unsigned(sext_ln108_fu_993_p1);

assign zext_ln108_2_fu_1016_p1 = p_ZL7threshs_2_q0;

assign zext_ln108_3_fu_1039_p1 = $unsigned(sext_ln108_1_fu_1035_p1);

assign zext_ln108_4_fu_1048_p1 = p_ZL7threshs_4_q0;

assign zext_ln108_5_fu_1057_p1 = p_ZL7threshs_5_q0;

assign zext_ln108_6_fu_1070_p1 = $unsigned(sext_ln108_2_fu_1066_p1);

assign zext_ln108_7_fu_1079_p1 = p_ZL7threshs_7_q0;

assign zext_ln108_8_fu_1098_p1 = p_ZL7threshs_8_q0;

assign zext_ln108_9_fu_1117_p1 = p_ZL7threshs_9_q0;

assign zext_ln108_fu_974_p1 = p_ZL7threshs_0_q0;

assign zext_ln215_fu_989_p1 = result_fu_983_p2;

assign zext_ln218_10_fu_1174_p1 = xor_ln108_10_fu_1168_p2;

assign zext_ln218_11_fu_1197_p1 = xor_ln108_11_fu_1191_p2;

assign zext_ln218_12_fu_1220_p1 = xor_ln108_12_fu_1214_p2;

assign zext_ln218_13_fu_1243_p1 = xor_ln108_13_fu_1237_p2;

assign zext_ln218_14_fu_1351_p1 = add_ln218_1_reg_1790;

assign zext_ln218_15_fu_1360_p1 = add_ln218_2_fu_1354_p2;

assign zext_ln218_16_fu_1370_p1 = add_ln218_3_fu_1364_p2;

assign zext_ln218_17_fu_1386_p1 = add_ln218_5_fu_1380_p2;

assign zext_ln218_18_fu_1265_p1 = add_ln218_6_fu_1259_p2;

assign zext_ln218_19_fu_1275_p1 = add_ln218_7_fu_1269_p2;

assign zext_ln218_1_fu_1031_p1 = xor_ln108_1_fu_1025_p2;

assign zext_ln218_20_fu_1390_p1 = add_ln218_8_reg_1795;

assign zext_ln218_21_fu_1291_p1 = add_ln218_9_fu_1285_p2;

assign zext_ln218_22_fu_1301_p1 = add_ln218_10_fu_1295_p2;

assign zext_ln218_23_fu_1393_p1 = add_ln218_11_reg_1800;

assign zext_ln218_2_fu_1320_p1 = xor_ln108_2_fu_1315_p2;

assign zext_ln218_3_fu_1329_p1 = xor_ln108_3_fu_1324_p2;

assign zext_ln218_4_fu_1338_p1 = xor_ln108_4_fu_1333_p2;

assign zext_ln218_5_fu_1347_p1 = xor_ln108_5_fu_1342_p2;

assign zext_ln218_6_fu_1094_p1 = xor_ln108_6_fu_1088_p2;

assign zext_ln218_7_fu_1113_p1 = xor_ln108_7_fu_1107_p2;

assign zext_ln218_8_fu_1132_p1 = xor_ln108_8_fu_1126_p2;

assign zext_ln218_9_fu_1151_p1 = xor_ln108_9_fu_1145_p2;

assign zext_ln218_fu_1012_p1 = xor_ln108_fu_1006_p2;

endmodule //MVAU_hls_0_Matrix_Vector_Activate_Stream_Batch
